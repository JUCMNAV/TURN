/**
 * generated by Xtext 2.12.0
 */
package org.xtext.project.turn.turn;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>COMPONENTKIND</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.project.turn.turn.TurnPackage#getCOMPONENTKIND()
 * @model
 * @generated
 */
public enum COMPONENTKIND implements Enumerator
{
  /**
   * The '<em><b>Team</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TEAM_VALUE
   * @generated
   * @ordered
   */
  TEAM(0, "team", "team"),

  /**
   * The '<em><b>Object</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OBJECT_VALUE
   * @generated
   * @ordered
   */
  OBJECT(1, "object", "object"),

  /**
   * The '<em><b>Process</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROCESS_VALUE
   * @generated
   * @ordered
   */
  PROCESS(2, "process", "process"),

  /**
   * The '<em><b>Agent</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #AGENT_VALUE
   * @generated
   * @ordered
   */
  AGENT(3, "agent", "agent"),

  /**
   * The '<em><b>Actor</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ACTOR_VALUE
   * @generated
   * @ordered
   */
  ACTOR(4, "actor", "actor"),

  /**
   * The '<em><b>Parent</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PARENT_VALUE
   * @generated
   * @ordered
   */
  PARENT(5, "parent", "parent");

  /**
   * The '<em><b>Team</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Team</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #TEAM
   * @model name="team"
   * @generated
   * @ordered
   */
  public static final int TEAM_VALUE = 0;

  /**
   * The '<em><b>Object</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Object</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #OBJECT
   * @model name="object"
   * @generated
   * @ordered
   */
  public static final int OBJECT_VALUE = 1;

  /**
   * The '<em><b>Process</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Process</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PROCESS
   * @model name="process"
   * @generated
   * @ordered
   */
  public static final int PROCESS_VALUE = 2;

  /**
   * The '<em><b>Agent</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Agent</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #AGENT
   * @model name="agent"
   * @generated
   * @ordered
   */
  public static final int AGENT_VALUE = 3;

  /**
   * The '<em><b>Actor</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Actor</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #ACTOR
   * @model name="actor"
   * @generated
   * @ordered
   */
  public static final int ACTOR_VALUE = 4;

  /**
   * The '<em><b>Parent</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Parent</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PARENT
   * @model name="parent"
   * @generated
   * @ordered
   */
  public static final int PARENT_VALUE = 5;

  /**
   * An array of all the '<em><b>COMPONENTKIND</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final COMPONENTKIND[] VALUES_ARRAY =
    new COMPONENTKIND[]
    {
      TEAM,
      OBJECT,
      PROCESS,
      AGENT,
      ACTOR,
      PARENT,
    };

  /**
   * A public read-only list of all the '<em><b>COMPONENTKIND</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<COMPONENTKIND> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>COMPONENTKIND</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static COMPONENTKIND get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      COMPONENTKIND result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>COMPONENTKIND</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static COMPONENTKIND getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      COMPONENTKIND result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>COMPONENTKIND</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static COMPONENTKIND get(int value)
  {
    switch (value)
    {
      case TEAM_VALUE: return TEAM;
      case OBJECT_VALUE: return OBJECT;
      case PROCESS_VALUE: return PROCESS;
      case AGENT_VALUE: return AGENT;
      case ACTOR_VALUE: return ACTOR;
      case PARENT_VALUE: return PARENT;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private COMPONENTKIND(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //COMPONENTKIND
