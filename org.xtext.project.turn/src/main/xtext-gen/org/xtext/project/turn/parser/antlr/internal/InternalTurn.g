/*
 * generated by Xtext 2.16.0-SNAPSHOT
 */
grammar InternalTurn;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.project.turn.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.project.turn.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.project.turn.services.TurnGrammarAccess;

}

@parser::members {

 	private TurnGrammarAccess grammarAccess;

    public InternalTurnParser(TokenStream input, TurnGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "URNspec";
   	}

   	@Override
   	protected TurnGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleURNspec
entryRuleURNspec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getURNspecRule()); }
	iv_ruleURNspec=ruleURNspec
	{ $current=$iv_ruleURNspec.current; }
	EOF;

// Rule URNspec
ruleURNspec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getURNspecAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='urnModel'
							{
								newLeafNode(otherlv_1, grammarAccess.getURNspecAccess().getUrnModelKeyword_0_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getURNspecAccess().getNameQualifiedNameParserRuleCall_0_1_0());
									}
									lv_name_2_0=ruleQualifiedName
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getURNspecRule());
										}
										set(
											$current,
											"name",
											lv_name_2_0,
											"org.xtext.project.turn.Turn.QualifiedName");
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								(
									{
										newCompositeNode(grammarAccess.getURNspecAccess().getInfoConcreteURNspecParserRuleCall_0_2_0());
									}
									lv_info_3_0=ruleConcreteURNspec
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getURNspecRule());
										}
										set(
											$current,
											"info",
											lv_info_3_0,
											"org.xtext.project.turn.Turn.ConcreteURNspec");
										afterParserOrEnumRuleCall();
									}
								)
							)?
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getActorsActorParserRuleCall_1_0());
								}
								lv_actors_4_0=ruleActor
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"actors",
										lv_actors_4_0,
										"org.xtext.project.turn.Turn.Actor");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2);
				}
							({true}?=>((
								lv_showAsMeansEnd_5_0='showAsMeansEnd'
								{
									newLeafNode(lv_showAsMeansEnd_5_0, grammarAccess.getURNspecAccess().getShowAsMeansEndShowAsMeansEndKeyword_2_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getURNspecRule());
									}
									setWithLastConsumed($current, "showAsMeansEnd", true, "showAsMeansEnd");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getStratGroupsStrategiesGroupParserRuleCall_3_0());
								}
								lv_stratGroups_6_0=ruleStrategiesGroup
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"stratGroups",
										lv_stratGroups_6_0,
										"org.xtext.project.turn.Turn.StrategiesGroup");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getStrategiesEvaluationStrategyParserRuleCall_4_0());
								}
								lv_strategies_7_0=ruleEvaluationStrategy
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"strategies",
										lv_strategies_7_0,
										"org.xtext.project.turn.Turn.EvaluationStrategy");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getIndConversionsIndicatorConversionParserRuleCall_5_0());
								}
								lv_indConversions_8_0=ruleIndicatorConversion
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"indConversions",
										lv_indConversions_8_0,
										"org.xtext.project.turn.Turn.IndicatorConversion");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getContribContextGroupsContributionContextGroupParserRuleCall_6_0());
								}
								lv_contribContextGroups_9_0=ruleContributionContextGroup
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"contribContextGroups",
										lv_contribContextGroups_9_0,
										"org.xtext.project.turn.Turn.ContributionContextGroup");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getContribContextsContributionContextParserRuleCall_7_0());
								}
								lv_contribContexts_10_0=ruleContributionContext
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"contribContexts",
										lv_contribContexts_10_0,
										"org.xtext.project.turn.Turn.ContributionContext");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getUcmMapsUCMmapParserRuleCall_8_0());
								}
								lv_ucmMaps_11_0=ruleUCMmap
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"ucmMaps",
										lv_ucmMaps_11_0,
										"org.xtext.project.turn.Turn.UCMmap");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getScenGroupsScenarioGroupParserRuleCall_9_0());
								}
								lv_scenGroups_12_0=ruleScenarioGroup
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"scenGroups",
										lv_scenGroups_12_0,
										"org.xtext.project.turn.Turn.ScenarioGroup");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getScenDefsScenarioDefParserRuleCall_10_0());
								}
								lv_scenDefs_13_0=ruleScenarioDef
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"scenDefs",
										lv_scenDefs_13_0,
										"org.xtext.project.turn.Turn.ScenarioDef");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getVariablesVariableParserRuleCall_11_0());
								}
								lv_variables_14_0=ruleVariable
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"variables",
										lv_variables_14_0,
										"org.xtext.project.turn.Turn.Variable");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 12)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 12);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getEnumTypesEnumerationTypeParserRuleCall_12_0());
								}
								lv_enumTypes_15_0=ruleEnumerationType
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"enumTypes",
										lv_enumTypes_15_0,
										"org.xtext.project.turn.Turn.EnumerationType");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 13)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 13);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getConcernsConcernParserRuleCall_13_0());
								}
								lv_concerns_16_0=ruleConcern
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"concerns",
										lv_concerns_16_0,
										"org.xtext.project.turn.Turn.Concern");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 14)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 14);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getUrnlinksURNlinkParserRuleCall_14_0());
								}
								lv_urnlinks_17_0=ruleURNlink
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"urnlinks",
										lv_urnlinks_17_0,
										"org.xtext.project.turn.Turn.URNlink");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 15)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 15);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getURNspecAccess().getMetadataMetadataParserRuleCall_15_0());
								}
								lv_metadata_18_0=ruleMetadata
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getURNspecRule());
									}
									add(
										$current,
										"metadata",
										lv_metadata_18_0,
										"org.xtext.project.turn.Turn.Metadata");
									afterParserOrEnumRuleCall();
								}
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getURNspecAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getURNspecAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleConcreteURNspec
entryRuleConcreteURNspec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteURNspecRule()); }
	iv_ruleConcreteURNspec=ruleConcreteURNspec
	{ $current=$iv_ruleConcreteURNspec.current; }
	EOF;

// Rule ConcreteURNspec
ruleConcreteURNspec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getConcreteURNspecAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='description'
		{
			newLeafNode(otherlv_1, grammarAccess.getConcreteURNspecAccess().getDescriptionKeyword_1());
		}
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getConcreteURNspecAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteURNspecRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='author'
		{
			newLeafNode(otherlv_3, grammarAccess.getConcreteURNspecAccess().getAuthorKeyword_3());
		}
		(
			(
				lv_author_4_0=RULE_STRING
				{
					newLeafNode(lv_author_4_0, grammarAccess.getConcreteURNspecAccess().getAuthorSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteURNspecRule());
					}
					setWithLastConsumed(
						$current,
						"author",
						lv_author_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='created'
		{
			newLeafNode(otherlv_5, grammarAccess.getConcreteURNspecAccess().getCreatedKeyword_5());
		}
		(
			(
				lv_created_6_0=RULE_STRING
				{
					newLeafNode(lv_created_6_0, grammarAccess.getConcreteURNspecAccess().getCreatedSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteURNspecRule());
					}
					setWithLastConsumed(
						$current,
						"created",
						lv_created_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='modified'
		{
			newLeafNode(otherlv_7, grammarAccess.getConcreteURNspecAccess().getModifiedKeyword_7());
		}
		(
			(
				lv_modified_8_0=RULE_STRING
				{
					newLeafNode(lv_modified_8_0, grammarAccess.getConcreteURNspecAccess().getModifiedSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteURNspecRule());
					}
					setWithLastConsumed(
						$current,
						"modified",
						lv_modified_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='version'
		{
			newLeafNode(otherlv_9, grammarAccess.getConcreteURNspecAccess().getVersionKeyword_9());
		}
		(
			(
				lv_specVersion_10_0=RULE_STRING
				{
					newLeafNode(lv_specVersion_10_0, grammarAccess.getConcreteURNspecAccess().getSpecVersionSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteURNspecRule());
					}
					setWithLastConsumed(
						$current,
						"specVersion",
						lv_specVersion_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='urnVersion'
		{
			newLeafNode(otherlv_11, grammarAccess.getConcreteURNspecAccess().getUrnVersionKeyword_11());
		}
		(
			(
				lv_urnVersion_12_0=RULE_STRING
				{
					newLeafNode(lv_urnVersion_12_0, grammarAccess.getConcreteURNspecAccess().getUrnVersionSTRINGTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteURNspecRule());
					}
					setWithLastConsumed(
						$current,
						"urnVersion",
						lv_urnVersion_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getConcreteURNspecAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleConcern
entryRuleConcern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcernRule()); }
	iv_ruleConcern=ruleConcern
	{ $current=$iv_ruleConcern.current; }
	EOF;

// Rule Concern
ruleConcern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='concern'
		{
			newLeafNode(otherlv_0, grammarAccess.getConcernAccess().getConcernKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcernAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcernRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConcernAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcernRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getConcernAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcernAccess().getConditionConditionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcernRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"org.xtext.project.turn.Turn.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcernRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConcernAccess().getElementURNmodelElementCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getConcernAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConcernRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConcernAccess().getElementsURNmodelElementCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLongName
entryRuleLongName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLongNameRule()); }
	iv_ruleLongName=ruleLongName
	{ $current=$iv_ruleLongName.current; }
	EOF;

// Rule LongName
ruleLongName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLongNameAccess().getLongNameAction_0(),
					$current);
			}
		)
		(
			otherlv_1='#'
			{
				newLeafNode(otherlv_1, grammarAccess.getLongNameAccess().getNumberSignKeyword_1_0());
			}
			(
				(
					(
						lv_longname_2_1=RULE_ID
						{
							newLeafNode(lv_longname_2_1, grammarAccess.getLongNameAccess().getLongnameIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLongNameRule());
							}
							setWithLastConsumed(
								$current,
								"longname",
								lv_longname_2_1,
								"org.eclipse.xtext.common.Terminals.ID");
						}
						    |
						lv_longname_2_2=RULE_STRING
						{
							newLeafNode(lv_longname_2_2, grammarAccess.getLongNameAccess().getLongnameSTRINGTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLongNameRule());
							}
							setWithLastConsumed(
								$current,
								"longname",
								lv_longname_2_2,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getExpressionTextParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.project.turn.Turn.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getRightSquareBracketKeyword_2());
		}
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getInfoConcreteConditionParserRuleCall_3_1_0());
					}
					lv_info_4_0=ruleConcreteCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"info",
							lv_info_4_0,
							"org.xtext.project.turn.Turn.ConcreteCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleConcreteCondition
entryRuleConcreteCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteConditionRule()); }
	iv_ruleConcreteCondition=ruleConcreteCondition
	{ $current=$iv_ruleConcreteCondition.current; }
	EOF;

// Rule ConcreteCondition
ruleConcreteCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_label_0_0=RULE_STRING
				{
					newLeafNode(lv_label_0_0, grammarAccess.getConcreteConditionAccess().getLabelSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteConditionRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_description_1_0=RULE_STRING
				{
					newLeafNode(lv_description_1_0, grammarAccess.getConcreteConditionAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteConditionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleURNlink
entryRuleURNlink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getURNlinkRule()); }
	iv_ruleURNlink=ruleURNlink
	{ $current=$iv_ruleURNlink.current; }
	EOF;

// Rule URNlink
ruleURNlink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='link'
		{
			newLeafNode(otherlv_0, grammarAccess.getURNlinkAccess().getLinkKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getURNlinkAccess().getNameQualifiedNameParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getURNlinkRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getURNlinkAccess().getLongNameLongNameParserRuleCall_1_1_0());
					}
					lv_longName_2_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getURNlinkRule());
						}
						set(
							$current,
							"longName",
							lv_longName_2_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getURNlinkAccess().getColonKeyword_1_2());
			}
		)?
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getURNlinkAccess().getTypeKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getURNlinkAccess().getTypeTextParserRuleCall_2_1_0());
					}
					lv_type_5_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getURNlinkRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"org.xtext.project.turn.Turn.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getURNlinkRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getURNlinkAccess().getFromElemURNmodelElementCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='-->'
		{
			newLeafNode(otherlv_7, grammarAccess.getURNlinkAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getURNlinkRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getURNlinkAccess().getToElemURNmodelElementCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMetadata
entryRuleMetadata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataRule()); }
	iv_ruleMetadata=ruleMetadata
	{ $current=$iv_ruleMetadata.current; }
	EOF;

// Rule Metadata
ruleMetadata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetadataAccess().getMetadataKeyword_0());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMetadataRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMetadataAccess().getElemURNmodelElementCrossReference_1_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getMetadataAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetadataRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataAccess().getValueTextParserRuleCall_4_0());
				}
				lv_value_5_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"org.xtext.project.turn.Turn.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actor'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='importance'
			{
				newLeafNode(otherlv_4, grammarAccess.getActorAccess().getImportanceKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0());
						}
						lv_importance_5_0=ruleImportanceType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							set(
								$current,
								"importance",
								lv_importance_5_0,
								"org.xtext.project.turn.Turn.ImportanceType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0());
						}
						lv_importanceQuantitative_6_0=ruleQuantitativeValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							set(
								$current,
								"importanceQuantitative",
								lv_importanceQuantitative_6_0,
								"org.xtext.project.turn.Turn.QuantitativeValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getElemsIntentionalElementParserRuleCall_5_0());
				}
				lv_elems_7_0=ruleIntentionalElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"elems",
						lv_elems_7_0,
						"org.xtext.project.turn.Turn.IntentionalElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleIntentionalElement
entryRuleIntentionalElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentionalElementRule()); }
	iv_ruleIntentionalElement=ruleIntentionalElement
	{ $current=$iv_ruleIntentionalElement.current; }
	EOF;

// Rule IntentionalElement
ruleIntentionalElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentionalElementAccess().getTypeIntentionalElementTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleIntentionalElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.project.turn.Turn.IntentionalElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentionalElementAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentionalElementAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getIntentionalElementAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='importance'
			{
				newLeafNode(otherlv_4, grammarAccess.getIntentionalElementAccess().getImportanceKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIntentionalElementAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0());
						}
						lv_importance_5_0=ruleImportanceType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
							}
							set(
								$current,
								"importance",
								lv_importance_5_0,
								"org.xtext.project.turn.Turn.ImportanceType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getIntentionalElementAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0());
						}
						lv_importanceQuantitative_6_0=ruleQuantitativeValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
							}
							set(
								$current,
								"importanceQuantitative",
								lv_importanceQuantitative_6_0,
								"org.xtext.project.turn.Turn.QuantitativeValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			otherlv_7='unit'
			{
				newLeafNode(otherlv_7, grammarAccess.getIntentionalElementAccess().getUnitKeyword_5_0());
			}
			(
				(
					lv_unit_8_0=RULE_STRING
					{
						newLeafNode(lv_unit_8_0, grammarAccess.getIntentionalElementAccess().getUnitSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntentionalElementRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentionalElementAccess().getLinksSrcElementLinkParserRuleCall_6_0());
				}
				lv_linksSrc_9_0=ruleElementLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
					}
					add(
						$current,
						"linksSrc",
						lv_linksSrc_9_0,
						"org.xtext.project.turn.Turn.ElementLink");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getIntentionalElementAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleElementLink
entryRuleElementLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementLinkRule()); }
	iv_ruleElementLink=ruleElementLink
	{ $current=$iv_ruleElementLink.current; }
	EOF;

// Rule ElementLink
ruleElementLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementLinkAccess().getContributionParserRuleCall_0());
		}
		this_Contribution_0=ruleContribution
		{
			$current = $this_Contribution_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementLinkAccess().getDecompositionParserRuleCall_1());
		}
		this_Decomposition_1=ruleDecomposition
		{
			$current = $this_Decomposition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementLinkAccess().getDependencyParserRuleCall_2());
		}
		this_Dependency_2=ruleDependency
		{
			$current = $this_Dependency_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleContribution
entryRuleContribution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContributionRule()); }
	iv_ruleContribution=ruleContribution
	{ $current=$iv_ruleContribution.current; }
	EOF;

// Rule Contribution
ruleContribution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContributionAccess().getNameQualifiedNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContributionRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getContributionAccess().getLongNameLongNameParserRuleCall_0_1_0());
					}
					lv_longName_1_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContributionRule());
						}
						set(
							$current,
							"longName",
							lv_longName_1_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_2='contributesTo'
		{
			newLeafNode(otherlv_2, grammarAccess.getContributionAccess().getContributesToKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContributionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getContributionAccess().getDestIntentionalElementCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_correlation_4_0='correlated'
				{
					newLeafNode(lv_correlation_4_0, grammarAccess.getContributionAccess().getCorrelationCorrelatedKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContributionRule());
					}
					setWithLastConsumed($current, "correlation", true, "correlated");
				}
			)
		)?
		otherlv_5='with'
		{
			newLeafNode(otherlv_5, grammarAccess.getContributionAccess().getWithKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContributionAccess().getContributionContributionTypeEnumRuleCall_5_0_0());
					}
					lv_contribution_6_0=ruleContributionType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContributionRule());
						}
						set(
							$current,
							"contribution",
							lv_contribution_6_0,
							"org.xtext.project.turn.Turn.ContributionType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getContributionAccess().getQuantitativeContributionQuantitativeValueParserRuleCall_5_1_0());
					}
					lv_quantitativeContribution_7_0=ruleQuantitativeValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContributionRule());
						}
						set(
							$current,
							"quantitativeContribution",
							lv_quantitativeContribution_7_0,
							"org.xtext.project.turn.Turn.QuantitativeValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDecomposition
entryRuleDecomposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecompositionRule()); }
	iv_ruleDecomposition=ruleDecomposition
	{ $current=$iv_ruleDecomposition.current; }
	EOF;

// Rule Decomposition
ruleDecomposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDecompositionAccess().getNameQualifiedNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecompositionRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDecompositionAccess().getLongNameLongNameParserRuleCall_0_1_0());
					}
					lv_longName_1_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecompositionRule());
						}
						set(
							$current,
							"longName",
							lv_longName_1_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDecompositionAccess().getDecompositionTypeDecompositionTypeEnumRuleCall_1_0());
				}
				lv_decompositionType_2_0=ruleDecompositionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDecompositionRule());
					}
					set(
						$current,
						"decompositionType",
						lv_decompositionType_2_0,
						"org.xtext.project.turn.Turn.DecompositionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='decomposes'
		{
			newLeafNode(otherlv_3, grammarAccess.getDecompositionAccess().getDecomposesKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecompositionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDecompositionAccess().getDestIntentionalElementCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	iv_ruleDependency=ruleDependency
	{ $current=$iv_ruleDependency.current; }
	EOF;

// Rule Dependency
ruleDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDependencyAccess().getNameQualifiedNameParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDependencyRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDependencyAccess().getLongNameLongNameParserRuleCall_0_1_0());
					}
					lv_longName_1_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDependencyRule());
						}
						set(
							$current,
							"longName",
							lv_longName_1_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_2='dependsOn'
		{
			newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getDependsOnKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDependencyAccess().getDestIntentionalElementCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArtificialRule
entryRuleArtificialRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArtificialRuleRule()); }
	iv_ruleArtificialRule=ruleArtificialRule
	{ $current=$iv_ruleArtificialRule.current; }
	EOF;

// Rule ArtificialRule
ruleArtificialRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_longName_0_0=RULE_STRING
			{
				newLeafNode(lv_longName_0_0, grammarAccess.getArtificialRuleAccess().getLongNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getArtificialRuleRule());
				}
				setWithLastConsumed(
					$current,
					"longName",
					lv_longName_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)?
;

// Entry rule entryRuleStrategiesGroup
entryRuleStrategiesGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrategiesGroupRule()); }
	iv_ruleStrategiesGroup=ruleStrategiesGroup
	{ $current=$iv_ruleStrategiesGroup.current; }
	EOF;

// Rule StrategiesGroup
ruleStrategiesGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='strategiesGroup'
		{
			newLeafNode(otherlv_0, grammarAccess.getStrategiesGroupAccess().getStrategiesGroupKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStrategiesGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStrategiesGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStrategiesGroupAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStrategiesGroupRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getStrategiesGroupAccess().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStrategiesGroupRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getStrategiesGroupAccess().getEvalStrategyEvaluationStrategyCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getStrategiesGroupAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStrategiesGroupRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getStrategiesGroupAccess().getEvalStrategiesEvaluationStrategyCrossReference_5_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEvaluationStrategy
entryRuleEvaluationStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvaluationStrategyRule()); }
	iv_ruleEvaluationStrategy=ruleEvaluationStrategy
	{ $current=$iv_ruleEvaluationStrategy.current; }
	EOF;

// Rule EvaluationStrategy
ruleEvaluationStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='strategy'
		{
			newLeafNode(otherlv_0, grammarAccess.getEvaluationStrategyAccess().getStrategyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvaluationStrategyAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getInfoConcreteStrategyParserRuleCall_4_0());
				}
				lv_info_4_0=ruleConcreteStrategy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
					}
					set(
						$current,
						"info",
						lv_info_4_0,
						"org.xtext.project.turn.Turn.ConcreteStrategy");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getEvaluationsEvaluationParserRuleCall_5_0());
				}
				lv_evaluations_5_0=ruleEvaluation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
					}
					add(
						$current,
						"evaluations",
						lv_evaluations_5_0,
						"org.xtext.project.turn.Turn.Evaluation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_6='includes'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvaluationStrategyAccess().getIncludesKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvaluationStrategyRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyEvaluationStrategyCrossReference_6_1_0());
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getEvaluationStrategyAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEvaluationStrategyRule());
							}
						}
						otherlv_9=RULE_ID
						{
							newLeafNode(otherlv_9, grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesEvaluationStrategyCrossReference_6_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getEvaluationStrategyAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleConcreteStrategy
entryRuleConcreteStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteStrategyRule()); }
	iv_ruleConcreteStrategy=ruleConcreteStrategy
	{ $current=$iv_ruleConcreteStrategy.current; }
	EOF;

// Rule ConcreteStrategy
ruleConcreteStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='author'
		{
			newLeafNode(otherlv_0, grammarAccess.getConcreteStrategyAccess().getAuthorKeyword_0());
		}
		(
			(
				lv_author_1_0=RULE_STRING
				{
					newLeafNode(lv_author_1_0, grammarAccess.getConcreteStrategyAccess().getAuthorSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteStrategyRule());
					}
					setWithLastConsumed(
						$current,
						"author",
						lv_author_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEvaluation
entryRuleEvaluation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvaluationRule()); }
	iv_ruleEvaluation=ruleEvaluation
	{ $current=$iv_ruleEvaluation.current; }
	EOF;

// Rule Evaluation
ruleEvaluation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvaluationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEvaluationAccess().getIntElementIntentionalElementCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_exceeds_1_0='exceeding'
				{
					newLeafNode(lv_exceeds_1_0, grammarAccess.getEvaluationAccess().getExceedsExceedingKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvaluationRule());
					}
					setWithLastConsumed($current, "exceeds", true, "exceeding");
				}
			)
		)?
		(
			(
				otherlv_2='evaluation'
				{
					newLeafNode(otherlv_2, grammarAccess.getEvaluationAccess().getEvaluationKeyword_2_0_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getEvaluationAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_2_0_1_0_0());
							}
							lv_qualitativeEvaluation_3_0=ruleQualitativeLabel
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getEvaluationRule());
								}
								set(
									$current,
									"qualitativeEvaluation",
									lv_qualitativeEvaluation_3_0,
									"org.xtext.project.turn.Turn.QualitativeLabel");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getEvaluationAccess().getEvaluationQuantitativeValueParserRuleCall_2_0_1_1_0());
							}
							lv_evaluation_4_0=ruleQuantitativeValue
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getEvaluationRule());
								}
								set(
									$current,
									"evaluation",
									lv_evaluation_4_0,
									"org.xtext.project.turn.Turn.QuantitativeValue");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEvaluationAccess().getIndicatorEvalIndicatorEvaluationParserRuleCall_2_1_0_0());
						}
						lv_indicatorEval_5_0=ruleIndicatorEvaluation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvaluationRule());
							}
							set(
								$current,
								"indicatorEval",
								lv_indicatorEval_5_0,
								"org.xtext.project.turn.Turn.IndicatorEvaluation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6='convertedWith'
				{
					newLeafNode(otherlv_6, grammarAccess.getEvaluationAccess().getConvertedWithKeyword_2_1_1());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEvaluationRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getEvaluationAccess().getConversionIndicatorConversionCrossReference_2_1_2_0());
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleIndicatorEvaluation
entryRuleIndicatorEvaluation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndicatorEvaluationRule()); }
	iv_ruleIndicatorEvaluation=ruleIndicatorEvaluation
	{ $current=$iv_ruleIndicatorEvaluation.current; }
	EOF;

// Rule IndicatorEvaluation
ruleIndicatorEvaluation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='real'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndicatorEvaluationAccess().getRealKeyword_0());
		}
		(
			(
				(
					lv_realWorldLabel_1_0=RULE_STRING
					{
						newLeafNode(lv_realWorldLabel_1_0, grammarAccess.getIndicatorEvaluationAccess().getRealWorldLabelSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndicatorEvaluationRule());
						}
						setWithLastConsumed(
							$current,
							"realWorldLabel",
							lv_realWorldLabel_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					lv_realWorldValue_2_0=RULE_INT
					{
						newLeafNode(lv_realWorldValue_2_0, grammarAccess.getIndicatorEvaluationAccess().getRealWorldValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndicatorEvaluationRule());
						}
						setWithLastConsumed(
							$current,
							"realWorldValue",
							lv_realWorldValue_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIndicatorConversion
entryRuleIndicatorConversion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndicatorConversionRule()); }
	iv_ruleIndicatorConversion=ruleIndicatorConversion
	{ $current=$iv_ruleIndicatorConversion.current; }
	EOF;

// Rule IndicatorConversion
ruleIndicatorConversion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIndicatorConversionAccess().getLinearConversionParserRuleCall_0());
		}
		this_LinearConversion_0=ruleLinearConversion
		{
			$current = $this_LinearConversion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIndicatorConversionAccess().getQualToQMappingsParserRuleCall_1());
		}
		this_QualToQMappings_1=ruleQualToQMappings
		{
			$current = $this_QualToQMappings_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLinearConversion
entryRuleLinearConversion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinearConversionRule()); }
	iv_ruleLinearConversion=ruleLinearConversion
	{ $current=$iv_ruleLinearConversion.current; }
	EOF;

// Rule LinearConversion
ruleLinearConversion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='linearConversion'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinearConversionAccess().getLinearConversionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinearConversionAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinearConversionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLinearConversionAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinearConversionRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLinearConversionAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='unit'
		{
			newLeafNode(otherlv_4, grammarAccess.getLinearConversionAccess().getUnitKeyword_4());
		}
		(
			(
				lv_unit_5_0=RULE_STRING
				{
					newLeafNode(lv_unit_5_0, grammarAccess.getLinearConversionAccess().getUnitSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinearConversionRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='target'
		{
			newLeafNode(otherlv_6, grammarAccess.getLinearConversionAccess().getTargetKeyword_6());
		}
		(
			(
				lv_targetValue_7_0=RULE_INT
				{
					newLeafNode(lv_targetValue_7_0, grammarAccess.getLinearConversionAccess().getTargetValueINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinearConversionRule());
					}
					setWithLastConsumed(
						$current,
						"targetValue",
						lv_targetValue_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='threshold'
		{
			newLeafNode(otherlv_8, grammarAccess.getLinearConversionAccess().getThresholdKeyword_8());
		}
		(
			(
				lv_thresholdValue_9_0=RULE_INT
				{
					newLeafNode(lv_thresholdValue_9_0, grammarAccess.getLinearConversionAccess().getThresholdValueINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinearConversionRule());
					}
					setWithLastConsumed(
						$current,
						"thresholdValue",
						lv_thresholdValue_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10='worst'
		{
			newLeafNode(otherlv_10, grammarAccess.getLinearConversionAccess().getWorstKeyword_10());
		}
		(
			(
				lv_worstValue_11_0=RULE_INT
				{
					newLeafNode(lv_worstValue_11_0, grammarAccess.getLinearConversionAccess().getWorstValueINTTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinearConversionRule());
					}
					setWithLastConsumed(
						$current,
						"worstValue",
						lv_worstValue_11_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getLinearConversionAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleQualToQMappings
entryRuleQualToQMappings returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualToQMappingsRule()); }
	iv_ruleQualToQMappings=ruleQualToQMappings
	{ $current=$iv_ruleQualToQMappings.current; }
	EOF;

// Rule QualToQMappings
ruleQualToQMappings returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mappingConversion'
		{
			newLeafNode(otherlv_0, grammarAccess.getQualToQMappingsAccess().getMappingConversionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQualToQMappingsAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualToQMappingsRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQualToQMappingsAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualToQMappingsRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getQualToQMappingsAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='unit'
		{
			newLeafNode(otherlv_4, grammarAccess.getQualToQMappingsAccess().getUnitKeyword_4());
		}
		(
			(
				lv_unit_5_0=RULE_STRING
				{
					newLeafNode(lv_unit_5_0, grammarAccess.getQualToQMappingsAccess().getUnitSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualToQMappingsRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQualToQMappingsAccess().getMappingsQualToQMappingParserRuleCall_6_0());
				}
				lv_mappings_6_0=ruleQualToQMapping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualToQMappingsRule());
					}
					add(
						$current,
						"mappings",
						lv_mappings_6_0,
						"org.xtext.project.turn.Turn.QualToQMapping");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getQualToQMappingsAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleQualToQMapping
entryRuleQualToQMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualToQMappingRule()); }
	iv_ruleQualToQMapping=ruleQualToQMapping
	{ $current=$iv_ruleQualToQMapping.current; }
	EOF;

// Rule QualToQMapping
ruleQualToQMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_exceeds_0_0='exceeding'
				{
					newLeafNode(lv_exceeds_0_0, grammarAccess.getQualToQMappingAccess().getExceedsExceedingKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualToQMappingRule());
					}
					setWithLastConsumed($current, "exceeds", true, "exceeding");
				}
			)
		)?
		otherlv_1='real'
		{
			newLeafNode(otherlv_1, grammarAccess.getQualToQMappingAccess().getRealKeyword_1());
		}
		(
			(
				lv_realWorldLabel_2_0=RULE_STRING
				{
					newLeafNode(lv_realWorldLabel_2_0, grammarAccess.getQualToQMappingAccess().getRealWorldLabelSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualToQMappingRule());
					}
					setWithLastConsumed(
						$current,
						"realWorldLabel",
						lv_realWorldLabel_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='-->'
		{
			newLeafNode(otherlv_3, grammarAccess.getQualToQMappingAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQualToQMappingAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_4_0_0());
					}
					lv_qualitativeEvaluation_4_0=ruleQualitativeLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualToQMappingRule());
						}
						set(
							$current,
							"qualitativeEvaluation",
							lv_qualitativeEvaluation_4_0,
							"org.xtext.project.turn.Turn.QualitativeLabel");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getQualToQMappingAccess().getEvaluationQuantitativeValueParserRuleCall_4_1_0());
					}
					lv_evaluation_5_0=ruleQuantitativeValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualToQMappingRule());
						}
						set(
							$current,
							"evaluation",
							lv_evaluation_5_0,
							"org.xtext.project.turn.Turn.QuantitativeValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleContributionContextGroup
entryRuleContributionContextGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContributionContextGroupRule()); }
	iv_ruleContributionContextGroup=ruleContributionContextGroup
	{ $current=$iv_ruleContributionContextGroup.current; }
	EOF;

// Rule ContributionContextGroup
ruleContributionContextGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contributionContextGroup'
		{
			newLeafNode(otherlv_0, grammarAccess.getContributionContextGroupAccess().getContributionContextGroupKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContributionContextGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContributionContextGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContributionContextGroupAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContributionContextGroupRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getContributionContextGroupAccess().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContributionContextGroupRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getContributionContextGroupAccess().getContribContributionContextCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getContributionContextGroupAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContributionContextGroupRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getContributionContextGroupAccess().getContribsContributionContextCrossReference_5_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleContributionContext
entryRuleContributionContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContributionContextRule()); }
	iv_ruleContributionContext=ruleContributionContext
	{ $current=$iv_ruleContributionContext.current; }
	EOF;

// Rule ContributionContext
ruleContributionContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contributionContext'
		{
			newLeafNode(otherlv_0, grammarAccess.getContributionContextAccess().getContributionContextKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContributionContextAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContributionContextRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContributionContextAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContributionContextRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getContributionContextAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContributionContextAccess().getChangesContributionChangeParserRuleCall_4_0());
				}
				lv_changes_4_0=ruleContributionChange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContributionContextRule());
					}
					add(
						$current,
						"changes",
						lv_changes_4_0,
						"org.xtext.project.turn.Turn.ContributionChange");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='includes'
			{
				newLeafNode(otherlv_5, grammarAccess.getContributionContextAccess().getIncludesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContributionContextRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getContributionContextAccess().getIncludedContextContributionContextCrossReference_5_1_0());
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getContributionContextAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getContributionContextRule());
							}
						}
						otherlv_8=RULE_ID
						{
							newLeafNode(otherlv_8, grammarAccess.getContributionContextAccess().getIncludedContextsContributionContextCrossReference_5_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getContributionContextAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleContributionChange
entryRuleContributionChange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContributionChangeRule()); }
	iv_ruleContributionChange=ruleContributionChange
	{ $current=$iv_ruleContributionChange.current; }
	EOF;

// Rule ContributionChange
ruleContributionChange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContributionChangeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getContributionChangeAccess().getContributionContributionCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='with'
		{
			newLeafNode(otherlv_1, grammarAccess.getContributionChangeAccess().getWithKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContributionChangeAccess().getNewContributionContributionTypeEnumRuleCall_2_0_0());
					}
					lv_newContribution_2_0=ruleContributionType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContributionChangeRule());
						}
						set(
							$current,
							"newContribution",
							lv_newContribution_2_0,
							"org.xtext.project.turn.Turn.ContributionType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getContributionChangeAccess().getNewQuantitativeContributionQuantitativeValueParserRuleCall_2_1_0());
					}
					lv_newQuantitativeContribution_3_0=ruleQuantitativeValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContributionChangeRule());
						}
						set(
							$current,
							"newQuantitativeContribution",
							lv_newQuantitativeContribution_3_0,
							"org.xtext.project.turn.Turn.QuantitativeValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleQuantitativeValue
entryRuleQuantitativeValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQuantitativeValueRule()); }
	iv_ruleQuantitativeValue=ruleQuantitativeValue
	{ $current=$iv_ruleQuantitativeValue.current.getText(); }
	EOF;

// Rule QuantitativeValue
ruleQuantitativeValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQuantitativeValueAccess().getHyphenMinusKeyword_0_0());
			}
			    |
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQuantitativeValueAccess().getPlusSignKeyword_0_1());
			}
		)?
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getQuantitativeValueAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleUCMmap
entryRuleUCMmap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUCMmapRule()); }
	iv_ruleUCMmap=ruleUCMmap
	{ $current=$iv_ruleUCMmap.current; }
	EOF;

// Rule UCMmap
ruleUCMmap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_singleton_0_0='singleton'
				{
					newLeafNode(lv_singleton_0_0, grammarAccess.getUCMmapAccess().getSingletonSingletonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUCMmapRule());
					}
					setWithLastConsumed($current, "singleton", true, "singleton");
				}
			)
		)?
		otherlv_1='map'
		{
			newLeafNode(otherlv_1, grammarAccess.getUCMmapAccess().getMapKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUCMmapAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCMmapRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUCMmapAccess().getLongNameLongNameParserRuleCall_3_0());
				}
				lv_longName_3_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCMmapRule());
					}
					set(
						$current,
						"longName",
						lv_longName_3_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getUCMmapAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUCMmapAccess().getStubsStubDeclarationParserRuleCall_5_0());
				}
				lv_stubs_5_0=ruleStubDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCMmapRule());
					}
					add(
						$current,
						"stubs",
						lv_stubs_5_0,
						"org.xtext.project.turn.Turn.StubDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUCMmapAccess().getPathsPathParserRuleCall_6_0());
				}
				lv_paths_6_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCMmapRule());
					}
					add(
						$current,
						"paths",
						lv_paths_6_0,
						"org.xtext.project.turn.Turn.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUCMmapAccess().getComponentsComponentRefParserRuleCall_7_0());
				}
				lv_components_7_0=ruleComponentRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUCMmapRule());
					}
					add(
						$current,
						"components",
						lv_components_7_0,
						"org.xtext.project.turn.Turn.ComponentRef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getUCMmapAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePath
entryRulePath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current; }
	EOF;

// Rule Path
rulePath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPathAccess().getStartPointStartPointParserRuleCall_0_0());
				}
				lv_startPoint_0_0=ruleStartPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPathRule());
					}
					set(
						$current,
						"startPoint",
						lv_startPoint_0_0,
						"org.xtext.project.turn.Turn.StartPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPathAccess().getPathBodyPathBodyParserRuleCall_1_0());
				}
				lv_pathBody_1_0=rulePathBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPathRule());
					}
					set(
						$current,
						"pathBody",
						lv_pathBody_1_0,
						"org.xtext.project.turn.Turn.PathBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStartPoint
entryRuleStartPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartPointRule()); }
	iv_ruleStartPoint=ruleStartPoint
	{ $current=$iv_ruleStartPoint.current; }
	EOF;

// Rule StartPoint
ruleStartPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='start'
			{
				newLeafNode(otherlv_0, grammarAccess.getStartPointAccess().getStartKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_0_1_0_0());
						}
						lv_name_1_0=ruleQualifiedName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStartPointRule());
							}
							set(
								$current,
								"name",
								lv_name_1_0,
								"org.xtext.project.turn.Turn.QualifiedName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_0_1_1_0());
						}
						lv_longName_2_0=ruleLongName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStartPointRule());
							}
							set(
								$current,
								"longName",
								lv_longName_2_0,
								"org.xtext.project.turn.Turn.LongName");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getStartPointAccess().getPreconditionConditionParserRuleCall_0_2_0());
					}
					lv_precondition_3_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartPointRule());
						}
						set(
							$current,
							"precondition",
							lv_precondition_3_0,
							"org.xtext.project.turn.Turn.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStartPointAccess().getFailKindFailureKindParserRuleCall_1_0_0());
					}
					lv_failKind_4_0=ruleFailureKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartPointRule());
						}
						set(
							$current,
							"failKind",
							lv_failKind_4_0,
							"org.xtext.project.turn.Turn.FailureKind");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_1_1_0());
					}
					lv_name_5_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartPointRule());
						}
						set(
							$current,
							"name",
							lv_name_5_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_1_2_0());
					}
					lv_longName_6_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartPointRule());
						}
						set(
							$current,
							"longName",
							lv_longName_6_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7='catches'
				{
					newLeafNode(otherlv_7, grammarAccess.getStartPointAccess().getCatchesKeyword_1_3_0());
				}
				otherlv_8='[['
				{
					newLeafNode(otherlv_8, grammarAccess.getStartPointAccess().getLeftSquareBracketLeftSquareBracketKeyword_1_3_1());
				}
				(
					(
						lv_catches_9_0=RULE_STRING
						{
							newLeafNode(lv_catches_9_0, grammarAccess.getStartPointAccess().getCatchesSTRINGTerminalRuleCall_1_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStartPointRule());
							}
							setWithLastConsumed(
								$current,
								"catches",
								lv_catches_9_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				otherlv_10=']]'
				{
					newLeafNode(otherlv_10, grammarAccess.getStartPointAccess().getRightSquareBracketRightSquareBracketKeyword_1_3_3());
				}
			)?
		)
	)
;

// Entry rule entryRuleFailureKind
entryRuleFailureKind returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFailureKindRule()); }
	iv_ruleFailureKind=ruleFailureKind
	{ $current=$iv_ruleFailureKind.current.getText(); }
	EOF;

// Rule FailureKind
ruleFailureKind returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='abort'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFailureKindAccess().getAbortKeyword_0());
		}
		    |
		kw='failure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFailureKindAccess().getFailureKeyword_1());
		}
	)
;

// Entry rule entryRulePathBody
entryRulePathBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathBodyRule()); }
	iv_rulePathBody=rulePathBody
	{ $current=$iv_rulePathBody.current; }
	EOF;

// Rule PathBody
rulePathBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPathBodyAccess().getPathWithRegularEndParserRuleCall());
	}
	this_PathWithRegularEnd_0=rulePathWithRegularEnd
	{
		$current = $this_PathWithRegularEnd_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePathWithRegularEnd
entryRulePathWithRegularEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathWithRegularEndRule()); }
	iv_rulePathWithRegularEnd=rulePathWithRegularEnd
	{ $current=$iv_rulePathWithRegularEnd.current; }
	EOF;

// Rule PathWithRegularEnd
rulePathWithRegularEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPathWithRegularEndAccess().getPathWithReferencedEndParserRuleCall_0());
		}
		this_PathWithReferencedEnd_0=rulePathWithReferencedEnd
		{
			$current = $this_PathWithReferencedEnd_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPathWithRegularEndAccess().getPathEndRegularEndParserRuleCall_1_0());
				}
				lv_pathEnd_1_0=ruleRegularEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPathWithRegularEndRule());
					}
					set(
						$current,
						"pathEnd",
						lv_pathEnd_1_0,
						"org.xtext.project.turn.Turn.RegularEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulePathWithReferencedEnd
entryRulePathWithReferencedEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathWithReferencedEndRule()); }
	iv_rulePathWithReferencedEnd=rulePathWithReferencedEnd
	{ $current=$iv_rulePathWithReferencedEnd.current; }
	EOF;

// Rule PathWithReferencedEnd
rulePathWithReferencedEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPathWithReferencedEndAccess().getPathWithReferencedStubParserRuleCall_0());
		}
		this_PathWithReferencedStub_0=rulePathWithReferencedStub
		{
			$current = $this_PathWithReferencedStub_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPathWithReferencedEndRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getPathWithReferencedEndAccess().getReferencedEndReferencedEndCrossReference_1_0_0());
					}
				)
			)?
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getPathWithReferencedEndAccess().getSemicolonKeyword_1_1());
			}
		)?
	)
;

// Entry rule entryRulePathWithReferencedStub
entryRulePathWithReferencedStub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathWithReferencedStubRule()); }
	iv_rulePathWithReferencedStub=rulePathWithReferencedStub
	{ $current=$iv_rulePathWithReferencedStub.current; }
	EOF;

// Rule PathWithReferencedStub
rulePathWithReferencedStub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPathWithReferencedStubAccess().getPathBodyNodesParserRuleCall_0());
		}
		this_PathBodyNodes_0=rulePathBodyNodes
		{
			$current = $this_PathBodyNodes_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getPathWithReferencedStubAccess().getInKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPathWithReferencedStubRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubStubCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPathWithReferencedStubAccess().getIndexPositiveIntegerParserRuleCall_1_2_0());
					}
					lv_index_3_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPathWithReferencedStubRule());
						}
						set(
							$current,
							"index",
							lv_index_3_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getPathWithReferencedStubAccess().getSemicolonKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRulePathBodyNodes
entryRulePathBodyNodes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathBodyNodesRule()); }
	iv_rulePathBodyNodes=rulePathBodyNodes
	{ $current=$iv_rulePathBodyNodes.current; }
	EOF;

// Rule PathBodyNodes
rulePathBodyNodes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPathBodyNodesAccess().getPathBodyNodesAction_0(),
					$current);
			}
		)
		{
			newCompositeNode(grammarAccess.getPathBodyNodesAccess().getArrowParserRuleCall_1());
		}
		ruleArrow
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPathBodyNodesAccess().getPathNodesPathBodyNodeParserRuleCall_2_0_0());
					}
					lv_pathNodes_2_0=rulePathBodyNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPathBodyNodesRule());
						}
						add(
							$current,
							"pathNodes",
							lv_pathNodes_2_0,
							"org.xtext.project.turn.Turn.PathBodyNode");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='->'
			{
				newLeafNode(otherlv_3, grammarAccess.getPathBodyNodesAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
		)*
	)
;

// Entry rule entryRuleArrow
entryRuleArrow returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrowRule()); }
	iv_ruleArrow=ruleArrow
	{ $current=$iv_ruleArrow.current.getText(); }
	EOF;

// Rule Arrow
ruleArrow returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='->'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword());
	}
;

// Entry rule entryRulePathBodyNode
entryRulePathBodyNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathBodyNodeRule()); }
	iv_rulePathBodyNode=rulePathBodyNode
	{ $current=$iv_rulePathBodyNode.current; }
	EOF;

// Rule PathBodyNode
rulePathBodyNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getAndJoinParserRuleCall_0());
		}
		this_AndJoin_0=ruleAndJoin
		{
			$current = $this_AndJoin_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getRespRefParserRuleCall_1());
		}
		this_RespRef_1=ruleRespRef
		{
			$current = $this_RespRef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getOrJoinParserRuleCall_2());
		}
		this_OrJoin_2=ruleOrJoin
		{
			$current = $this_OrJoin_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getWaitingPlaceParserRuleCall_3());
		}
		this_WaitingPlace_3=ruleWaitingPlace
		{
			$current = $this_WaitingPlace_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getFailurePointParserRuleCall_4());
		}
		this_FailurePoint_4=ruleFailurePoint
		{
			$current = $this_FailurePoint_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getTimerParserRuleCall_5());
		}
		this_Timer_5=ruleTimer
		{
			$current = $this_Timer_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getConnectParserRuleCall_6());
		}
		this_Connect_6=ruleConnect
		{
			$current = $this_Connect_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRegularEnd
entryRuleRegularEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularEndRule()); }
	iv_ruleRegularEnd=ruleRegularEnd
	{ $current=$iv_ruleRegularEnd.current; }
	EOF;

// Rule RegularEnd
ruleRegularEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRegularEndAccess().getEndpointWithConnectParserRuleCall_0());
		}
		this_EndpointWithConnect_0=ruleEndpointWithConnect
		{
			$current = $this_EndpointWithConnect_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularEndAccess().getAndForkParserRuleCall_1());
		}
		this_AndFork_1=ruleAndFork
		{
			$current = $this_AndFork_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularEndAccess().getOrForkParserRuleCall_2());
		}
		this_OrFork_2=ruleOrFork
		{
			$current = $this_OrFork_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularEndAccess().getStubParserRuleCall_3());
		}
		this_Stub_3=ruleStub
		{
			$current = $this_Stub_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEndpointWithConnect
entryRuleEndpointWithConnect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndpointWithConnectRule()); }
	iv_ruleEndpointWithConnect=ruleEndpointWithConnect
	{ $current=$iv_ruleEndpointWithConnect.current; }
	EOF;

// Rule EndpointWithConnect
ruleEndpointWithConnect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEndpointWithConnectAccess().getRegularEndEndPointParserRuleCall_0_0());
				}
				lv_regularEnd_0_0=ruleEndPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEndpointWithConnectRule());
					}
					set(
						$current,
						"regularEnd",
						lv_regularEnd_0_0,
						"org.xtext.project.turn.Turn.EndPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getEndpointWithConnectAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEndpointWithConnectAccess().getConnectConnectParserRuleCall_1_1_0());
					}
					lv_connect_2_0=ruleConnect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEndpointWithConnectRule());
						}
						set(
							$current,
							"connect",
							lv_connect_2_0,
							"org.xtext.project.turn.Turn.Connect");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRespRef
entryRuleRespRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRespRefRule()); }
	iv_ruleRespRef=ruleRespRef
	{ $current=$iv_ruleRespRef.current; }
	EOF;

// Rule RespRef
ruleRespRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='X'
		{
			newLeafNode(otherlv_0, grammarAccess.getRespRefAccess().getXKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRespRefAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRespRefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRespRefAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRespRefRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrJoin
entryRuleOrJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrJoinRule()); }
	iv_ruleOrJoin=ruleOrJoin
	{ $current=$iv_ruleOrJoin.current; }
	EOF;

// Rule OrJoin
ruleOrJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrJoinAccess().getOrJoinAction_0(),
					$current);
			}
		)
		otherlv_1='join'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrJoinAccess().getJoinKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrJoinAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrJoinRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOrJoinAccess().getLongNameLongNameParserRuleCall_3_0());
				}
				lv_longName_3_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrJoinRule());
					}
					set(
						$current,
						"longName",
						lv_longName_3_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndJoin
entryRuleAndJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndJoinRule()); }
	iv_ruleAndJoin=ruleAndJoin
	{ $current=$iv_ruleAndJoin.current; }
	EOF;

// Rule AndJoin
ruleAndJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='synch'
			{
				newLeafNode(otherlv_0, grammarAccess.getAndJoinAccess().getSynchKeyword_0_0());
			}
			    |
			otherlv_1='sync'
			{
				newLeafNode(otherlv_1, grammarAccess.getAndJoinAccess().getSyncKeyword_0_1());
			}
			    |
			otherlv_2='|'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndJoinAccess().getVerticalLineKeyword_0_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAndJoinAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndJoinRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAndJoinAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_4_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndJoinRule());
					}
					set(
						$current,
						"longName",
						lv_longName_4_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWaitingPlace
entryRuleWaitingPlace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWaitingPlaceRule()); }
	iv_ruleWaitingPlace=ruleWaitingPlace
	{ $current=$iv_ruleWaitingPlace.current; }
	EOF;

// Rule WaitingPlace
ruleWaitingPlace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getWaitingPlaceAccess().getKindWAITKINDEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleWAITKIND
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"org.xtext.project.turn.Turn.WAITKIND");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='wait'
		{
			newLeafNode(otherlv_1, grammarAccess.getWaitingPlaceAccess().getWaitKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWaitingPlaceAccess().getNameQualifiedNameParserRuleCall_2_0_0());
					}
					lv_name_2_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getWaitingPlaceAccess().getLongNameLongNameParserRuleCall_2_1_0());
					}
					lv_longName_3_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
						}
						set(
							$current,
							"longName",
							lv_longName_3_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getWaitingPlaceAccess().getConditionConditionParserRuleCall_3_0());
				}
				lv_condition_4_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"org.xtext.project.turn.Turn.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTimer
entryRuleTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimerRule()); }
	iv_ruleTimer=ruleTimer
	{ $current=$iv_ruleTimer.current; }
	EOF;

// Rule Timer
ruleTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimerAccess().getTimerAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimerAccess().getKindWAITKINDEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruleWAITKIND
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimerRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"org.xtext.project.turn.Turn.WAITKIND");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='timer'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimerAccess().getTimerKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTimerAccess().getNameQualifiedNameParserRuleCall_3_0_0());
					}
					lv_name_3_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimerRule());
						}
						set(
							$current,
							"name",
							lv_name_3_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTimerAccess().getLongNameLongNameParserRuleCall_3_1_0());
					}
					lv_longName_4_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimerRule());
						}
						set(
							$current,
							"longName",
							lv_longName_4_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getTimerAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				otherlv_6='timeout'
				{
					newLeafNode(otherlv_6, grammarAccess.getTimerAccess().getTimeoutKeyword_4_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getTimerAccess().getTimeoutConditionConditionParserRuleCall_4_2_0());
					}
					lv_timeoutCondition_7_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimerRule());
						}
						set(
							$current,
							"timeoutCondition",
							lv_timeoutCondition_7_0,
							"org.xtext.project.turn.Turn.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getTimerAccess().getTimeoutPathPathBodyParserRuleCall_4_3_0());
					}
					lv_timeoutPath_8_0=rulePathBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimerRule());
						}
						set(
							$current,
							"timeoutPath",
							lv_timeoutPath_8_0,
							"org.xtext.project.turn.Turn.PathBody");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getTimerAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTimerAccess().getConditionConditionParserRuleCall_5_0());
				}
				lv_condition_10_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimerRule());
					}
					set(
						$current,
						"condition",
						lv_condition_10_0,
						"org.xtext.project.turn.Turn.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleConnect
entryRuleConnect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectRule()); }
	iv_ruleConnect=ruleConnect
	{ $current=$iv_ruleConnect.current; }
	EOF;

// Rule Connect
ruleConnect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trigger'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectAccess().getTriggerKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectAccess().getConnectsToConnectElementCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getConnectAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleFailurePoint
entryRuleFailurePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFailurePointRule()); }
	iv_ruleFailurePoint=ruleFailurePoint
	{ $current=$iv_ruleFailurePoint.current; }
	EOF;

// Rule FailurePoint
ruleFailurePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fail'
		{
			newLeafNode(otherlv_0, grammarAccess.getFailurePointAccess().getFailKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFailurePointAccess().getNameQualifiedNameParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFailurePointRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFailurePointAccess().getLongNameLongNameParserRuleCall_1_1_0());
					}
					lv_longName_2_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFailurePointRule());
						}
						set(
							$current,
							"longName",
							lv_longName_2_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_2_0_0_0());
						}
						lv_condition_3_0=ruleCondition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFailurePointRule());
							}
							set(
								$current,
								"condition",
								lv_condition_3_0,
								"org.xtext.project.turn.Turn.Condition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_2_0_1_0());
						}
						lv_failLabel_4_0=ruleFailureLabel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFailurePointRule());
							}
							set(
								$current,
								"failLabel",
								lv_failLabel_4_0,
								"org.xtext.project.turn.Turn.FailureLabel");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_2_1_0_0());
						}
						lv_failLabel_5_0=ruleFailureLabel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFailurePointRule());
							}
							set(
								$current,
								"failLabel",
								lv_failLabel_5_0,
								"org.xtext.project.turn.Turn.FailureLabel");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_2_1_1_0());
						}
						lv_condition_6_0=ruleCondition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFailurePointRule());
							}
							set(
								$current,
								"condition",
								lv_condition_6_0,
								"org.xtext.project.turn.Turn.Condition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleEndPoint
entryRuleEndPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndPointRule()); }
	iv_ruleEndPoint=ruleEndPoint
	{ $current=$iv_ruleEndPoint.current; }
	EOF;

// Rule EndPoint
ruleEndPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='end'
		{
			newLeafNode(otherlv_0, grammarAccess.getEndPointAccess().getEndKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEndPointAccess().getNameQualifiedNameParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEndPointRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEndPointAccess().getLongNameLongNameParserRuleCall_1_1_0());
					}
					lv_longName_2_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEndPointRule());
						}
						set(
							$current,
							"longName",
							lv_longName_2_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEndPointAccess().getConditionConditionParserRuleCall_2_0());
				}
				lv_condition_3_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEndPointRule());
					}
					set(
						$current,
						"condition",
						lv_condition_3_0,
						"org.xtext.project.turn.Turn.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getEndPointAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleOrFork
entryRuleOrFork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrForkRule()); }
	iv_ruleOrFork=ruleOrFork
	{ $current=$iv_ruleOrFork.current; }
	EOF;

// Rule OrFork
ruleOrFork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='or'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrForkAccess().getOrKeyword_0());
		}
		(
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getOrForkAccess().getNameQualifiedNameParserRuleCall_1_0_0_0_0());
							}
							lv_name_1_0=ruleQualifiedName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getOrForkRule());
								}
								set(
									$current,
									"name",
									lv_name_1_0,
									"org.xtext.project.turn.Turn.QualifiedName");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getOrForkAccess().getLongNameLongNameParserRuleCall_1_0_0_1_0());
							}
							lv_longName_2_0=ruleLongName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getOrForkRule());
								}
								set(
									$current,
									"longName",
									lv_longName_2_0,
									"org.xtext.project.turn.Turn.LongName");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getOrForkAccess().getLeftCurlyBracketKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrForkAccess().getBodyOrBodyParserRuleCall_1_0_2_0());
						}
						lv_body_4_0=ruleOrBody
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrForkRule());
							}
							set(
								$current,
								"body",
								lv_body_4_0,
								"org.xtext.project.turn.Turn.OrBody");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5='}'
				{
					newLeafNode(otherlv_5, grammarAccess.getOrForkAccess().getRightCurlyBracketKeyword_1_0_3());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getOrForkAccess().getConditionConditionParserRuleCall_1_1_0());
					}
					lv_condition_6_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrForkRule());
						}
						set(
							$current,
							"condition",
							lv_condition_6_0,
							"org.xtext.project.turn.Turn.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOrForkAccess().getConnectingOrBodyPathBodyParserRuleCall_2_0());
				}
				lv_connectingOrBody_7_0=rulePathBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrForkRule());
					}
					set(
						$current,
						"connectingOrBody",
						lv_connectingOrBody_7_0,
						"org.xtext.project.turn.Turn.PathBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleOrBody
entryRuleOrBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrBodyRule()); }
	iv_ruleOrBody=ruleOrBody
	{ $current=$iv_ruleOrBody.current; }
	EOF;

// Rule OrBody
ruleOrBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getOrBodyAccess().getElseOrForkBodyParserRuleCall());
	}
	this_ElseOrForkBody_0=ruleElseOrForkBody
	{
		$current = $this_ElseOrForkBody_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleElseOrForkBody
entryRuleElseOrForkBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseOrForkBodyRule()); }
	iv_ruleElseOrForkBody=ruleElseOrForkBody
	{ $current=$iv_ruleElseOrForkBody.current; }
	EOF;

// Rule ElseOrForkBody
ruleElseOrForkBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElseOrForkBodyAccess().getOrForkBodyParserRuleCall_0());
		}
		this_OrForkBody_0=ruleOrForkBody
		{
			$current = $this_OrForkBody_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='[else]'
			{
				newLeafNode(otherlv_1, grammarAccess.getElseOrForkBodyAccess().getElseKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElseOrForkBodyAccess().getElseBodyPathBodyParserRuleCall_1_1_0());
					}
					lv_elseBody_2_0=rulePathBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElseOrForkBodyRule());
						}
						set(
							$current,
							"elseBody",
							lv_elseBody_2_0,
							"org.xtext.project.turn.Turn.PathBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrForkBody
entryRuleOrForkBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrForkBodyRule()); }
	iv_ruleOrForkBody=ruleOrForkBody
	{ $current=$iv_ruleOrForkBody.current; }
	EOF;

// Rule OrForkBody
ruleOrForkBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOrForkBodyAccess().getRegularBodyRegularOrForkParserRuleCall_0());
			}
			lv_regularBody_0_0=ruleRegularOrFork
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOrForkBodyRule());
				}
				add(
					$current,
					"regularBody",
					lv_regularBody_0_0,
					"org.xtext.project.turn.Turn.RegularOrFork");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleRegularOrFork
entryRuleRegularOrFork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularOrForkRule()); }
	iv_ruleRegularOrFork=ruleRegularOrFork
	{ $current=$iv_ruleRegularOrFork.current; }
	EOF;

// Rule RegularOrFork
ruleRegularOrFork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularOrForkAccess().getConditionConditionParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularOrForkRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"org.xtext.project.turn.Turn.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularOrForkAccess().getPathBodyPathBodyParserRuleCall_1_0());
				}
				lv_pathBody_1_0=rulePathBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularOrForkRule());
					}
					set(
						$current,
						"pathBody",
						lv_pathBody_1_0,
						"org.xtext.project.turn.Turn.PathBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndFork
entryRuleAndFork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndForkRule()); }
	iv_ruleAndFork=ruleAndFork
	{ $current=$iv_ruleAndFork.current; }
	EOF;

// Rule AndFork
ruleAndFork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='and'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndForkAccess().getAndKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAndForkAccess().getNameQualifiedNameParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndForkRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.project.turn.Turn.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndForkAccess().getLongNameLongNameParserRuleCall_1_1_0());
					}
					lv_longName_2_0=ruleLongName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndForkRule());
						}
						set(
							$current,
							"longName",
							lv_longName_2_0,
							"org.xtext.project.turn.Turn.LongName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAndForkAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_4='*'
			{
				newLeafNode(otherlv_4, grammarAccess.getAndForkAccess().getAsteriskKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndForkAccess().getPathbodyPathBodyParserRuleCall_3_1_0());
					}
					lv_pathbody_5_0=rulePathBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndForkRule());
						}
						add(
							$current,
							"pathbody",
							lv_pathbody_5_0,
							"org.xtext.project.turn.Turn.PathBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAndForkAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndForkAccess().getConnectingAndBodyPathBodyParserRuleCall_5_0());
				}
				lv_connectingAndBody_7_0=rulePathBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndForkRule());
					}
					set(
						$current,
						"connectingAndBody",
						lv_connectingAndBody_7_0,
						"org.xtext.project.turn.Turn.PathBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStub
entryRuleStub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStubRule()); }
	iv_ruleStub=ruleStub
	{ $current=$iv_ruleStub.current; }
	EOF;

// Rule Stub
ruleStub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStubAccess().getStubTypeStubTypeParserRuleCall_0_0());
				}
				lv_stubType_0_0=ruleStubType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubRule());
					}
					set(
						$current,
						"stubType",
						lv_stubType_0_0,
						"org.xtext.project.turn.Turn.StubType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='stub'
		{
			newLeafNode(otherlv_1, grammarAccess.getStubAccess().getStubKeyword_1());
		}
		(
			otherlv_2='in'
			{
				newLeafNode(otherlv_2, grammarAccess.getStubAccess().getInKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStubAccess().getIndexPositiveIntegerParserRuleCall_2_1_0());
					}
					lv_index_3_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStubRule());
						}
						set(
							$current,
							"index",
							lv_index_3_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getStubAccess().getNameQualifiedNameParserRuleCall_3_0_0_0_0());
							}
							lv_name_4_0=ruleQualifiedName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStubRule());
								}
								set(
									$current,
									"name",
									lv_name_4_0,
									"org.xtext.project.turn.Turn.QualifiedName");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getStubAccess().getLongNameLongNameParserRuleCall_3_0_0_1_0());
							}
							lv_longName_5_0=ruleLongName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStubRule());
								}
								set(
									$current,
									"longName",
									lv_longName_5_0,
									"org.xtext.project.turn.Turn.LongName");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getStubAccess().getParamsStubParametersParserRuleCall_3_0_1_0());
						}
						lv_params_6_0=ruleStubParameters
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStubRule());
							}
							set(
								$current,
								"params",
								lv_params_6_0,
								"org.xtext.project.turn.Turn.StubParameters");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStubRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStubAccess().getStubRefStubDeclarationCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getStubAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStubAccess().getOutPathsStubOutPathParserRuleCall_4_1_0());
					}
					lv_outPaths_9_0=ruleStubOutPath
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStubRule());
						}
						add(
							$current,
							"outPaths",
							lv_outPaths_9_0,
							"org.xtext.project.turn.Turn.StubOutPath");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getStubAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStubAccess().getConnectingStubBodyPathBodyParserRuleCall_5_0());
				}
				lv_connectingStubBody_11_0=rulePathBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubRule());
					}
					set(
						$current,
						"connectingStubBody",
						lv_connectingStubBody_11_0,
						"org.xtext.project.turn.Turn.PathBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStubType
entryRuleStubType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStubTypeRule()); }
	iv_ruleStubType=ruleStubType
	{ $current=$iv_ruleStubType.current.getText(); }
	EOF;

// Rule StubType
ruleStubType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='synchronizing'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStubTypeAccess().getSynchronizingKeyword_0());
		}
		    |
		kw='blocking'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStubTypeAccess().getBlockingKeyword_1());
		}
	)
;

// Entry rule entryRuleStubParameters
entryRuleStubParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStubParametersRule()); }
	iv_ruleStubParameters=ruleStubParameters
	{ $current=$iv_ruleStubParameters.current; }
	EOF;

// Rule StubParameters
ruleStubParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStubParametersAccess().getStubParametersAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getStubParametersAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStubParametersAccess().getPluginPluginBindingParserRuleCall_2_0());
				}
				lv_plugin_2_0=rulePluginBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubParametersRule());
					}
					add(
						$current,
						"plugin",
						lv_plugin_2_0,
						"org.xtext.project.turn.Turn.PluginBinding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getStubParametersAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleStubDeclaration
entryRuleStubDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStubDeclarationRule()); }
	iv_ruleStubDeclaration=ruleStubDeclaration
	{ $current=$iv_ruleStubDeclaration.current; }
	EOF;

// Rule StubDeclaration
ruleStubDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStubDeclarationAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStubDeclarationAccess().getLongNameLongNameParserRuleCall_1_0());
				}
				lv_longName_1_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubDeclarationRule());
					}
					set(
						$current,
						"longName",
						lv_longName_1_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getStubDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStubDeclarationAccess().getParamsStubParametersParserRuleCall_3_0());
				}
				lv_params_3_0=ruleStubParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubDeclarationRule());
					}
					set(
						$current,
						"params",
						lv_params_3_0,
						"org.xtext.project.turn.Turn.StubParameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStubOutPath
entryRuleStubOutPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStubOutPathRule()); }
	iv_ruleStubOutPath=ruleStubOutPath
	{ $current=$iv_ruleStubOutPath.current; }
	EOF;

// Rule StubOutPath
ruleStubOutPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='out'
			{
				newLeafNode(otherlv_0, grammarAccess.getStubOutPathAccess().getOutKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStubOutPathAccess().getIndexPositiveIntegerParserRuleCall_0_1_0());
					}
					lv_index_1_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStubOutPathRule());
						}
						set(
							$current,
							"index",
							lv_index_1_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2='threshold'
			{
				newLeafNode(otherlv_2, grammarAccess.getStubOutPathAccess().getThresholdKeyword_1_0());
			}
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getStubOutPathAccess().getLeftSquareBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStubOutPathAccess().getThresholdPositiveIntegerParserRuleCall_1_2_0());
					}
					lv_threshold_4_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStubOutPathRule());
						}
						set(
							$current,
							"threshold",
							lv_threshold_4_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getStubOutPathAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStubOutPathAccess().getPathPathBodyParserRuleCall_2_0());
				}
				lv_path_6_0=rulePathBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStubOutPathRule());
					}
					set(
						$current,
						"path",
						lv_path_6_0,
						"org.xtext.project.turn.Turn.PathBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePluginBinding
entryRulePluginBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPluginBindingRule()); }
	iv_rulePluginBinding=rulePluginBinding
	{ $current=$iv_rulePluginBinding.current; }
	EOF;

// Rule PluginBinding
rulePluginBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPluginBindingAccess().getConditionConditionParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPluginBindingRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"org.xtext.project.turn.Turn.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_1='replication'
			{
				newLeafNode(otherlv_1, grammarAccess.getPluginBindingAccess().getReplicationKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPluginBindingAccess().getReplicationPositiveIntegerParserRuleCall_1_1_0());
					}
					lv_replication_2_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPluginBindingRule());
						}
						set(
							$current,
							"replication",
							lv_replication_2_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPluginBindingRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getPluginBindingAccess().getMapUCMmapCrossReference_2_0());
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getPluginBindingAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPluginBindingAccess().getBindingBindingParserRuleCall_3_1_0());
					}
					lv_binding_5_0=ruleBinding
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPluginBindingRule());
						}
						set(
							$current,
							"binding",
							lv_binding_5_0,
							"org.xtext.project.turn.Turn.Binding");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getPluginBindingAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPluginBindingAccess().getBindingsBindingParserRuleCall_3_2_1_0());
						}
						lv_bindings_7_0=ruleBinding
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPluginBindingRule());
							}
							add(
								$current,
								"bindings",
								lv_bindings_7_0,
								"org.xtext.project.turn.Turn.Binding");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleComponentRef
entryRuleComponentRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRefRule()); }
	iv_ruleComponentRef=ruleComponentRef
	{ $current=$iv_ruleComponentRef.current; }
	EOF;

// Rule ComponentRef
ruleComponentRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='protected'
			{
				newLeafNode(otherlv_0, grammarAccess.getComponentRefAccess().getProtectedKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentRefAccess().getKindCOMPONENTKINDEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruleCOMPONENTKIND
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRefRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"org.xtext.project.turn.Turn.COMPONENTKIND");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentRefAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRefRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentRefAccess().getLongNameLongNameParserRuleCall_3_0());
				}
				lv_longName_3_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRefRule());
					}
					set(
						$current,
						"longName",
						lv_longName_3_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getComponentRefAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentRefAccess().getElementBoundOptionParserRuleCall_4_1_0());
					}
					lv_element_5_0=ruleBoundOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRefRule());
						}
						set(
							$current,
							"element",
							lv_element_5_0,
							"org.xtext.project.turn.Turn.BoundOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getComponentRefAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getComponentRefAccess().getElementsBoundOptionParserRuleCall_4_2_1_0());
						}
						lv_elements_7_0=ruleBoundOption
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComponentRefRule());
							}
							add(
								$current,
								"elements",
								lv_elements_7_0,
								"org.xtext.project.turn.Turn.BoundOption");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleBoundOption
entryRuleBoundOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundOptionRule()); }
	iv_ruleBoundOption=ruleBoundOption
	{ $current=$iv_ruleBoundOption.current; }
	EOF;

// Rule BoundOption
ruleBoundOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBoundOptionAccess().getBoundElementParserRuleCall_0());
		}
		this_BoundElement_0=ruleBoundElement
		{
			$current = $this_BoundElement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoundOptionAccess().getLongBoundElementParserRuleCall_1());
		}
		this_LongBoundElement_1=ruleLongBoundElement
		{
			$current = $this_LongBoundElement_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoundElement
entryRuleBoundElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundElementRule()); }
	iv_ruleBoundElement=ruleBoundElement
	{ $current=$iv_ruleBoundElement.current; }
	EOF;

// Rule BoundElement
ruleBoundElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBoundElementRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getBoundElementAccess().getElemReferencedBoundElementCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLongBoundElement
entryRuleLongBoundElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLongBoundElementRule()); }
	iv_ruleLongBoundElement=ruleLongBoundElement
	{ $current=$iv_ruleLongBoundElement.current; }
	EOF;

// Rule LongBoundElement
ruleLongBoundElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLongBoundElementAccess().getFromQualifiedNameParserRuleCall_0_0());
				}
				lv_from_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLongBoundElementRule());
					}
					set(
						$current,
						"from",
						lv_from_0_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='..'
		{
			newLeafNode(otherlv_1, grammarAccess.getLongBoundElementAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLongBoundElementAccess().getToQualifiedNameParserRuleCall_2_0());
				}
				lv_to_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLongBoundElementRule());
					}
					set(
						$current,
						"to",
						lv_to_2_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBindingAccess().getInBindingParserRuleCall_0());
		}
		this_InBinding_0=ruleInBinding
		{
			$current = $this_InBinding_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBindingAccess().getOutBindingParserRuleCall_1());
		}
		this_OutBinding_1=ruleOutBinding
		{
			$current = $this_OutBinding_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBindingAccess().getComponentBindingParserRuleCall_2());
		}
		this_ComponentBinding_2=ruleComponentBinding
		{
			$current = $this_ComponentBinding_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInBinding
entryRuleInBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInBindingRule()); }
	iv_ruleInBinding=ruleInBinding
	{ $current=$iv_ruleInBinding.current; }
	EOF;

// Rule InBinding
ruleInBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getInBindingAccess().getMapStartStartPointCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getInBindingAccess().getEqualsSignKeyword_1());
		}
		(
			otherlv_2='in'
			{
				newLeafNode(otherlv_2, grammarAccess.getInBindingAccess().getInKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0());
					}
					lv_index_3_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInBindingRule());
						}
						set(
							$current,
							"index",
							lv_index_3_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOutBinding
entryRuleOutBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutBindingRule()); }
	iv_ruleOutBinding=ruleOutBinding
	{ $current=$iv_ruleOutBinding.current; }
	EOF;

// Rule OutBinding
ruleOutBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getOutBindingAccess().getMapEndEndPointCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getOutBindingAccess().getEqualsSignKeyword_1());
		}
		(
			otherlv_2='out'
			{
				newLeafNode(otherlv_2, grammarAccess.getOutBindingAccess().getOutKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0());
					}
					lv_index_3_0=rulePositiveInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutBindingRule());
						}
						set(
							$current,
							"index",
							lv_index_3_0,
							"org.xtext.project.turn.Turn.PositiveInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleComponentBinding
entryRuleComponentBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentBindingRule()); }
	iv_ruleComponentBinding=ruleComponentBinding
	{ $current=$iv_ruleComponentBinding.current; }
	EOF;

// Rule ComponentBinding
ruleComponentBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getComponentBindingAccess().getComponentInComponentRefCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentBindingAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getComponentBindingAccess().getComponentOutComponentRefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFailureLabel
entryRuleFailureLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFailureLabelRule()); }
	iv_ruleFailureLabel=ruleFailureLabel
	{ $current=$iv_ruleFailureLabel.current; }
	EOF;

// Rule FailureLabel
ruleFailureLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='[['
		{
			newLeafNode(otherlv_0, grammarAccess.getFailureLabelAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_failure_1_0=RULE_STRING
				{
					newLeafNode(lv_failure_1_0, grammarAccess.getFailureLabelAccess().getFailureSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFailureLabelRule());
					}
					setWithLastConsumed(
						$current,
						"failure",
						lv_failure_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=']]'
		{
			newLeafNode(otherlv_2, grammarAccess.getFailureLabelAccess().getRightSquareBracketRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleScenarioGroup
entryRuleScenarioGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioGroupRule()); }
	iv_ruleScenarioGroup=ruleScenarioGroup
	{ $current=$iv_ruleScenarioGroup.current; }
	EOF;

// Rule ScenarioGroup
ruleScenarioGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scenarioGroup'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioGroupAccess().getScenarioGroupKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioGroupAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioGroupRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getScenarioGroupAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioGroupAccess().getScenarioReferenceToScenarioDefParserRuleCall_4_0());
				}
				lv_scenario_4_0=ruleReferenceToScenarioDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioGroupRule());
					}
					set(
						$current,
						"scenario",
						lv_scenario_4_0,
						"org.xtext.project.turn.Turn.ReferenceToScenarioDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getScenarioGroupAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioGroupAccess().getScenariosReferenceToScenarioDefParserRuleCall_5_1_0());
					}
					lv_scenarios_6_0=ruleReferenceToScenarioDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioGroupRule());
						}
						add(
							$current,
							"scenarios",
							lv_scenarios_6_0,
							"org.xtext.project.turn.Turn.ReferenceToScenarioDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleScenarioDef
entryRuleScenarioDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioDefRule()); }
	iv_ruleScenarioDef=ruleScenarioDef
	{ $current=$iv_ruleScenarioDef.current; }
	EOF;

// Rule ScenarioDef
ruleScenarioDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioDefAccess().getScenarioKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioDefAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioDefAccess().getLongNameLongNameParserRuleCall_2_0());
				}
				lv_longName_2_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
					}
					set(
						$current,
						"longName",
						lv_longName_2_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getScenarioDefAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='pre'
			{
				newLeafNode(otherlv_4, grammarAccess.getScenarioDefAccess().getPreKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioDefAccess().getPreconditionsConditionParserRuleCall_4_1_0());
					}
					lv_preconditions_5_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
						}
						add(
							$current,
							"preconditions",
							lv_preconditions_5_0,
							"org.xtext.project.turn.Turn.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='post'
			{
				newLeafNode(otherlv_6, grammarAccess.getScenarioDefAccess().getPostKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioDefAccess().getPostconditionsConditionParserRuleCall_5_1_0());
					}
					lv_postconditions_7_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
						}
						add(
							$current,
							"postconditions",
							lv_postconditions_7_0,
							"org.xtext.project.turn.Turn.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='initialize'
			{
				newLeafNode(otherlv_8, grammarAccess.getScenarioDefAccess().getInitializeKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioDefAccess().getInitializationsInitializationParserRuleCall_6_1_0());
					}
					lv_initializations_9_0=ruleInitialization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
						}
						add(
							$current,
							"initializations",
							lv_initializations_9_0,
							"org.xtext.project.turn.Turn.Initialization");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_10='start'
			{
				newLeafNode(otherlv_10, grammarAccess.getScenarioDefAccess().getStartKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioDefAccess().getStartPointQualifiedReferenceToStartPointParserRuleCall_7_1_0());
					}
					lv_startPoint_11_0=ruleQualifiedReferenceToStartPoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
						}
						set(
							$current,
							"startPoint",
							lv_startPoint_11_0,
							"org.xtext.project.turn.Turn.QualifiedReferenceToStartPoint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getScenarioDefAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScenarioDefAccess().getStartPointsQualifiedReferenceToStartPointParserRuleCall_7_2_1_0());
						}
						lv_startPoints_13_0=ruleQualifiedReferenceToStartPoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
							}
							add(
								$current,
								"startPoints",
								lv_startPoints_13_0,
								"org.xtext.project.turn.Turn.QualifiedReferenceToStartPoint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_14='end'
			{
				newLeafNode(otherlv_14, grammarAccess.getScenarioDefAccess().getEndKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioDefAccess().getEndPointQualifiedReferenceToEndPointParserRuleCall_8_1_0());
					}
					lv_endPoint_15_0=ruleQualifiedReferenceToEndPoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
						}
						set(
							$current,
							"endPoint",
							lv_endPoint_15_0,
							"org.xtext.project.turn.Turn.QualifiedReferenceToEndPoint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getScenarioDefAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScenarioDefAccess().getEndPointsQualifiedReferenceToEndPointParserRuleCall_8_2_1_0());
						}
						lv_endPoints_17_0=ruleQualifiedReferenceToEndPoint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
							}
							add(
								$current,
								"endPoints",
								lv_endPoints_17_0,
								"org.xtext.project.turn.Turn.QualifiedReferenceToEndPoint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_18='includes'
			{
				newLeafNode(otherlv_18, grammarAccess.getScenarioDefAccess().getIncludesKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenarioDefAccess().getIncludedScenarioReferenceToScenarioDefParserRuleCall_9_1_0());
					}
					lv_includedScenario_19_0=ruleReferenceToScenarioDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
						}
						set(
							$current,
							"includedScenario",
							lv_includedScenario_19_0,
							"org.xtext.project.turn.Turn.ReferenceToScenarioDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getScenarioDefAccess().getCommaKeyword_9_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScenarioDefAccess().getIncludedScenariosReferenceToScenarioDefParserRuleCall_9_2_1_0());
						}
						lv_includedScenarios_21_0=ruleReferenceToScenarioDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScenarioDefRule());
							}
							add(
								$current,
								"includedScenarios",
								lv_includedScenarios_21_0,
								"org.xtext.project.turn.Turn.ReferenceToScenarioDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getScenarioDefAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleInitialization
entryRuleInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitializationRule()); }
	iv_ruleInitialization=ruleInitialization
	{ $current=$iv_ruleInitialization.current; }
	EOF;

// Rule Initialization
ruleInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInitializationAccess().getVariableReferenceToVariableParserRuleCall_0_0_0());
					}
					lv_variable_0_0=ruleReferenceToVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitializationRule());
						}
						set(
							$current,
							"variable",
							lv_variable_0_0,
							"org.xtext.project.turn.Turn.ReferenceToVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getInitializationAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitializationAccess().getValueExpressionParserRuleCall_0_2_0());
					}
					lv_value_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitializationRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"org.xtext.project.turn.Turn.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInitializationAccess().getVariableReferenceToEnumVariableParserRuleCall_1_0_0());
					}
					lv_variable_3_0=ruleReferenceToEnumVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitializationRule());
						}
						set(
							$current,
							"variable",
							lv_variable_3_0,
							"org.xtext.project.turn.Turn.ReferenceToEnumVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getInitializationAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitializationAccess().getValueEnumLiteralParserRuleCall_1_2_0());
					}
					lv_value_5_0=ruleEnumLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitializationRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"org.xtext.project.turn.Turn.EnumLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='bool'
			{
				newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getBoolKeyword_0_0());
			}
			    |
			otherlv_1='int'
			{
				newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getIntKeyword_0_1());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getEnumerationTypeReferenceToEnumerationTypeParserRuleCall_0_2_0());
					}
					lv_enumerationType_2_0=ruleReferenceToEnumerationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						set(
							$current,
							"enumerationType",
							lv_enumerationType_2_0,
							"org.xtext.project.turn.Turn.ReferenceToEnumerationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumerationType
entryRuleEnumerationType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationTypeRule()); }
	iv_ruleEnumerationType=ruleEnumerationType
	{ $current=$iv_ruleEnumerationType.current; }
	EOF;

// Rule EnumerationType
ruleEnumerationType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationTypeAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationTypeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationTypeAccess().getValueEnumLiteralParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEnumLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.project.turn.Turn.EnumLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumerationTypeAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationTypeAccess().getValuesEnumLiteralParserRuleCall_4_1_0());
					}
					lv_values_5_0=ruleEnumLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
						}
						add(
							$current,
							"values",
							lv_values_5_0,
							"org.xtext.project.turn.Turn.EnumLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleReferenceToScenarioDef
entryRuleReferenceToScenarioDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceToScenarioDefRule()); }
	iv_ruleReferenceToScenarioDef=ruleReferenceToScenarioDef
	{ $current=$iv_ruleReferenceToScenarioDef.current; }
	EOF;

// Rule ReferenceToScenarioDef
ruleReferenceToScenarioDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceToScenarioDefAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceToScenarioDefRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.project.turn.Turn.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceToScenarioDefAccess().getLongNameLongNameParserRuleCall_1_0());
				}
				lv_longName_1_0=ruleLongName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceToScenarioDefRule());
					}
					set(
						$current,
						"longName",
						lv_longName_1_0,
						"org.xtext.project.turn.Turn.LongName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReferenceToVariable
entryRuleReferenceToVariable returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReferenceToVariableRule()); }
	iv_ruleReferenceToVariable=ruleReferenceToVariable
	{ $current=$iv_ruleReferenceToVariable.current.getText(); }
	EOF;

// Rule ReferenceToVariable
ruleReferenceToVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getReferenceToVariableAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleReferenceToEnumVariable
entryRuleReferenceToEnumVariable returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReferenceToEnumVariableRule()); }
	iv_ruleReferenceToEnumVariable=ruleReferenceToEnumVariable
	{ $current=$iv_ruleReferenceToEnumVariable.current.getText(); }
	EOF;

// Rule ReferenceToEnumVariable
ruleReferenceToEnumVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getReferenceToEnumVariableAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleReferenceToEnumerationType
entryRuleReferenceToEnumerationType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReferenceToEnumerationTypeRule()); }
	iv_ruleReferenceToEnumerationType=ruleReferenceToEnumerationType
	{ $current=$iv_ruleReferenceToEnumerationType.current.getText(); }
	EOF;

// Rule ReferenceToEnumerationType
ruleReferenceToEnumerationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getReferenceToEnumerationTypeAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleQualifiedReferenceToStartPoint
entryRuleQualifiedReferenceToStartPoint returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedReferenceToStartPointRule()); }
	iv_ruleQualifiedReferenceToStartPoint=ruleQualifiedReferenceToStartPoint
	{ $current=$iv_ruleQualifiedReferenceToStartPoint.current.getText(); }
	EOF;

// Rule QualifiedReferenceToStartPoint
ruleQualifiedReferenceToStartPoint returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getQualifiedReferenceToStartPointAccess().getQualifiedNameParserRuleCall());
	}
	this_QualifiedName_0=ruleQualifiedName
	{
		$current.merge(this_QualifiedName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleQualifiedReferenceToEndPoint
entryRuleQualifiedReferenceToEndPoint returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedReferenceToEndPointRule()); }
	iv_ruleQualifiedReferenceToEndPoint=ruleQualifiedReferenceToEndPoint
	{ $current=$iv_ruleQualifiedReferenceToEndPoint.current.getText(); }
	EOF;

// Rule QualifiedReferenceToEndPoint
ruleQualifiedReferenceToEndPoint returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getQualifiedReferenceToEndPointAccess().getQualifiedNameParserRuleCall());
	}
	this_QualifiedName_0=ruleQualifiedName
	{
		$current.merge(this_QualifiedName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current.getText(); }
	EOF;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	iv_ruleEnumLiteral=ruleEnumLiteral
	{ $current=$iv_ruleEnumLiteral.current.getText(); }
	EOF;

// Rule EnumLiteral
ruleEnumLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getEnumLiteralAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRulePositiveInteger
entryRulePositiveInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPositiveIntegerRule()); }
	iv_rulePositiveInteger=rulePositiveInteger
	{ $current=$iv_rulePositiveInteger.current.getText(); }
	EOF;

// Rule PositiveInteger
rulePositiveInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getPositiveIntegerAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTextAccess().getContentTextContentParserRuleCall_0());
			}
			lv_content_0_0=ruleTextContent
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTextRule());
				}
				add(
					$current,
					"content",
					lv_content_0_0,
					"org.xtext.project.turn.Turn.TextContent");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleTextContent
entryRuleTextContent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTextContentRule()); }
	iv_ruleTextContent=ruleTextContent
	{ $current=$iv_ruleTextContent.current.getText(); }
	EOF;

// Rule TextContent
ruleTextContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getTextContentAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw='@'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextContentAccess().getCommercialAtKeyword_1());
		}
		    |
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextContentAccess().getNumberSignKeyword_2());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextContentAccess().getExclamationMarkKeyword_3());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextContentAccess().getPercentSignKeyword_4());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextContentAccess().getAmpersandKeyword_5());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextContentAccess().getAsteriskKeyword_6());
		}
		    |
		this_INT_7=RULE_INT
		{
			$current.merge(this_INT_7);
		}
		{
			newLeafNode(this_INT_7, grammarAccess.getTextContentAccess().getINTTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule QualitativeLabel
ruleQualitativeLabel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='denied'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getDeniedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getQualitativeLabelAccess().getDeniedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='weaklyDenied'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getWeaklyDeniedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getQualitativeLabelAccess().getWeaklyDeniedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='weaklySatisfied'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getWeaklySatisfiedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getQualitativeLabelAccess().getWeaklySatisfiedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='satisfied'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getSatisfiedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getQualitativeLabelAccess().getSatisfiedEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='conflict'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getConflictEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getQualitativeLabelAccess().getConflictEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='unknown'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getUnknownEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getQualitativeLabelAccess().getUnknownEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='none'
			{
				$current = grammarAccess.getQualitativeLabelAccess().getNoneEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getQualitativeLabelAccess().getNoneEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule IntentionalElementType
ruleIntentionalElementType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='softgoal'
			{
				$current = grammarAccess.getIntentionalElementTypeAccess().getSoftgoalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntentionalElementTypeAccess().getSoftgoalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='goal'
			{
				$current = grammarAccess.getIntentionalElementTypeAccess().getGoalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntentionalElementTypeAccess().getGoalEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='task'
			{
				$current = grammarAccess.getIntentionalElementTypeAccess().getTaskEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntentionalElementTypeAccess().getTaskEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='resource'
			{
				$current = grammarAccess.getIntentionalElementTypeAccess().getResourceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getIntentionalElementTypeAccess().getResourceEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='belief'
			{
				$current = grammarAccess.getIntentionalElementTypeAccess().getBeliefEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getIntentionalElementTypeAccess().getBeliefEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='indicator'
			{
				$current = grammarAccess.getIntentionalElementTypeAccess().getIndicatorEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getIntentionalElementTypeAccess().getIndicatorEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule ContributionType
ruleContributionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='make'
			{
				$current = grammarAccess.getContributionTypeAccess().getMakeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getContributionTypeAccess().getMakeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='help'
			{
				$current = grammarAccess.getContributionTypeAccess().getHelpEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getContributionTypeAccess().getHelpEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='somePositive'
			{
				$current = grammarAccess.getContributionTypeAccess().getSomePositiveEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getContributionTypeAccess().getSomePositiveEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='unknown'
			{
				$current = grammarAccess.getContributionTypeAccess().getUnknownEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getContributionTypeAccess().getUnknownEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='someNegative'
			{
				$current = grammarAccess.getContributionTypeAccess().getSomeNegativeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getContributionTypeAccess().getSomeNegativeEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='hurt'
			{
				$current = grammarAccess.getContributionTypeAccess().getHurtEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getContributionTypeAccess().getHurtEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='break'
			{
				$current = grammarAccess.getContributionTypeAccess().getBreakEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getContributionTypeAccess().getBreakEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule ImportanceType
ruleImportanceType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='high'
			{
				$current = grammarAccess.getImportanceTypeAccess().getHighEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getImportanceTypeAccess().getHighEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='medium'
			{
				$current = grammarAccess.getImportanceTypeAccess().getMediumEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getImportanceTypeAccess().getMediumEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='low'
			{
				$current = grammarAccess.getImportanceTypeAccess().getLowEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getImportanceTypeAccess().getLowEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='none'
			{
				$current = grammarAccess.getImportanceTypeAccess().getNoneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getImportanceTypeAccess().getNoneEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule DecompositionType
ruleDecompositionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='and'
			{
				$current = grammarAccess.getDecompositionTypeAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDecompositionTypeAccess().getAndEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='or'
			{
				$current = grammarAccess.getDecompositionTypeAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDecompositionTypeAccess().getOrEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='xor'
			{
				$current = grammarAccess.getDecompositionTypeAccess().getXorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDecompositionTypeAccess().getXorEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule WAITKIND
ruleWAITKIND returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='persistent'
			{
				$current = grammarAccess.getWAITKINDAccess().getPersistentEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getWAITKINDAccess().getPersistentEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='transient'
			{
				$current = grammarAccess.getWAITKINDAccess().getTransientEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getWAITKINDAccess().getTransientEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule COMPONENTKIND
ruleCOMPONENTKIND returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='team'
			{
				$current = grammarAccess.getCOMPONENTKINDAccess().getTeamEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOMPONENTKINDAccess().getTeamEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='object'
			{
				$current = grammarAccess.getCOMPONENTKINDAccess().getObjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOMPONENTKINDAccess().getObjectEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='process'
			{
				$current = grammarAccess.getCOMPONENTKINDAccess().getProcessEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOMPONENTKINDAccess().getProcessEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='agent'
			{
				$current = grammarAccess.getCOMPONENTKINDAccess().getAgentEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCOMPONENTKINDAccess().getAgentEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='actor'
			{
				$current = grammarAccess.getCOMPONENTKINDAccess().getActorEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCOMPONENTKINDAccess().getActorEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='parent'
			{
				$current = grammarAccess.getCOMPONENTKINDAccess().getParentEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCOMPONENTKINDAccess().getParentEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
