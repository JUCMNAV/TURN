/**
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.project.turn.turn.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.project.turn.turn.EnumerationType;
import org.xtext.project.turn.turn.TurnPackage;
import org.xtext.project.turn.turn.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project.turn.turn.impl.VariableImpl#getVariableType <em>Variable Type</em>}</li>
 *   <li>{@link org.xtext.project.turn.turn.impl.VariableImpl#getEnumerationType <em>Enumeration Type</em>}</li>
 *   <li>{@link org.xtext.project.turn.turn.impl.VariableImpl#getName <em>Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariableImpl extends URNmodelElementImpl implements Variable
{
  /**
   * The default value of the '{@link #getVariableType() <em>Variable Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableType()
   * @generated
   * @ordered
   */
  protected static final String VARIABLE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVariableType() <em>Variable Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableType()
   * @generated
   * @ordered
   */
  protected String variableType = VARIABLE_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getEnumerationType() <em>Enumeration Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumerationType()
   * @generated
   * @ordered
   */
  protected EnumerationType enumerationType;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TurnPackage.Literals.VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVariableType()
  {
    return variableType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariableType(String newVariableType)
  {
    String oldVariableType = variableType;
    variableType = newVariableType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TurnPackage.VARIABLE__VARIABLE_TYPE, oldVariableType, variableType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumerationType getEnumerationType()
  {
    if (enumerationType != null && enumerationType.eIsProxy())
    {
      InternalEObject oldEnumerationType = (InternalEObject)enumerationType;
      enumerationType = (EnumerationType)eResolveProxy(oldEnumerationType);
      if (enumerationType != oldEnumerationType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, TurnPackage.VARIABLE__ENUMERATION_TYPE, oldEnumerationType, enumerationType));
      }
    }
    return enumerationType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumerationType basicGetEnumerationType()
  {
    return enumerationType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnumerationType(EnumerationType newEnumerationType)
  {
    EnumerationType oldEnumerationType = enumerationType;
    enumerationType = newEnumerationType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TurnPackage.VARIABLE__ENUMERATION_TYPE, oldEnumerationType, enumerationType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TurnPackage.VARIABLE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TurnPackage.VARIABLE__VARIABLE_TYPE:
        return getVariableType();
      case TurnPackage.VARIABLE__ENUMERATION_TYPE:
        if (resolve) return getEnumerationType();
        return basicGetEnumerationType();
      case TurnPackage.VARIABLE__NAME:
        return getName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TurnPackage.VARIABLE__VARIABLE_TYPE:
        setVariableType((String)newValue);
        return;
      case TurnPackage.VARIABLE__ENUMERATION_TYPE:
        setEnumerationType((EnumerationType)newValue);
        return;
      case TurnPackage.VARIABLE__NAME:
        setName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TurnPackage.VARIABLE__VARIABLE_TYPE:
        setVariableType(VARIABLE_TYPE_EDEFAULT);
        return;
      case TurnPackage.VARIABLE__ENUMERATION_TYPE:
        setEnumerationType((EnumerationType)null);
        return;
      case TurnPackage.VARIABLE__NAME:
        setName(NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TurnPackage.VARIABLE__VARIABLE_TYPE:
        return VARIABLE_TYPE_EDEFAULT == null ? variableType != null : !VARIABLE_TYPE_EDEFAULT.equals(variableType);
      case TurnPackage.VARIABLE__ENUMERATION_TYPE:
        return enumerationType != null;
      case TurnPackage.VARIABLE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (variableType: ");
    result.append(variableType);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //VariableImpl
