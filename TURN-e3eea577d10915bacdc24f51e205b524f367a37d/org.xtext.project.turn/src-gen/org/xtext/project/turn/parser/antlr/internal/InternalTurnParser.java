package org.xtext.project.turn.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.project.turn.services.TurnGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalTurnParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'urnModel'", "'showAsMeansEnd'", "'{'", "'description'", "'author'", "'created'", "'modified'", "'version'", "'urnVersion'", "'}'", "'concern'", "':'", "','", "'#'", "'['", "']'", "'link'", "'type'", "'-->'", "'metadata'", "'='", "'actor'", "'importance'", "'unit'", "'contributesTo'", "'correlated'", "'with'", "'decomposes'", "'dependsOn'", "'strategiesGroup'", "'strategy'", "'includes'", "'exceeding'", "'evaluation'", "'convertedWith'", "'real'", "'linearConversion'", "'target'", "'threshold'", "'worst'", "'mappingConversion'", "'contributionContextGroup'", "'contributionContext'", "'-'", "'+'", "'singleton'", "'map'", "'start'", "'catches'", "'[['", "']]'", "'abort'", "'failure'", "';'", "'in'", "'->'", "'X'", "'join'", "'synch'", "'sync'", "'|'", "'wait'", "'timer'", "'timeout'", "'trigger'", "'fail'", "'end'", "'.'", "'or'", "'[else]'", "'and'", "'*'", "'stub'", "'('", "')'", "'out'", "'replication'", "'protected'", "'..'", "'blocking'", "'synchronizing'", "'@'", "'!'", "'%'", "'&'", "'+='", "'-='", "'*='", "'/='", "'%='", "'<'", "'>'", "'>='", "'||'", "'&&'", "'=='", "'!='", "'==='", "'!=='", "'instanceof'", "'..<'", "'=>'", "'<>'", "'?:'", "'**'", "'/'", "'as'", "'++'", "'--'", "'::'", "'?.'", "'if'", "'else'", "'switch'", "'default'", "'case'", "'for'", "'while'", "'do'", "'var'", "'val'", "'extends'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'", "'denied'", "'weaklyDenied'", "'weaklySatisfied'", "'satisfied'", "'conflict'", "'unknown'", "'none'", "'softgoal'", "'goal'", "'task'", "'resource'", "'belief'", "'indicator'", "'make'", "'help'", "'somePositive'", "'someNegative'", "'hurt'", "'break'", "'high'", "'medium'", "'low'", "'xor'", "'persistent'", "'transient'", "'team'", "'object'", "'process'", "'agent'", "'parent'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int RULE_HEX=7;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__180=180;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int RULE_DECIMAL=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__169=169;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalTurnParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalTurnParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalTurnParser.tokenNames; }
    public String getGrammarFileName() { return "InternalTurn.g"; }



     	private TurnGrammarAccess grammarAccess;

        public InternalTurnParser(TokenStream input, TurnGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "URNspec";
       	}

       	@Override
       	protected TurnGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleURNspec"
    // InternalTurn.g:65:1: entryRuleURNspec returns [EObject current=null] : iv_ruleURNspec= ruleURNspec EOF ;
    public final EObject entryRuleURNspec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURNspec = null;


        try {
            // InternalTurn.g:65:48: (iv_ruleURNspec= ruleURNspec EOF )
            // InternalTurn.g:66:2: iv_ruleURNspec= ruleURNspec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURNspecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleURNspec=ruleURNspec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURNspec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURNspec"


    // $ANTLR start "ruleURNspec"
    // InternalTurn.g:72:1: ruleURNspec returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?) ) ) ;
    public final EObject ruleURNspec() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_showAsMeansEnd_5_0=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_info_3_0 = null;

        EObject lv_actors_4_0 = null;

        EObject lv_stratGroups_6_0 = null;

        EObject lv_strategies_7_0 = null;

        EObject lv_indConversions_8_0 = null;

        EObject lv_contribContextGroups_9_0 = null;

        EObject lv_contribContexts_10_0 = null;

        EObject lv_ucmMaps_11_0 = null;

        EObject lv_concerns_12_0 = null;

        EObject lv_urnlinks_13_0 = null;

        EObject lv_metadata_14_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:78:2: ( ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?) ) ) )
            // InternalTurn.g:79:2: ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?) ) )
            {
            // InternalTurn.g:79:2: ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?) ) )
            // InternalTurn.g:80:3: ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?) )
            {
            // InternalTurn.g:80:3: ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?) )
            // InternalTurn.g:81:4: ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getURNspecAccess().getUnorderedGroup());
            // InternalTurn.g:84:4: ( ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?)
            // InternalTurn.g:85:5: ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+ {...}?
            {
            // InternalTurn.g:85:5: ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+
            int cnt12=0;
            loop12:
            do {
                int alt12=13;
                alt12 = dfa12.predict(input);
                switch (alt12) {
            	case 1 :
            	    // InternalTurn.g:86:3: ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) )
            	    {
            	    // InternalTurn.g:86:3: ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) )
            	    // InternalTurn.g:87:4: {...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalTurn.g:87:101: ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) )
            	    // InternalTurn.g:88:5: ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0);
            	    // InternalTurn.g:91:8: ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) )
            	    // InternalTurn.g:91:9: {...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    }
            	    // InternalTurn.g:91:18: (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? )
            	    // InternalTurn.g:91:19: otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )?
            	    {
            	    otherlv_1=(Token)match(input,13,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_1, grammarAccess.getURNspecAccess().getUrnModelKeyword_0_0());
            	      							
            	    }
            	    // InternalTurn.g:95:8: ( (lv_name_2_0= ruleQualifiedName ) )
            	    // InternalTurn.g:96:9: (lv_name_2_0= ruleQualifiedName )
            	    {
            	    // InternalTurn.g:96:9: (lv_name_2_0= ruleQualifiedName )
            	    // InternalTurn.g:97:10: lv_name_2_0= ruleQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getURNspecAccess().getNameQualifiedNameParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_name_2_0=ruleQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getURNspecRule());
            	      										}
            	      										set(
            	      											current,
            	      											"name",
            	      											lv_name_2_0,
            	      											"org.eclipse.xtext.xbase.Xbase.QualifiedName");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalTurn.g:114:8: ( (lv_info_3_0= ruleConcreteURNspec ) )?
            	    int alt1=2;
            	    int LA1_0 = input.LA(1);

            	    if ( (LA1_0==15) ) {
            	        alt1=1;
            	    }
            	    switch (alt1) {
            	        case 1 :
            	            // InternalTurn.g:115:9: (lv_info_3_0= ruleConcreteURNspec )
            	            {
            	            // InternalTurn.g:115:9: (lv_info_3_0= ruleConcreteURNspec )
            	            // InternalTurn.g:116:10: lv_info_3_0= ruleConcreteURNspec
            	            {
            	            if ( state.backtracking==0 ) {

            	              										newCompositeNode(grammarAccess.getURNspecAccess().getInfoConcreteURNspecParserRuleCall_0_2_0());
            	              									
            	            }
            	            pushFollow(FOLLOW_4);
            	            lv_info_3_0=ruleConcreteURNspec();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElementForParent(grammarAccess.getURNspecRule());
            	              										}
            	              										set(
            	              											current,
            	              											"info",
            	              											lv_info_3_0,
            	              											"org.xtext.project.turn.Turn.ConcreteURNspec");
            	              										afterParserOrEnumRuleCall();
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalTurn.g:139:3: ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) )
            	    {
            	    // InternalTurn.g:139:3: ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) )
            	    // InternalTurn.g:140:4: {...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalTurn.g:140:101: ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ )
            	    // InternalTurn.g:141:5: ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1);
            	    // InternalTurn.g:144:8: ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+
            	    int cnt2=0;
            	    loop2:
            	    do {
            	        int alt2=2;
            	        int LA2_0 = input.LA(1);

            	        if ( (LA2_0==34) ) {
            	            int LA2_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt2=1;
            	            }


            	        }


            	        switch (alt2) {
            	    	case 1 :
            	    	    // InternalTurn.g:144:9: {...}? => ( (lv_actors_4_0= ruleActor ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:144:18: ( (lv_actors_4_0= ruleActor ) )
            	    	    // InternalTurn.g:144:19: (lv_actors_4_0= ruleActor )
            	    	    {
            	    	    // InternalTurn.g:144:19: (lv_actors_4_0= ruleActor )
            	    	    // InternalTurn.g:145:9: lv_actors_4_0= ruleActor
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getActorsActorParserRuleCall_1_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_actors_4_0=ruleActor();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"actors",
            	    	      										lv_actors_4_0,
            	    	      										"org.xtext.project.turn.Turn.Actor");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt2 >= 1 ) break loop2;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(2, input);
            	                throw eee;
            	        }
            	        cnt2++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalTurn.g:167:3: ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) )
            	    {
            	    // InternalTurn.g:167:3: ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) )
            	    // InternalTurn.g:168:4: {...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2)");
            	    }
            	    // InternalTurn.g:168:101: ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) )
            	    // InternalTurn.g:169:5: ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2);
            	    // InternalTurn.g:172:8: ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) )
            	    // InternalTurn.g:172:9: {...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    }
            	    // InternalTurn.g:172:18: ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) )
            	    // InternalTurn.g:172:19: (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' )
            	    {
            	    // InternalTurn.g:172:19: (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' )
            	    // InternalTurn.g:173:9: lv_showAsMeansEnd_5_0= 'showAsMeansEnd'
            	    {
            	    lv_showAsMeansEnd_5_0=(Token)match(input,14,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(lv_showAsMeansEnd_5_0, grammarAccess.getURNspecAccess().getShowAsMeansEndShowAsMeansEndKeyword_2_0());
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getURNspecRule());
            	      									}
            	      									setWithLastConsumed(current, "showAsMeansEnd", true, "showAsMeansEnd");
            	      								
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalTurn.g:190:3: ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) )
            	    {
            	    // InternalTurn.g:190:3: ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) )
            	    // InternalTurn.g:191:4: {...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3)");
            	    }
            	    // InternalTurn.g:191:101: ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ )
            	    // InternalTurn.g:192:5: ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3);
            	    // InternalTurn.g:195:8: ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+
            	    int cnt3=0;
            	    loop3:
            	    do {
            	        int alt3=2;
            	        int LA3_0 = input.LA(1);

            	        if ( (LA3_0==42) ) {
            	            int LA3_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt3=1;
            	            }


            	        }


            	        switch (alt3) {
            	    	case 1 :
            	    	    // InternalTurn.g:195:9: {...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:195:18: ( (lv_stratGroups_6_0= ruleStrategiesGroup ) )
            	    	    // InternalTurn.g:195:19: (lv_stratGroups_6_0= ruleStrategiesGroup )
            	    	    {
            	    	    // InternalTurn.g:195:19: (lv_stratGroups_6_0= ruleStrategiesGroup )
            	    	    // InternalTurn.g:196:9: lv_stratGroups_6_0= ruleStrategiesGroup
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getStratGroupsStrategiesGroupParserRuleCall_3_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_stratGroups_6_0=ruleStrategiesGroup();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"stratGroups",
            	    	      										lv_stratGroups_6_0,
            	    	      										"org.xtext.project.turn.Turn.StrategiesGroup");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt3 >= 1 ) break loop3;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(3, input);
            	                throw eee;
            	        }
            	        cnt3++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalTurn.g:218:3: ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) )
            	    {
            	    // InternalTurn.g:218:3: ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) )
            	    // InternalTurn.g:219:4: {...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4)");
            	    }
            	    // InternalTurn.g:219:101: ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ )
            	    // InternalTurn.g:220:5: ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4);
            	    // InternalTurn.g:223:8: ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+
            	    int cnt4=0;
            	    loop4:
            	    do {
            	        int alt4=2;
            	        int LA4_0 = input.LA(1);

            	        if ( (LA4_0==43) ) {
            	            int LA4_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt4=1;
            	            }


            	        }


            	        switch (alt4) {
            	    	case 1 :
            	    	    // InternalTurn.g:223:9: {...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:223:18: ( (lv_strategies_7_0= ruleEvaluationStrategy ) )
            	    	    // InternalTurn.g:223:19: (lv_strategies_7_0= ruleEvaluationStrategy )
            	    	    {
            	    	    // InternalTurn.g:223:19: (lv_strategies_7_0= ruleEvaluationStrategy )
            	    	    // InternalTurn.g:224:9: lv_strategies_7_0= ruleEvaluationStrategy
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getStrategiesEvaluationStrategyParserRuleCall_4_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_strategies_7_0=ruleEvaluationStrategy();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"strategies",
            	    	      										lv_strategies_7_0,
            	    	      										"org.xtext.project.turn.Turn.EvaluationStrategy");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt4 >= 1 ) break loop4;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(4, input);
            	                throw eee;
            	        }
            	        cnt4++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalTurn.g:246:3: ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) )
            	    {
            	    // InternalTurn.g:246:3: ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) )
            	    // InternalTurn.g:247:4: {...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5)");
            	    }
            	    // InternalTurn.g:247:101: ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ )
            	    // InternalTurn.g:248:5: ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5);
            	    // InternalTurn.g:251:8: ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+
            	    int cnt5=0;
            	    loop5:
            	    do {
            	        int alt5=2;
            	        int LA5_0 = input.LA(1);

            	        if ( (LA5_0==49) ) {
            	            int LA5_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt5=1;
            	            }


            	        }
            	        else if ( (LA5_0==53) ) {
            	            int LA5_3 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt5=1;
            	            }


            	        }


            	        switch (alt5) {
            	    	case 1 :
            	    	    // InternalTurn.g:251:9: {...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:251:18: ( (lv_indConversions_8_0= ruleIndicatorConversion ) )
            	    	    // InternalTurn.g:251:19: (lv_indConversions_8_0= ruleIndicatorConversion )
            	    	    {
            	    	    // InternalTurn.g:251:19: (lv_indConversions_8_0= ruleIndicatorConversion )
            	    	    // InternalTurn.g:252:9: lv_indConversions_8_0= ruleIndicatorConversion
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getIndConversionsIndicatorConversionParserRuleCall_5_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_indConversions_8_0=ruleIndicatorConversion();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"indConversions",
            	    	      										lv_indConversions_8_0,
            	    	      										"org.xtext.project.turn.Turn.IndicatorConversion");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt5 >= 1 ) break loop5;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(5, input);
            	                throw eee;
            	        }
            	        cnt5++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalTurn.g:274:3: ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) )
            	    {
            	    // InternalTurn.g:274:3: ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) )
            	    // InternalTurn.g:275:4: {...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6)");
            	    }
            	    // InternalTurn.g:275:101: ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ )
            	    // InternalTurn.g:276:5: ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6);
            	    // InternalTurn.g:279:8: ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+
            	    int cnt6=0;
            	    loop6:
            	    do {
            	        int alt6=2;
            	        int LA6_0 = input.LA(1);

            	        if ( (LA6_0==54) ) {
            	            int LA6_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt6=1;
            	            }


            	        }


            	        switch (alt6) {
            	    	case 1 :
            	    	    // InternalTurn.g:279:9: {...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:279:18: ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) )
            	    	    // InternalTurn.g:279:19: (lv_contribContextGroups_9_0= ruleContributionContextGroup )
            	    	    {
            	    	    // InternalTurn.g:279:19: (lv_contribContextGroups_9_0= ruleContributionContextGroup )
            	    	    // InternalTurn.g:280:9: lv_contribContextGroups_9_0= ruleContributionContextGroup
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getContribContextGroupsContributionContextGroupParserRuleCall_6_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_contribContextGroups_9_0=ruleContributionContextGroup();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"contribContextGroups",
            	    	      										lv_contribContextGroups_9_0,
            	    	      										"org.xtext.project.turn.Turn.ContributionContextGroup");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt6 >= 1 ) break loop6;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(6, input);
            	                throw eee;
            	        }
            	        cnt6++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalTurn.g:302:3: ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) )
            	    {
            	    // InternalTurn.g:302:3: ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) )
            	    // InternalTurn.g:303:4: {...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7)");
            	    }
            	    // InternalTurn.g:303:101: ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ )
            	    // InternalTurn.g:304:5: ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7);
            	    // InternalTurn.g:307:8: ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+
            	    int cnt7=0;
            	    loop7:
            	    do {
            	        int alt7=2;
            	        int LA7_0 = input.LA(1);

            	        if ( (LA7_0==55) ) {
            	            int LA7_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt7=1;
            	            }


            	        }


            	        switch (alt7) {
            	    	case 1 :
            	    	    // InternalTurn.g:307:9: {...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:307:18: ( (lv_contribContexts_10_0= ruleContributionContext ) )
            	    	    // InternalTurn.g:307:19: (lv_contribContexts_10_0= ruleContributionContext )
            	    	    {
            	    	    // InternalTurn.g:307:19: (lv_contribContexts_10_0= ruleContributionContext )
            	    	    // InternalTurn.g:308:9: lv_contribContexts_10_0= ruleContributionContext
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getContribContextsContributionContextParserRuleCall_7_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_contribContexts_10_0=ruleContributionContext();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"contribContexts",
            	    	      										lv_contribContexts_10_0,
            	    	      										"org.xtext.project.turn.Turn.ContributionContext");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt7 >= 1 ) break loop7;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(7, input);
            	                throw eee;
            	        }
            	        cnt7++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalTurn.g:330:3: ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) )
            	    {
            	    // InternalTurn.g:330:3: ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) )
            	    // InternalTurn.g:331:4: {...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8)");
            	    }
            	    // InternalTurn.g:331:101: ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ )
            	    // InternalTurn.g:332:5: ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8);
            	    // InternalTurn.g:335:8: ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+
            	    int cnt8=0;
            	    loop8:
            	    do {
            	        int alt8=2;
            	        int LA8_0 = input.LA(1);

            	        if ( (LA8_0==58) ) {
            	            int LA8_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt8=1;
            	            }


            	        }
            	        else if ( (LA8_0==59) ) {
            	            int LA8_3 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt8=1;
            	            }


            	        }


            	        switch (alt8) {
            	    	case 1 :
            	    	    // InternalTurn.g:335:9: {...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:335:18: ( (lv_ucmMaps_11_0= ruleUCMmap ) )
            	    	    // InternalTurn.g:335:19: (lv_ucmMaps_11_0= ruleUCMmap )
            	    	    {
            	    	    // InternalTurn.g:335:19: (lv_ucmMaps_11_0= ruleUCMmap )
            	    	    // InternalTurn.g:336:9: lv_ucmMaps_11_0= ruleUCMmap
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getUcmMapsUCMmapParserRuleCall_8_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_ucmMaps_11_0=ruleUCMmap();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"ucmMaps",
            	    	      										lv_ucmMaps_11_0,
            	    	      										"org.xtext.project.turn.Turn.UCMmap");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt8 >= 1 ) break loop8;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(8, input);
            	                throw eee;
            	        }
            	        cnt8++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalTurn.g:358:3: ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) )
            	    {
            	    // InternalTurn.g:358:3: ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) )
            	    // InternalTurn.g:359:4: {...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9)");
            	    }
            	    // InternalTurn.g:359:101: ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ )
            	    // InternalTurn.g:360:5: ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9);
            	    // InternalTurn.g:363:8: ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+
            	    int cnt9=0;
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==23) ) {
            	            int LA9_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt9=1;
            	            }


            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // InternalTurn.g:363:9: {...}? => ( (lv_concerns_12_0= ruleConcern ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:363:18: ( (lv_concerns_12_0= ruleConcern ) )
            	    	    // InternalTurn.g:363:19: (lv_concerns_12_0= ruleConcern )
            	    	    {
            	    	    // InternalTurn.g:363:19: (lv_concerns_12_0= ruleConcern )
            	    	    // InternalTurn.g:364:9: lv_concerns_12_0= ruleConcern
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getConcernsConcernParserRuleCall_9_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_concerns_12_0=ruleConcern();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"concerns",
            	    	      										lv_concerns_12_0,
            	    	      										"org.xtext.project.turn.Turn.Concern");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt9 >= 1 ) break loop9;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(9, input);
            	                throw eee;
            	        }
            	        cnt9++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalTurn.g:386:3: ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) )
            	    {
            	    // InternalTurn.g:386:3: ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) )
            	    // InternalTurn.g:387:4: {...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10)");
            	    }
            	    // InternalTurn.g:387:102: ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ )
            	    // InternalTurn.g:388:5: ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10);
            	    // InternalTurn.g:391:8: ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+
            	    int cnt10=0;
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==29) ) {
            	            int LA10_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt10=1;
            	            }


            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // InternalTurn.g:391:9: {...}? => ( (lv_urnlinks_13_0= ruleURNlink ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:391:18: ( (lv_urnlinks_13_0= ruleURNlink ) )
            	    	    // InternalTurn.g:391:19: (lv_urnlinks_13_0= ruleURNlink )
            	    	    {
            	    	    // InternalTurn.g:391:19: (lv_urnlinks_13_0= ruleURNlink )
            	    	    // InternalTurn.g:392:9: lv_urnlinks_13_0= ruleURNlink
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getUrnlinksURNlinkParserRuleCall_10_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_urnlinks_13_0=ruleURNlink();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"urnlinks",
            	    	      										lv_urnlinks_13_0,
            	    	      										"org.xtext.project.turn.Turn.URNlink");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt10 >= 1 ) break loop10;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(10, input);
            	                throw eee;
            	        }
            	        cnt10++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalTurn.g:414:3: ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) )
            	    {
            	    // InternalTurn.g:414:3: ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) )
            	    // InternalTurn.g:415:4: {...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11)");
            	    }
            	    // InternalTurn.g:415:102: ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ )
            	    // InternalTurn.g:416:5: ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11);
            	    // InternalTurn.g:419:8: ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+
            	    int cnt11=0;
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==32) ) {
            	            int LA11_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt11=1;
            	            }


            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // InternalTurn.g:419:9: {...}? => ( (lv_metadata_14_0= ruleMetadata ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleURNspec", "true");
            	    	    }
            	    	    // InternalTurn.g:419:18: ( (lv_metadata_14_0= ruleMetadata ) )
            	    	    // InternalTurn.g:419:19: (lv_metadata_14_0= ruleMetadata )
            	    	    {
            	    	    // InternalTurn.g:419:19: (lv_metadata_14_0= ruleMetadata )
            	    	    // InternalTurn.g:420:9: lv_metadata_14_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      									newCompositeNode(grammarAccess.getURNspecAccess().getMetadataMetadataParserRuleCall_11_0());
            	    	      								
            	    	    }
            	    	    pushFollow(FOLLOW_4);
            	    	    lv_metadata_14_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      									if (current==null) {
            	    	      										current = createModelElementForParent(grammarAccess.getURNspecRule());
            	    	      									}
            	    	      									add(
            	    	      										current,
            	    	      										"metadata",
            	    	      										lv_metadata_14_0,
            	    	      										"org.xtext.project.turn.Turn.Metadata");
            	    	      									afterParserOrEnumRuleCall();
            	    	      								
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt11 >= 1 ) break loop11;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(11, input);
            	                throw eee;
            	        }
            	        cnt11++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt12 >= 1 ) break loop12;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(12, input);
                        throw eee;
                }
                cnt12++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getURNspecAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleURNspec", "getUnorderedGroupHelper().canLeave(grammarAccess.getURNspecAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getURNspecAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURNspec"


    // $ANTLR start "entryRuleConcreteURNspec"
    // InternalTurn.g:453:1: entryRuleConcreteURNspec returns [EObject current=null] : iv_ruleConcreteURNspec= ruleConcreteURNspec EOF ;
    public final EObject entryRuleConcreteURNspec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteURNspec = null;


        try {
            // InternalTurn.g:453:56: (iv_ruleConcreteURNspec= ruleConcreteURNspec EOF )
            // InternalTurn.g:454:2: iv_ruleConcreteURNspec= ruleConcreteURNspec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteURNspecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteURNspec=ruleConcreteURNspec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteURNspec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteURNspec"


    // $ANTLR start "ruleConcreteURNspec"
    // InternalTurn.g:460:1: ruleConcreteURNspec returns [EObject current=null] : (otherlv_0= '{' otherlv_1= 'description' ( (lv_description_2_0= RULE_STRING ) ) otherlv_3= 'author' ( (lv_author_4_0= RULE_STRING ) ) otherlv_5= 'created' ( (lv_created_6_0= RULE_STRING ) ) otherlv_7= 'modified' ( (lv_modified_8_0= RULE_STRING ) ) otherlv_9= 'version' ( (lv_specVersion_10_0= RULE_STRING ) ) otherlv_11= 'urnVersion' ( (lv_urnVersion_12_0= RULE_STRING ) ) otherlv_13= '}' ) ;
    public final EObject ruleConcreteURNspec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_description_2_0=null;
        Token otherlv_3=null;
        Token lv_author_4_0=null;
        Token otherlv_5=null;
        Token lv_created_6_0=null;
        Token otherlv_7=null;
        Token lv_modified_8_0=null;
        Token otherlv_9=null;
        Token lv_specVersion_10_0=null;
        Token otherlv_11=null;
        Token lv_urnVersion_12_0=null;
        Token otherlv_13=null;


        	enterRule();

        try {
            // InternalTurn.g:466:2: ( (otherlv_0= '{' otherlv_1= 'description' ( (lv_description_2_0= RULE_STRING ) ) otherlv_3= 'author' ( (lv_author_4_0= RULE_STRING ) ) otherlv_5= 'created' ( (lv_created_6_0= RULE_STRING ) ) otherlv_7= 'modified' ( (lv_modified_8_0= RULE_STRING ) ) otherlv_9= 'version' ( (lv_specVersion_10_0= RULE_STRING ) ) otherlv_11= 'urnVersion' ( (lv_urnVersion_12_0= RULE_STRING ) ) otherlv_13= '}' ) )
            // InternalTurn.g:467:2: (otherlv_0= '{' otherlv_1= 'description' ( (lv_description_2_0= RULE_STRING ) ) otherlv_3= 'author' ( (lv_author_4_0= RULE_STRING ) ) otherlv_5= 'created' ( (lv_created_6_0= RULE_STRING ) ) otherlv_7= 'modified' ( (lv_modified_8_0= RULE_STRING ) ) otherlv_9= 'version' ( (lv_specVersion_10_0= RULE_STRING ) ) otherlv_11= 'urnVersion' ( (lv_urnVersion_12_0= RULE_STRING ) ) otherlv_13= '}' )
            {
            // InternalTurn.g:467:2: (otherlv_0= '{' otherlv_1= 'description' ( (lv_description_2_0= RULE_STRING ) ) otherlv_3= 'author' ( (lv_author_4_0= RULE_STRING ) ) otherlv_5= 'created' ( (lv_created_6_0= RULE_STRING ) ) otherlv_7= 'modified' ( (lv_modified_8_0= RULE_STRING ) ) otherlv_9= 'version' ( (lv_specVersion_10_0= RULE_STRING ) ) otherlv_11= 'urnVersion' ( (lv_urnVersion_12_0= RULE_STRING ) ) otherlv_13= '}' )
            // InternalTurn.g:468:3: otherlv_0= '{' otherlv_1= 'description' ( (lv_description_2_0= RULE_STRING ) ) otherlv_3= 'author' ( (lv_author_4_0= RULE_STRING ) ) otherlv_5= 'created' ( (lv_created_6_0= RULE_STRING ) ) otherlv_7= 'modified' ( (lv_modified_8_0= RULE_STRING ) ) otherlv_9= 'version' ( (lv_specVersion_10_0= RULE_STRING ) ) otherlv_11= 'urnVersion' ( (lv_urnVersion_12_0= RULE_STRING ) ) otherlv_13= '}'
            {
            otherlv_0=(Token)match(input,15,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConcreteURNspecAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConcreteURNspecAccess().getDescriptionKeyword_1());
              		
            }
            // InternalTurn.g:476:3: ( (lv_description_2_0= RULE_STRING ) )
            // InternalTurn.g:477:4: (lv_description_2_0= RULE_STRING )
            {
            // InternalTurn.g:477:4: (lv_description_2_0= RULE_STRING )
            // InternalTurn.g:478:5: lv_description_2_0= RULE_STRING
            {
            lv_description_2_0=(Token)match(input,RULE_STRING,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_description_2_0, grammarAccess.getConcreteURNspecAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteURNspecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"description",
              						lv_description_2_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConcreteURNspecAccess().getAuthorKeyword_3());
              		
            }
            // InternalTurn.g:498:3: ( (lv_author_4_0= RULE_STRING ) )
            // InternalTurn.g:499:4: (lv_author_4_0= RULE_STRING )
            {
            // InternalTurn.g:499:4: (lv_author_4_0= RULE_STRING )
            // InternalTurn.g:500:5: lv_author_4_0= RULE_STRING
            {
            lv_author_4_0=(Token)match(input,RULE_STRING,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_author_4_0, grammarAccess.getConcreteURNspecAccess().getAuthorSTRINGTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteURNspecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"author",
              						lv_author_4_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,18,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getConcreteURNspecAccess().getCreatedKeyword_5());
              		
            }
            // InternalTurn.g:520:3: ( (lv_created_6_0= RULE_STRING ) )
            // InternalTurn.g:521:4: (lv_created_6_0= RULE_STRING )
            {
            // InternalTurn.g:521:4: (lv_created_6_0= RULE_STRING )
            // InternalTurn.g:522:5: lv_created_6_0= RULE_STRING
            {
            lv_created_6_0=(Token)match(input,RULE_STRING,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_created_6_0, grammarAccess.getConcreteURNspecAccess().getCreatedSTRINGTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteURNspecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"created",
              						lv_created_6_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_7=(Token)match(input,19,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getConcreteURNspecAccess().getModifiedKeyword_7());
              		
            }
            // InternalTurn.g:542:3: ( (lv_modified_8_0= RULE_STRING ) )
            // InternalTurn.g:543:4: (lv_modified_8_0= RULE_STRING )
            {
            // InternalTurn.g:543:4: (lv_modified_8_0= RULE_STRING )
            // InternalTurn.g:544:5: lv_modified_8_0= RULE_STRING
            {
            lv_modified_8_0=(Token)match(input,RULE_STRING,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_modified_8_0, grammarAccess.getConcreteURNspecAccess().getModifiedSTRINGTerminalRuleCall_8_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteURNspecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"modified",
              						lv_modified_8_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_9=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getConcreteURNspecAccess().getVersionKeyword_9());
              		
            }
            // InternalTurn.g:564:3: ( (lv_specVersion_10_0= RULE_STRING ) )
            // InternalTurn.g:565:4: (lv_specVersion_10_0= RULE_STRING )
            {
            // InternalTurn.g:565:4: (lv_specVersion_10_0= RULE_STRING )
            // InternalTurn.g:566:5: lv_specVersion_10_0= RULE_STRING
            {
            lv_specVersion_10_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_specVersion_10_0, grammarAccess.getConcreteURNspecAccess().getSpecVersionSTRINGTerminalRuleCall_10_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteURNspecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"specVersion",
              						lv_specVersion_10_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_11=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getConcreteURNspecAccess().getUrnVersionKeyword_11());
              		
            }
            // InternalTurn.g:586:3: ( (lv_urnVersion_12_0= RULE_STRING ) )
            // InternalTurn.g:587:4: (lv_urnVersion_12_0= RULE_STRING )
            {
            // InternalTurn.g:587:4: (lv_urnVersion_12_0= RULE_STRING )
            // InternalTurn.g:588:5: lv_urnVersion_12_0= RULE_STRING
            {
            lv_urnVersion_12_0=(Token)match(input,RULE_STRING,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_urnVersion_12_0, grammarAccess.getConcreteURNspecAccess().getUrnVersionSTRINGTerminalRuleCall_12_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteURNspecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"urnVersion",
              						lv_urnVersion_12_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_13=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getConcreteURNspecAccess().getRightCurlyBracketKeyword_13());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteURNspec"


    // $ANTLR start "entryRuleConcern"
    // InternalTurn.g:612:1: entryRuleConcern returns [EObject current=null] : iv_ruleConcern= ruleConcern EOF ;
    public final EObject entryRuleConcern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcern = null;


        try {
            // InternalTurn.g:612:48: (iv_ruleConcern= ruleConcern EOF )
            // InternalTurn.g:613:2: iv_ruleConcern= ruleConcern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcernRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcern=ruleConcern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcern"


    // $ANTLR start "ruleConcern"
    // InternalTurn.g:619:1: ruleConcern returns [EObject current=null] : (otherlv_0= 'concern' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (lv_condition_4_0= ruleCondition ) )? ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* ) ;
    public final EObject ruleConcern() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_condition_4_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:625:2: ( (otherlv_0= 'concern' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (lv_condition_4_0= ruleCondition ) )? ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* ) )
            // InternalTurn.g:626:2: (otherlv_0= 'concern' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (lv_condition_4_0= ruleCondition ) )? ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )
            {
            // InternalTurn.g:626:2: (otherlv_0= 'concern' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (lv_condition_4_0= ruleCondition ) )? ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )
            // InternalTurn.g:627:3: otherlv_0= 'concern' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (lv_condition_4_0= ruleCondition ) )? ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
            {
            otherlv_0=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConcernAccess().getConcernKeyword_0());
              		
            }
            // InternalTurn.g:631:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:632:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:632:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:633:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConcernAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConcernRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:650:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:651:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:651:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:652:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConcernAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConcernRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,24,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConcernAccess().getColonKeyword_3());
              		
            }
            // InternalTurn.g:673:3: ( (lv_condition_4_0= ruleCondition ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==27) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalTurn.g:674:4: (lv_condition_4_0= ruleCondition )
                    {
                    // InternalTurn.g:674:4: (lv_condition_4_0= ruleCondition )
                    // InternalTurn.g:675:5: lv_condition_4_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConcernAccess().getConditionConditionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_condition_4_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConcernRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_4_0,
                      						"org.xtext.project.turn.Turn.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:692:3: ( (otherlv_5= RULE_ID ) )
            // InternalTurn.g:693:4: (otherlv_5= RULE_ID )
            {
            // InternalTurn.g:693:4: (otherlv_5= RULE_ID )
            // InternalTurn.g:694:5: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcernRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getConcernAccess().getElementURNmodelElementCrossReference_5_0());
              				
            }

            }


            }

            // InternalTurn.g:705:3: (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==25) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalTurn.g:706:4: otherlv_6= ',' ( (otherlv_7= RULE_ID ) )
            	    {
            	    otherlv_6=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getConcernAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalTurn.g:710:4: ( (otherlv_7= RULE_ID ) )
            	    // InternalTurn.g:711:5: (otherlv_7= RULE_ID )
            	    {
            	    // InternalTurn.g:711:5: (otherlv_7= RULE_ID )
            	    // InternalTurn.g:712:6: otherlv_7= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getConcernRule());
            	      						}
            	      					
            	    }
            	    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_7, grammarAccess.getConcernAccess().getElementsURNmodelElementCrossReference_6_1_0());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcern"


    // $ANTLR start "entryRuleLongName"
    // InternalTurn.g:728:1: entryRuleLongName returns [EObject current=null] : iv_ruleLongName= ruleLongName EOF ;
    public final EObject entryRuleLongName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLongName = null;


        try {
            // InternalTurn.g:728:49: (iv_ruleLongName= ruleLongName EOF )
            // InternalTurn.g:729:2: iv_ruleLongName= ruleLongName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLongNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLongName=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLongName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLongName"


    // $ANTLR start "ruleLongName"
    // InternalTurn.g:735:1: ruleLongName returns [EObject current=null] : ( () (otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) ) )? ) ;
    public final EObject ruleLongName() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_longname_2_1=null;
        Token lv_longname_2_2=null;


        	enterRule();

        try {
            // InternalTurn.g:741:2: ( ( () (otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) ) )? ) )
            // InternalTurn.g:742:2: ( () (otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) ) )? )
            {
            // InternalTurn.g:742:2: ( () (otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) ) )? )
            // InternalTurn.g:743:3: () (otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) ) )?
            {
            // InternalTurn.g:743:3: ()
            // InternalTurn.g:744:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLongNameAccess().getLongNameAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:750:3: (otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==26) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalTurn.g:751:4: otherlv_1= '#' ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) )
                    {
                    otherlv_1=(Token)match(input,26,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLongNameAccess().getNumberSignKeyword_1_0());
                      			
                    }
                    // InternalTurn.g:755:4: ( ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) ) )
                    // InternalTurn.g:756:5: ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) )
                    {
                    // InternalTurn.g:756:5: ( (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING ) )
                    // InternalTurn.g:757:6: (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING )
                    {
                    // InternalTurn.g:757:6: (lv_longname_2_1= RULE_ID | lv_longname_2_2= RULE_STRING )
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==RULE_ID) ) {
                        alt15=1;
                    }
                    else if ( (LA15_0==RULE_STRING) ) {
                        alt15=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 0, input);

                        throw nvae;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalTurn.g:758:7: lv_longname_2_1= RULE_ID
                            {
                            lv_longname_2_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_longname_2_1, grammarAccess.getLongNameAccess().getLongnameIDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getLongNameRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"longname",
                              								lv_longname_2_1,
                              								"org.eclipse.xtext.xbase.Xtype.ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalTurn.g:773:7: lv_longname_2_2= RULE_STRING
                            {
                            lv_longname_2_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_longname_2_2, grammarAccess.getLongNameAccess().getLongnameSTRINGTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getLongNameRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"longname",
                              								lv_longname_2_2,
                              								"org.eclipse.xtext.xbase.Xtype.STRING");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLongName"


    // $ANTLR start "entryRuleCondition"
    // InternalTurn.g:795:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalTurn.g:795:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalTurn.g:796:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalTurn.g:802:1: ruleCondition returns [EObject current=null] : (otherlv_0= '[' ( (lv_expression_1_0= ruleText ) ) otherlv_2= ']' (otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}' )? ) ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_1_0 = null;

        EObject lv_info_4_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:808:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleText ) ) otherlv_2= ']' (otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}' )? ) )
            // InternalTurn.g:809:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleText ) ) otherlv_2= ']' (otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}' )? )
            {
            // InternalTurn.g:809:2: (otherlv_0= '[' ( (lv_expression_1_0= ruleText ) ) otherlv_2= ']' (otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}' )? )
            // InternalTurn.g:810:3: otherlv_0= '[' ( (lv_expression_1_0= ruleText ) ) otherlv_2= ']' (otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}' )?
            {
            otherlv_0=(Token)match(input,27,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalTurn.g:814:3: ( (lv_expression_1_0= ruleText ) )
            // InternalTurn.g:815:4: (lv_expression_1_0= ruleText )
            {
            // InternalTurn.g:815:4: (lv_expression_1_0= ruleText )
            // InternalTurn.g:816:5: lv_expression_1_0= ruleText
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionAccess().getExpressionTextParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_expression_1_0=ruleText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.project.turn.Turn.Text");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,28,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalTurn.g:837:3: (otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}' )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==15) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalTurn.g:838:4: otherlv_3= '{' ( (lv_info_4_0= ruleConcreteCondition ) )? otherlv_5= '}'
                    {
                    otherlv_3=(Token)match(input,15,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalTurn.g:842:4: ( (lv_info_4_0= ruleConcreteCondition ) )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==RULE_STRING) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalTurn.g:843:5: (lv_info_4_0= ruleConcreteCondition )
                            {
                            // InternalTurn.g:843:5: (lv_info_4_0= ruleConcreteCondition )
                            // InternalTurn.g:844:6: lv_info_4_0= ruleConcreteCondition
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConditionAccess().getInfoConcreteConditionParserRuleCall_3_1_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_info_4_0=ruleConcreteCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConditionRule());
                              						}
                              						set(
                              							current,
                              							"info",
                              							lv_info_4_0,
                              							"org.xtext.project.turn.Turn.ConcreteCondition");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleConcreteCondition"
    // InternalTurn.g:870:1: entryRuleConcreteCondition returns [EObject current=null] : iv_ruleConcreteCondition= ruleConcreteCondition EOF ;
    public final EObject entryRuleConcreteCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteCondition = null;


        try {
            // InternalTurn.g:870:58: (iv_ruleConcreteCondition= ruleConcreteCondition EOF )
            // InternalTurn.g:871:2: iv_ruleConcreteCondition= ruleConcreteCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteCondition=ruleConcreteCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteCondition"


    // $ANTLR start "ruleConcreteCondition"
    // InternalTurn.g:877:1: ruleConcreteCondition returns [EObject current=null] : ( ( (lv_label_0_0= RULE_STRING ) ) ( (lv_description_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleConcreteCondition() throws RecognitionException {
        EObject current = null;

        Token lv_label_0_0=null;
        Token lv_description_1_0=null;


        	enterRule();

        try {
            // InternalTurn.g:883:2: ( ( ( (lv_label_0_0= RULE_STRING ) ) ( (lv_description_1_0= RULE_STRING ) ) ) )
            // InternalTurn.g:884:2: ( ( (lv_label_0_0= RULE_STRING ) ) ( (lv_description_1_0= RULE_STRING ) ) )
            {
            // InternalTurn.g:884:2: ( ( (lv_label_0_0= RULE_STRING ) ) ( (lv_description_1_0= RULE_STRING ) ) )
            // InternalTurn.g:885:3: ( (lv_label_0_0= RULE_STRING ) ) ( (lv_description_1_0= RULE_STRING ) )
            {
            // InternalTurn.g:885:3: ( (lv_label_0_0= RULE_STRING ) )
            // InternalTurn.g:886:4: (lv_label_0_0= RULE_STRING )
            {
            // InternalTurn.g:886:4: (lv_label_0_0= RULE_STRING )
            // InternalTurn.g:887:5: lv_label_0_0= RULE_STRING
            {
            lv_label_0_0=(Token)match(input,RULE_STRING,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_label_0_0, grammarAccess.getConcreteConditionAccess().getLabelSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteConditionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"label",
              						lv_label_0_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            // InternalTurn.g:903:3: ( (lv_description_1_0= RULE_STRING ) )
            // InternalTurn.g:904:4: (lv_description_1_0= RULE_STRING )
            {
            // InternalTurn.g:904:4: (lv_description_1_0= RULE_STRING )
            // InternalTurn.g:905:5: lv_description_1_0= RULE_STRING
            {
            lv_description_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_description_1_0, grammarAccess.getConcreteConditionAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteConditionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"description",
              						lv_description_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteCondition"


    // $ANTLR start "entryRuleURNlink"
    // InternalTurn.g:925:1: entryRuleURNlink returns [EObject current=null] : iv_ruleURNlink= ruleURNlink EOF ;
    public final EObject entryRuleURNlink() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURNlink = null;


        try {
            // InternalTurn.g:925:48: (iv_ruleURNlink= ruleURNlink EOF )
            // InternalTurn.g:926:2: iv_ruleURNlink= ruleURNlink EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURNlinkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleURNlink=ruleURNlink();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURNlink; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURNlink"


    // $ANTLR start "ruleURNlink"
    // InternalTurn.g:932:1: ruleURNlink returns [EObject current=null] : (otherlv_0= 'link' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' )? (otherlv_4= 'type' ( (lv_type_5_0= ruleText ) ) )? ( (otherlv_6= RULE_ID ) ) otherlv_7= '-->' ( (otherlv_8= RULE_ID ) ) ) ;
    public final EObject ruleURNlink() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_type_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:938:2: ( (otherlv_0= 'link' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' )? (otherlv_4= 'type' ( (lv_type_5_0= ruleText ) ) )? ( (otherlv_6= RULE_ID ) ) otherlv_7= '-->' ( (otherlv_8= RULE_ID ) ) ) )
            // InternalTurn.g:939:2: (otherlv_0= 'link' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' )? (otherlv_4= 'type' ( (lv_type_5_0= ruleText ) ) )? ( (otherlv_6= RULE_ID ) ) otherlv_7= '-->' ( (otherlv_8= RULE_ID ) ) )
            {
            // InternalTurn.g:939:2: (otherlv_0= 'link' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' )? (otherlv_4= 'type' ( (lv_type_5_0= ruleText ) ) )? ( (otherlv_6= RULE_ID ) ) otherlv_7= '-->' ( (otherlv_8= RULE_ID ) ) )
            // InternalTurn.g:940:3: otherlv_0= 'link' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' )? (otherlv_4= 'type' ( (lv_type_5_0= ruleText ) ) )? ( (otherlv_6= RULE_ID ) ) otherlv_7= '-->' ( (otherlv_8= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,29,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getURNlinkAccess().getLinkKeyword_0());
              		
            }
            // InternalTurn.g:944:3: ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID) ) {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==24||LA19_1==26||LA19_1==80) ) {
                    alt19=1;
                }
            }
            switch (alt19) {
                case 1 :
                    // InternalTurn.g:945:4: ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':'
                    {
                    // InternalTurn.g:945:4: ( (lv_name_1_0= ruleQualifiedName ) )
                    // InternalTurn.g:946:5: (lv_name_1_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:946:5: (lv_name_1_0= ruleQualifiedName )
                    // InternalTurn.g:947:6: lv_name_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getURNlinkAccess().getNameQualifiedNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_name_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getURNlinkRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:964:4: ( (lv_longName_2_0= ruleLongName ) )
                    // InternalTurn.g:965:5: (lv_longName_2_0= ruleLongName )
                    {
                    // InternalTurn.g:965:5: (lv_longName_2_0= ruleLongName )
                    // InternalTurn.g:966:6: lv_longName_2_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getURNlinkAccess().getLongNameLongNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_longName_2_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getURNlinkRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_2_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,24,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getURNlinkAccess().getColonKeyword_1_2());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:988:3: (otherlv_4= 'type' ( (lv_type_5_0= ruleText ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==30) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalTurn.g:989:4: otherlv_4= 'type' ( (lv_type_5_0= ruleText ) )
                    {
                    otherlv_4=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getURNlinkAccess().getTypeKeyword_2_0());
                      			
                    }
                    // InternalTurn.g:993:4: ( (lv_type_5_0= ruleText ) )
                    // InternalTurn.g:994:5: (lv_type_5_0= ruleText )
                    {
                    // InternalTurn.g:994:5: (lv_type_5_0= ruleText )
                    // InternalTurn.g:995:6: lv_type_5_0= ruleText
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getURNlinkAccess().getTypeTextParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_5_0=ruleText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getURNlinkRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_5_0,
                      							"org.xtext.project.turn.Turn.Text");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:1013:3: ( (otherlv_6= RULE_ID ) )
            // InternalTurn.g:1014:4: (otherlv_6= RULE_ID )
            {
            // InternalTurn.g:1014:4: (otherlv_6= RULE_ID )
            // InternalTurn.g:1015:5: otherlv_6= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getURNlinkRule());
              					}
              				
            }
            otherlv_6=(Token)match(input,RULE_ID,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_6, grammarAccess.getURNlinkAccess().getFromElemURNmodelElementCrossReference_3_0());
              				
            }

            }


            }

            otherlv_7=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getURNlinkAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_4());
              		
            }
            // InternalTurn.g:1030:3: ( (otherlv_8= RULE_ID ) )
            // InternalTurn.g:1031:4: (otherlv_8= RULE_ID )
            {
            // InternalTurn.g:1031:4: (otherlv_8= RULE_ID )
            // InternalTurn.g:1032:5: otherlv_8= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getURNlinkRule());
              					}
              				
            }
            otherlv_8=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_8, grammarAccess.getURNlinkAccess().getToElemURNmodelElementCrossReference_5_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURNlink"


    // $ANTLR start "entryRuleMetadata"
    // InternalTurn.g:1047:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalTurn.g:1047:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalTurn.g:1048:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalTurn.g:1054:1: ruleMetadata returns [EObject current=null] : (otherlv_0= 'metadata' ( ( ( ruleQualifiedName ) ) otherlv_2= ':' )? ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '=' ( (lv_value_5_0= ruleText ) ) ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        EObject lv_value_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1060:2: ( (otherlv_0= 'metadata' ( ( ( ruleQualifiedName ) ) otherlv_2= ':' )? ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '=' ( (lv_value_5_0= ruleText ) ) ) )
            // InternalTurn.g:1061:2: (otherlv_0= 'metadata' ( ( ( ruleQualifiedName ) ) otherlv_2= ':' )? ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '=' ( (lv_value_5_0= ruleText ) ) )
            {
            // InternalTurn.g:1061:2: (otherlv_0= 'metadata' ( ( ( ruleQualifiedName ) ) otherlv_2= ':' )? ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '=' ( (lv_value_5_0= ruleText ) ) )
            // InternalTurn.g:1062:3: otherlv_0= 'metadata' ( ( ( ruleQualifiedName ) ) otherlv_2= ':' )? ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '=' ( (lv_value_5_0= ruleText ) )
            {
            otherlv_0=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMetadataAccess().getMetadataKeyword_0());
              		
            }
            // InternalTurn.g:1066:3: ( ( ( ruleQualifiedName ) ) otherlv_2= ':' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID) ) {
                int LA21_1 = input.LA(2);

                if ( (LA21_1==24||LA21_1==80) ) {
                    alt21=1;
                }
            }
            switch (alt21) {
                case 1 :
                    // InternalTurn.g:1067:4: ( ( ruleQualifiedName ) ) otherlv_2= ':'
                    {
                    // InternalTurn.g:1067:4: ( ( ruleQualifiedName ) )
                    // InternalTurn.g:1068:5: ( ruleQualifiedName )
                    {
                    // InternalTurn.g:1068:5: ( ruleQualifiedName )
                    // InternalTurn.g:1069:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMetadataRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMetadataAccess().getElemURNmodelElementCrossReference_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMetadataAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:1088:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalTurn.g:1089:4: (lv_name_3_0= RULE_ID )
            {
            // InternalTurn.g:1089:4: (lv_name_3_0= RULE_ID )
            // InternalTurn.g:1090:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMetadataRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,33,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalTurn.g:1110:3: ( (lv_value_5_0= ruleText ) )
            // InternalTurn.g:1111:4: (lv_value_5_0= ruleText )
            {
            // InternalTurn.g:1111:4: (lv_value_5_0= ruleText )
            // InternalTurn.g:1112:5: lv_value_5_0= ruleText
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMetadataAccess().getValueTextParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_5_0=ruleText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMetadataRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_5_0,
              						"org.xtext.project.turn.Turn.Text");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleActor"
    // InternalTurn.g:1133:1: entryRuleActor returns [EObject current=null] : iv_ruleActor= ruleActor EOF ;
    public final EObject entryRuleActor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActor = null;


        try {
            // InternalTurn.g:1133:46: (iv_ruleActor= ruleActor EOF )
            // InternalTurn.g:1134:2: iv_ruleActor= ruleActor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActor=ruleActor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActor"


    // $ANTLR start "ruleActor"
    // InternalTurn.g:1140:1: ruleActor returns [EObject current=null] : (otherlv_0= 'actor' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? ( (lv_elems_7_0= ruleIntentionalElement ) )* otherlv_8= '}' ) ;
    public final EObject ruleActor() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        Enumerator lv_importance_5_0 = null;

        AntlrDatatypeRuleToken lv_importanceQuantitative_6_0 = null;

        EObject lv_elems_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1146:2: ( (otherlv_0= 'actor' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? ( (lv_elems_7_0= ruleIntentionalElement ) )* otherlv_8= '}' ) )
            // InternalTurn.g:1147:2: (otherlv_0= 'actor' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? ( (lv_elems_7_0= ruleIntentionalElement ) )* otherlv_8= '}' )
            {
            // InternalTurn.g:1147:2: (otherlv_0= 'actor' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? ( (lv_elems_7_0= ruleIntentionalElement ) )* otherlv_8= '}' )
            // InternalTurn.g:1148:3: otherlv_0= 'actor' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? ( (lv_elems_7_0= ruleIntentionalElement ) )* otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
              		
            }
            // InternalTurn.g:1152:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:1153:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:1153:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:1154:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getActorAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getActorRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:1171:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:1172:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:1172:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:1173:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getActorAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getActorRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,15,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalTurn.g:1194:3: (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==35) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalTurn.g:1195:4: otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getActorAccess().getImportanceKeyword_4_0());
                      			
                    }
                    // InternalTurn.g:1199:4: ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) )
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==157||(LA22_0>=170 && LA22_0<=172)) ) {
                        alt22=1;
                    }
                    else if ( (LA22_0==RULE_INT||(LA22_0>=56 && LA22_0<=57)) ) {
                        alt22=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 22, 0, input);

                        throw nvae;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalTurn.g:1200:5: ( (lv_importance_5_0= ruleImportanceType ) )
                            {
                            // InternalTurn.g:1200:5: ( (lv_importance_5_0= ruleImportanceType ) )
                            // InternalTurn.g:1201:6: (lv_importance_5_0= ruleImportanceType )
                            {
                            // InternalTurn.g:1201:6: (lv_importance_5_0= ruleImportanceType )
                            // InternalTurn.g:1202:7: lv_importance_5_0= ruleImportanceType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActorAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_importance_5_0=ruleImportanceType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActorRule());
                              							}
                              							set(
                              								current,
                              								"importance",
                              								lv_importance_5_0,
                              								"org.xtext.project.turn.Turn.ImportanceType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:1220:5: ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) )
                            {
                            // InternalTurn.g:1220:5: ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) )
                            // InternalTurn.g:1221:6: (lv_importanceQuantitative_6_0= ruleQuantitativeValue )
                            {
                            // InternalTurn.g:1221:6: (lv_importanceQuantitative_6_0= ruleQuantitativeValue )
                            // InternalTurn.g:1222:7: lv_importanceQuantitative_6_0= ruleQuantitativeValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActorAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_importanceQuantitative_6_0=ruleQuantitativeValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActorRule());
                              							}
                              							set(
                              								current,
                              								"importanceQuantitative",
                              								lv_importanceQuantitative_6_0,
                              								"org.xtext.project.turn.Turn.QuantitativeValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalTurn.g:1241:3: ( (lv_elems_7_0= ruleIntentionalElement ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0>=158 && LA24_0<=163)) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalTurn.g:1242:4: (lv_elems_7_0= ruleIntentionalElement )
            	    {
            	    // InternalTurn.g:1242:4: (lv_elems_7_0= ruleIntentionalElement )
            	    // InternalTurn.g:1243:5: lv_elems_7_0= ruleIntentionalElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getActorAccess().getElemsIntentionalElementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_elems_7_0=ruleIntentionalElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getActorRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elems",
            	      						lv_elems_7_0,
            	      						"org.xtext.project.turn.Turn.IntentionalElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            otherlv_8=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActor"


    // $ANTLR start "entryRuleIntentionalElement"
    // InternalTurn.g:1268:1: entryRuleIntentionalElement returns [EObject current=null] : iv_ruleIntentionalElement= ruleIntentionalElement EOF ;
    public final EObject entryRuleIntentionalElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntentionalElement = null;


        try {
            // InternalTurn.g:1268:59: (iv_ruleIntentionalElement= ruleIntentionalElement EOF )
            // InternalTurn.g:1269:2: iv_ruleIntentionalElement= ruleIntentionalElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntentionalElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntentionalElement=ruleIntentionalElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntentionalElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntentionalElement"


    // $ANTLR start "ruleIntentionalElement"
    // InternalTurn.g:1275:1: ruleIntentionalElement returns [EObject current=null] : ( ( (lv_type_0_0= ruleIntentionalElementType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? (otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) ) )? ( (lv_linksSrc_9_0= ruleElementLink ) )* otherlv_10= '}' ) ;
    public final EObject ruleIntentionalElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token lv_unit_8_0=null;
        Token otherlv_10=null;
        Enumerator lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        Enumerator lv_importance_5_0 = null;

        AntlrDatatypeRuleToken lv_importanceQuantitative_6_0 = null;

        EObject lv_linksSrc_9_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1281:2: ( ( ( (lv_type_0_0= ruleIntentionalElementType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? (otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) ) )? ( (lv_linksSrc_9_0= ruleElementLink ) )* otherlv_10= '}' ) )
            // InternalTurn.g:1282:2: ( ( (lv_type_0_0= ruleIntentionalElementType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? (otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) ) )? ( (lv_linksSrc_9_0= ruleElementLink ) )* otherlv_10= '}' )
            {
            // InternalTurn.g:1282:2: ( ( (lv_type_0_0= ruleIntentionalElementType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? (otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) ) )? ( (lv_linksSrc_9_0= ruleElementLink ) )* otherlv_10= '}' )
            // InternalTurn.g:1283:3: ( (lv_type_0_0= ruleIntentionalElementType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )? (otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) ) )? ( (lv_linksSrc_9_0= ruleElementLink ) )* otherlv_10= '}'
            {
            // InternalTurn.g:1283:3: ( (lv_type_0_0= ruleIntentionalElementType ) )
            // InternalTurn.g:1284:4: (lv_type_0_0= ruleIntentionalElementType )
            {
            // InternalTurn.g:1284:4: (lv_type_0_0= ruleIntentionalElementType )
            // InternalTurn.g:1285:5: lv_type_0_0= ruleIntentionalElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntentionalElementAccess().getTypeIntentionalElementTypeEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_0_0=ruleIntentionalElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.project.turn.Turn.IntentionalElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:1302:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:1303:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:1303:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:1304:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntentionalElementAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:1321:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:1322:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:1322:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:1323:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntentionalElementAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,15,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getIntentionalElementAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalTurn.g:1344:3: (otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==35) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalTurn.g:1345:4: otherlv_4= 'importance' ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIntentionalElementAccess().getImportanceKeyword_4_0());
                      			
                    }
                    // InternalTurn.g:1349:4: ( ( (lv_importance_5_0= ruleImportanceType ) ) | ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) ) )
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==157||(LA25_0>=170 && LA25_0<=172)) ) {
                        alt25=1;
                    }
                    else if ( (LA25_0==RULE_INT||(LA25_0>=56 && LA25_0<=57)) ) {
                        alt25=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalTurn.g:1350:5: ( (lv_importance_5_0= ruleImportanceType ) )
                            {
                            // InternalTurn.g:1350:5: ( (lv_importance_5_0= ruleImportanceType ) )
                            // InternalTurn.g:1351:6: (lv_importance_5_0= ruleImportanceType )
                            {
                            // InternalTurn.g:1351:6: (lv_importance_5_0= ruleImportanceType )
                            // InternalTurn.g:1352:7: lv_importance_5_0= ruleImportanceType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIntentionalElementAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_31);
                            lv_importance_5_0=ruleImportanceType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
                              							}
                              							set(
                              								current,
                              								"importance",
                              								lv_importance_5_0,
                              								"org.xtext.project.turn.Turn.ImportanceType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:1370:5: ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) )
                            {
                            // InternalTurn.g:1370:5: ( (lv_importanceQuantitative_6_0= ruleQuantitativeValue ) )
                            // InternalTurn.g:1371:6: (lv_importanceQuantitative_6_0= ruleQuantitativeValue )
                            {
                            // InternalTurn.g:1371:6: (lv_importanceQuantitative_6_0= ruleQuantitativeValue )
                            // InternalTurn.g:1372:7: lv_importanceQuantitative_6_0= ruleQuantitativeValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIntentionalElementAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_31);
                            lv_importanceQuantitative_6_0=ruleQuantitativeValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
                              							}
                              							set(
                              								current,
                              								"importanceQuantitative",
                              								lv_importanceQuantitative_6_0,
                              								"org.xtext.project.turn.Turn.QuantitativeValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalTurn.g:1391:3: (otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==36) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalTurn.g:1392:4: otherlv_7= 'unit' ( (lv_unit_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIntentionalElementAccess().getUnitKeyword_5_0());
                      			
                    }
                    // InternalTurn.g:1396:4: ( (lv_unit_8_0= RULE_STRING ) )
                    // InternalTurn.g:1397:5: (lv_unit_8_0= RULE_STRING )
                    {
                    // InternalTurn.g:1397:5: (lv_unit_8_0= RULE_STRING )
                    // InternalTurn.g:1398:6: lv_unit_8_0= RULE_STRING
                    {
                    lv_unit_8_0=(Token)match(input,RULE_STRING,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_8_0, grammarAccess.getIntentionalElementAccess().getUnitSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIntentionalElementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:1415:3: ( (lv_linksSrc_9_0= ruleElementLink ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==RULE_ID||LA28_0==37||LA28_0==41||LA28_0==81||LA28_0==83||LA28_0==173) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalTurn.g:1416:4: (lv_linksSrc_9_0= ruleElementLink )
            	    {
            	    // InternalTurn.g:1416:4: (lv_linksSrc_9_0= ruleElementLink )
            	    // InternalTurn.g:1417:5: lv_linksSrc_9_0= ruleElementLink
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getIntentionalElementAccess().getLinksSrcElementLinkParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_linksSrc_9_0=ruleElementLink();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getIntentionalElementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"linksSrc",
            	      						lv_linksSrc_9_0,
            	      						"org.xtext.project.turn.Turn.ElementLink");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            otherlv_10=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getIntentionalElementAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntentionalElement"


    // $ANTLR start "entryRuleElementLink"
    // InternalTurn.g:1442:1: entryRuleElementLink returns [EObject current=null] : iv_ruleElementLink= ruleElementLink EOF ;
    public final EObject entryRuleElementLink() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementLink = null;


        try {
            // InternalTurn.g:1442:52: (iv_ruleElementLink= ruleElementLink EOF )
            // InternalTurn.g:1443:2: iv_ruleElementLink= ruleElementLink EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementLinkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementLink=ruleElementLink();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementLink; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementLink"


    // $ANTLR start "ruleElementLink"
    // InternalTurn.g:1449:1: ruleElementLink returns [EObject current=null] : (this_Contribution_0= ruleContribution | this_Decomposition_1= ruleDecomposition | this_Dependency_2= ruleDependency ) ;
    public final EObject ruleElementLink() throws RecognitionException {
        EObject current = null;

        EObject this_Contribution_0 = null;

        EObject this_Decomposition_1 = null;

        EObject this_Dependency_2 = null;



        	enterRule();

        try {
            // InternalTurn.g:1455:2: ( (this_Contribution_0= ruleContribution | this_Decomposition_1= ruleDecomposition | this_Dependency_2= ruleDependency ) )
            // InternalTurn.g:1456:2: (this_Contribution_0= ruleContribution | this_Decomposition_1= ruleDecomposition | this_Dependency_2= ruleDependency )
            {
            // InternalTurn.g:1456:2: (this_Contribution_0= ruleContribution | this_Decomposition_1= ruleDecomposition | this_Dependency_2= ruleDependency )
            int alt29=3;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalTurn.g:1457:3: this_Contribution_0= ruleContribution
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementLinkAccess().getContributionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Contribution_0=ruleContribution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Contribution_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:1466:3: this_Decomposition_1= ruleDecomposition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementLinkAccess().getDecompositionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Decomposition_1=ruleDecomposition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Decomposition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:1475:3: this_Dependency_2= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementLinkAccess().getDependencyParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Dependency_2=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Dependency_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementLink"


    // $ANTLR start "entryRuleContribution"
    // InternalTurn.g:1487:1: entryRuleContribution returns [EObject current=null] : iv_ruleContribution= ruleContribution EOF ;
    public final EObject entryRuleContribution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContribution = null;


        try {
            // InternalTurn.g:1487:53: (iv_ruleContribution= ruleContribution EOF )
            // InternalTurn.g:1488:2: iv_ruleContribution= ruleContribution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContributionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContribution=ruleContribution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContribution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContribution"


    // $ANTLR start "ruleContribution"
    // InternalTurn.g:1494:1: ruleContribution returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'contributesTo' ( ( ruleQualifiedName ) ) ( (lv_correlation_4_0= 'correlated' ) )? otherlv_5= 'with' ( ( (lv_contribution_6_0= ruleContributionType ) ) | ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) ) ) ) ;
    public final EObject ruleContribution() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_correlation_4_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_longName_1_0 = null;

        Enumerator lv_contribution_6_0 = null;

        AntlrDatatypeRuleToken lv_quantitativeContribution_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1500:2: ( ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'contributesTo' ( ( ruleQualifiedName ) ) ( (lv_correlation_4_0= 'correlated' ) )? otherlv_5= 'with' ( ( (lv_contribution_6_0= ruleContributionType ) ) | ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) ) ) ) )
            // InternalTurn.g:1501:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'contributesTo' ( ( ruleQualifiedName ) ) ( (lv_correlation_4_0= 'correlated' ) )? otherlv_5= 'with' ( ( (lv_contribution_6_0= ruleContributionType ) ) | ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) ) ) )
            {
            // InternalTurn.g:1501:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'contributesTo' ( ( ruleQualifiedName ) ) ( (lv_correlation_4_0= 'correlated' ) )? otherlv_5= 'with' ( ( (lv_contribution_6_0= ruleContributionType ) ) | ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) ) ) )
            // InternalTurn.g:1502:3: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'contributesTo' ( ( ruleQualifiedName ) ) ( (lv_correlation_4_0= 'correlated' ) )? otherlv_5= 'with' ( ( (lv_contribution_6_0= ruleContributionType ) ) | ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) ) )
            {
            // InternalTurn.g:1502:3: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalTurn.g:1503:4: ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) )
                    {
                    // InternalTurn.g:1503:4: ( (lv_name_0_0= ruleQualifiedName ) )
                    // InternalTurn.g:1504:5: (lv_name_0_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:1504:5: (lv_name_0_0= ruleQualifiedName )
                    // InternalTurn.g:1505:6: lv_name_0_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContributionAccess().getNameQualifiedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_name_0_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContributionRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:1522:4: ( (lv_longName_1_0= ruleLongName ) )
                    // InternalTurn.g:1523:5: (lv_longName_1_0= ruleLongName )
                    {
                    // InternalTurn.g:1523:5: (lv_longName_1_0= ruleLongName )
                    // InternalTurn.g:1524:6: lv_longName_1_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContributionAccess().getLongNameLongNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_longName_1_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContributionRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_1_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getContributionAccess().getContributesToKeyword_1());
              		
            }
            // InternalTurn.g:1546:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:1547:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:1547:4: ( ruleQualifiedName )
            // InternalTurn.g:1548:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getContributionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getContributionAccess().getDestIntentionalElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:1562:3: ( (lv_correlation_4_0= 'correlated' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==38) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalTurn.g:1563:4: (lv_correlation_4_0= 'correlated' )
                    {
                    // InternalTurn.g:1563:4: (lv_correlation_4_0= 'correlated' )
                    // InternalTurn.g:1564:5: lv_correlation_4_0= 'correlated'
                    {
                    lv_correlation_4_0=(Token)match(input,38,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_correlation_4_0, grammarAccess.getContributionAccess().getCorrelationCorrelatedKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getContributionRule());
                      					}
                      					setWithLastConsumed(current, "correlation", true, "correlated");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,39,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getContributionAccess().getWithKeyword_4());
              		
            }
            // InternalTurn.g:1580:3: ( ( (lv_contribution_6_0= ruleContributionType ) ) | ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==156||(LA32_0>=164 && LA32_0<=169)) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_INT||(LA32_0>=56 && LA32_0<=57)) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalTurn.g:1581:4: ( (lv_contribution_6_0= ruleContributionType ) )
                    {
                    // InternalTurn.g:1581:4: ( (lv_contribution_6_0= ruleContributionType ) )
                    // InternalTurn.g:1582:5: (lv_contribution_6_0= ruleContributionType )
                    {
                    // InternalTurn.g:1582:5: (lv_contribution_6_0= ruleContributionType )
                    // InternalTurn.g:1583:6: lv_contribution_6_0= ruleContributionType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContributionAccess().getContributionContributionTypeEnumRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_contribution_6_0=ruleContributionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContributionRule());
                      						}
                      						set(
                      							current,
                      							"contribution",
                      							lv_contribution_6_0,
                      							"org.xtext.project.turn.Turn.ContributionType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:1601:4: ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) )
                    {
                    // InternalTurn.g:1601:4: ( (lv_quantitativeContribution_7_0= ruleQuantitativeValue ) )
                    // InternalTurn.g:1602:5: (lv_quantitativeContribution_7_0= ruleQuantitativeValue )
                    {
                    // InternalTurn.g:1602:5: (lv_quantitativeContribution_7_0= ruleQuantitativeValue )
                    // InternalTurn.g:1603:6: lv_quantitativeContribution_7_0= ruleQuantitativeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContributionAccess().getQuantitativeContributionQuantitativeValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantitativeContribution_7_0=ruleQuantitativeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContributionRule());
                      						}
                      						set(
                      							current,
                      							"quantitativeContribution",
                      							lv_quantitativeContribution_7_0,
                      							"org.xtext.project.turn.Turn.QuantitativeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContribution"


    // $ANTLR start "entryRuleDecomposition"
    // InternalTurn.g:1625:1: entryRuleDecomposition returns [EObject current=null] : iv_ruleDecomposition= ruleDecomposition EOF ;
    public final EObject entryRuleDecomposition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecomposition = null;


        try {
            // InternalTurn.g:1625:54: (iv_ruleDecomposition= ruleDecomposition EOF )
            // InternalTurn.g:1626:2: iv_ruleDecomposition= ruleDecomposition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecompositionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecomposition=ruleDecomposition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecomposition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecomposition"


    // $ANTLR start "ruleDecomposition"
    // InternalTurn.g:1632:1: ruleDecomposition returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? ( (lv_decompositionType_2_0= ruleDecompositionType ) ) otherlv_3= 'decomposes' ( ( ruleQualifiedName ) ) ) ;
    public final EObject ruleDecomposition() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_longName_1_0 = null;

        Enumerator lv_decompositionType_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1638:2: ( ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? ( (lv_decompositionType_2_0= ruleDecompositionType ) ) otherlv_3= 'decomposes' ( ( ruleQualifiedName ) ) ) )
            // InternalTurn.g:1639:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? ( (lv_decompositionType_2_0= ruleDecompositionType ) ) otherlv_3= 'decomposes' ( ( ruleQualifiedName ) ) )
            {
            // InternalTurn.g:1639:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? ( (lv_decompositionType_2_0= ruleDecompositionType ) ) otherlv_3= 'decomposes' ( ( ruleQualifiedName ) ) )
            // InternalTurn.g:1640:3: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? ( (lv_decompositionType_2_0= ruleDecompositionType ) ) otherlv_3= 'decomposes' ( ( ruleQualifiedName ) )
            {
            // InternalTurn.g:1640:3: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_ID) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalTurn.g:1641:4: ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) )
                    {
                    // InternalTurn.g:1641:4: ( (lv_name_0_0= ruleQualifiedName ) )
                    // InternalTurn.g:1642:5: (lv_name_0_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:1642:5: (lv_name_0_0= ruleQualifiedName )
                    // InternalTurn.g:1643:6: lv_name_0_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDecompositionAccess().getNameQualifiedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_name_0_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDecompositionRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:1660:4: ( (lv_longName_1_0= ruleLongName ) )
                    // InternalTurn.g:1661:5: (lv_longName_1_0= ruleLongName )
                    {
                    // InternalTurn.g:1661:5: (lv_longName_1_0= ruleLongName )
                    // InternalTurn.g:1662:6: lv_longName_1_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDecompositionAccess().getLongNameLongNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_longName_1_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDecompositionRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_1_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:1680:3: ( (lv_decompositionType_2_0= ruleDecompositionType ) )
            // InternalTurn.g:1681:4: (lv_decompositionType_2_0= ruleDecompositionType )
            {
            // InternalTurn.g:1681:4: (lv_decompositionType_2_0= ruleDecompositionType )
            // InternalTurn.g:1682:5: lv_decompositionType_2_0= ruleDecompositionType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDecompositionAccess().getDecompositionTypeDecompositionTypeEnumRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_decompositionType_2_0=ruleDecompositionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDecompositionRule());
              					}
              					set(
              						current,
              						"decompositionType",
              						lv_decompositionType_2_0,
              						"org.xtext.project.turn.Turn.DecompositionType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,40,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDecompositionAccess().getDecomposesKeyword_2());
              		
            }
            // InternalTurn.g:1703:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:1704:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:1704:4: ( ruleQualifiedName )
            // InternalTurn.g:1705:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDecompositionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDecompositionAccess().getDestIntentionalElementCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecomposition"


    // $ANTLR start "entryRuleDependency"
    // InternalTurn.g:1723:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalTurn.g:1723:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalTurn.g:1724:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalTurn.g:1730:1: ruleDependency returns [EObject current=null] : ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'dependsOn' ( ( ruleQualifiedName ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_longName_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1736:2: ( ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'dependsOn' ( ( ruleQualifiedName ) ) ) )
            // InternalTurn.g:1737:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'dependsOn' ( ( ruleQualifiedName ) ) )
            {
            // InternalTurn.g:1737:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'dependsOn' ( ( ruleQualifiedName ) ) )
            // InternalTurn.g:1738:3: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )? otherlv_2= 'dependsOn' ( ( ruleQualifiedName ) )
            {
            // InternalTurn.g:1738:3: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_ID) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalTurn.g:1739:4: ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) )
                    {
                    // InternalTurn.g:1739:4: ( (lv_name_0_0= ruleQualifiedName ) )
                    // InternalTurn.g:1740:5: (lv_name_0_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:1740:5: (lv_name_0_0= ruleQualifiedName )
                    // InternalTurn.g:1741:6: lv_name_0_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyAccess().getNameQualifiedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_name_0_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:1758:4: ( (lv_longName_1_0= ruleLongName ) )
                    // InternalTurn.g:1759:5: (lv_longName_1_0= ruleLongName )
                    {
                    // InternalTurn.g:1759:5: (lv_longName_1_0= ruleLongName )
                    // InternalTurn.g:1760:6: lv_longName_1_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyAccess().getLongNameLongNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_longName_1_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_1_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getDependsOnKeyword_1());
              		
            }
            // InternalTurn.g:1782:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:1783:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:1783:4: ( ruleQualifiedName )
            // InternalTurn.g:1784:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDependencyRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDependencyAccess().getDestIntentionalElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleArtificialRule"
    // InternalTurn.g:1802:1: entryRuleArtificialRule returns [EObject current=null] : iv_ruleArtificialRule= ruleArtificialRule EOF ;
    public final EObject entryRuleArtificialRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArtificialRule = null;


        try {
            // InternalTurn.g:1802:55: (iv_ruleArtificialRule= ruleArtificialRule EOF )
            // InternalTurn.g:1803:2: iv_ruleArtificialRule= ruleArtificialRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArtificialRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArtificialRule=ruleArtificialRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArtificialRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArtificialRule"


    // $ANTLR start "ruleArtificialRule"
    // InternalTurn.g:1809:1: ruleArtificialRule returns [EObject current=null] : ( (lv_longName_0_0= RULE_STRING ) )? ;
    public final EObject ruleArtificialRule() throws RecognitionException {
        EObject current = null;

        Token lv_longName_0_0=null;


        	enterRule();

        try {
            // InternalTurn.g:1815:2: ( ( (lv_longName_0_0= RULE_STRING ) )? )
            // InternalTurn.g:1816:2: ( (lv_longName_0_0= RULE_STRING ) )?
            {
            // InternalTurn.g:1816:2: ( (lv_longName_0_0= RULE_STRING ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_STRING) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalTurn.g:1817:3: (lv_longName_0_0= RULE_STRING )
                    {
                    // InternalTurn.g:1817:3: (lv_longName_0_0= RULE_STRING )
                    // InternalTurn.g:1818:4: lv_longName_0_0= RULE_STRING
                    {
                    lv_longName_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(lv_longName_0_0, grammarAccess.getArtificialRuleAccess().getLongNameSTRINGTerminalRuleCall_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				if (current==null) {
                      					current = createModelElement(grammarAccess.getArtificialRuleRule());
                      				}
                      				setWithLastConsumed(
                      					current,
                      					"longName",
                      					lv_longName_0_0,
                      					"org.eclipse.xtext.xbase.Xtype.STRING");
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArtificialRule"


    // $ANTLR start "entryRuleStrategiesGroup"
    // InternalTurn.g:1837:1: entryRuleStrategiesGroup returns [EObject current=null] : iv_ruleStrategiesGroup= ruleStrategiesGroup EOF ;
    public final EObject entryRuleStrategiesGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStrategiesGroup = null;


        try {
            // InternalTurn.g:1837:56: (iv_ruleStrategiesGroup= ruleStrategiesGroup EOF )
            // InternalTurn.g:1838:2: iv_ruleStrategiesGroup= ruleStrategiesGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStrategiesGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStrategiesGroup=ruleStrategiesGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStrategiesGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStrategiesGroup"


    // $ANTLR start "ruleStrategiesGroup"
    // InternalTurn.g:1844:1: ruleStrategiesGroup returns [EObject current=null] : (otherlv_0= 'strategiesGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* ) ;
    public final EObject ruleStrategiesGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1850:2: ( (otherlv_0= 'strategiesGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* ) )
            // InternalTurn.g:1851:2: (otherlv_0= 'strategiesGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )
            {
            // InternalTurn.g:1851:2: (otherlv_0= 'strategiesGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )
            // InternalTurn.g:1852:3: otherlv_0= 'strategiesGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
            {
            otherlv_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStrategiesGroupAccess().getStrategiesGroupKeyword_0());
              		
            }
            // InternalTurn.g:1856:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:1857:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:1857:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:1858:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStrategiesGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStrategiesGroupRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:1875:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:1876:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:1876:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:1877:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStrategiesGroupAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStrategiesGroupRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getStrategiesGroupAccess().getColonKeyword_3());
              		
            }
            // InternalTurn.g:1898:3: ( (otherlv_4= RULE_ID ) )
            // InternalTurn.g:1899:4: (otherlv_4= RULE_ID )
            {
            // InternalTurn.g:1899:4: (otherlv_4= RULE_ID )
            // InternalTurn.g:1900:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStrategiesGroupRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getStrategiesGroupAccess().getEvalStrategyEvaluationStrategyCrossReference_4_0());
              				
            }

            }


            }

            // InternalTurn.g:1911:3: (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==25) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalTurn.g:1912:4: otherlv_5= ',' ( (otherlv_6= RULE_ID ) )
            	    {
            	    otherlv_5=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getStrategiesGroupAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalTurn.g:1916:4: ( (otherlv_6= RULE_ID ) )
            	    // InternalTurn.g:1917:5: (otherlv_6= RULE_ID )
            	    {
            	    // InternalTurn.g:1917:5: (otherlv_6= RULE_ID )
            	    // InternalTurn.g:1918:6: otherlv_6= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getStrategiesGroupRule());
            	      						}
            	      					
            	    }
            	    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_6, grammarAccess.getStrategiesGroupAccess().getEvalStrategiesEvaluationStrategyCrossReference_5_1_0());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStrategiesGroup"


    // $ANTLR start "entryRuleEvaluationStrategy"
    // InternalTurn.g:1934:1: entryRuleEvaluationStrategy returns [EObject current=null] : iv_ruleEvaluationStrategy= ruleEvaluationStrategy EOF ;
    public final EObject entryRuleEvaluationStrategy() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEvaluationStrategy = null;


        try {
            // InternalTurn.g:1934:59: (iv_ruleEvaluationStrategy= ruleEvaluationStrategy EOF )
            // InternalTurn.g:1935:2: iv_ruleEvaluationStrategy= ruleEvaluationStrategy EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEvaluationStrategyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvaluationStrategy=ruleEvaluationStrategy();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvaluationStrategy; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEvaluationStrategy"


    // $ANTLR start "ruleEvaluationStrategy"
    // InternalTurn.g:1941:1: ruleEvaluationStrategy returns [EObject current=null] : (otherlv_0= 'strategy' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_info_4_0= ruleConcreteStrategy ) )? ( (lv_evaluations_5_0= ruleEvaluation ) )* (otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )* )? otherlv_10= '}' ) ;
    public final EObject ruleEvaluationStrategy() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_info_4_0 = null;

        EObject lv_evaluations_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:1947:2: ( (otherlv_0= 'strategy' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_info_4_0= ruleConcreteStrategy ) )? ( (lv_evaluations_5_0= ruleEvaluation ) )* (otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )* )? otherlv_10= '}' ) )
            // InternalTurn.g:1948:2: (otherlv_0= 'strategy' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_info_4_0= ruleConcreteStrategy ) )? ( (lv_evaluations_5_0= ruleEvaluation ) )* (otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )* )? otherlv_10= '}' )
            {
            // InternalTurn.g:1948:2: (otherlv_0= 'strategy' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_info_4_0= ruleConcreteStrategy ) )? ( (lv_evaluations_5_0= ruleEvaluation ) )* (otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )* )? otherlv_10= '}' )
            // InternalTurn.g:1949:3: otherlv_0= 'strategy' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_info_4_0= ruleConcreteStrategy ) )? ( (lv_evaluations_5_0= ruleEvaluation ) )* (otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )* )? otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEvaluationStrategyAccess().getStrategyKeyword_0());
              		
            }
            // InternalTurn.g:1953:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:1954:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:1954:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:1955:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:1972:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:1973:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:1973:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:1974:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,15,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEvaluationStrategyAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalTurn.g:1995:3: ( (lv_info_4_0= ruleConcreteStrategy ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==17) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalTurn.g:1996:4: (lv_info_4_0= ruleConcreteStrategy )
                    {
                    // InternalTurn.g:1996:4: (lv_info_4_0= ruleConcreteStrategy )
                    // InternalTurn.g:1997:5: lv_info_4_0= ruleConcreteStrategy
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getInfoConcreteStrategyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_44);
                    lv_info_4_0=ruleConcreteStrategy();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
                      					}
                      					set(
                      						current,
                      						"info",
                      						lv_info_4_0,
                      						"org.xtext.project.turn.Turn.ConcreteStrategy");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:2014:3: ( (lv_evaluations_5_0= ruleEvaluation ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_ID) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalTurn.g:2015:4: (lv_evaluations_5_0= ruleEvaluation )
            	    {
            	    // InternalTurn.g:2015:4: (lv_evaluations_5_0= ruleEvaluation )
            	    // InternalTurn.g:2016:5: lv_evaluations_5_0= ruleEvaluation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEvaluationStrategyAccess().getEvaluationsEvaluationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_evaluations_5_0=ruleEvaluation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEvaluationStrategyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"evaluations",
            	      						lv_evaluations_5_0,
            	      						"org.xtext.project.turn.Turn.Evaluation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            // InternalTurn.g:2033:3: (otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )* )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==44) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalTurn.g:2034:4: otherlv_6= 'includes' ( (otherlv_7= RULE_ID ) ) (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )*
                    {
                    otherlv_6=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEvaluationStrategyAccess().getIncludesKeyword_6_0());
                      			
                    }
                    // InternalTurn.g:2038:4: ( (otherlv_7= RULE_ID ) )
                    // InternalTurn.g:2039:5: (otherlv_7= RULE_ID )
                    {
                    // InternalTurn.g:2039:5: (otherlv_7= RULE_ID )
                    // InternalTurn.g:2040:6: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEvaluationStrategyRule());
                      						}
                      					
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyEvaluationStrategyCrossReference_6_1_0());
                      					
                    }

                    }


                    }

                    // InternalTurn.g:2051:4: (otherlv_8= ',' ( (otherlv_9= RULE_ID ) ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==25) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // InternalTurn.g:2052:5: otherlv_8= ',' ( (otherlv_9= RULE_ID ) )
                    	    {
                    	    otherlv_8=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getEvaluationStrategyAccess().getCommaKeyword_6_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:2056:5: ( (otherlv_9= RULE_ID ) )
                    	    // InternalTurn.g:2057:6: (otherlv_9= RULE_ID )
                    	    {
                    	    // InternalTurn.g:2057:6: (otherlv_9= RULE_ID )
                    	    // InternalTurn.g:2058:7: otherlv_9= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getEvaluationStrategyRule());
                    	      							}
                    	      						
                    	    }
                    	    otherlv_9=(Token)match(input,RULE_ID,FOLLOW_45); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_9, grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesEvaluationStrategyCrossReference_6_2_1_0());
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEvaluationStrategyAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEvaluationStrategy"


    // $ANTLR start "entryRuleConcreteStrategy"
    // InternalTurn.g:2079:1: entryRuleConcreteStrategy returns [EObject current=null] : iv_ruleConcreteStrategy= ruleConcreteStrategy EOF ;
    public final EObject entryRuleConcreteStrategy() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteStrategy = null;


        try {
            // InternalTurn.g:2079:57: (iv_ruleConcreteStrategy= ruleConcreteStrategy EOF )
            // InternalTurn.g:2080:2: iv_ruleConcreteStrategy= ruleConcreteStrategy EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteStrategyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteStrategy=ruleConcreteStrategy();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteStrategy; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteStrategy"


    // $ANTLR start "ruleConcreteStrategy"
    // InternalTurn.g:2086:1: ruleConcreteStrategy returns [EObject current=null] : (otherlv_0= 'author' ( (lv_author_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleConcreteStrategy() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_author_1_0=null;


        	enterRule();

        try {
            // InternalTurn.g:2092:2: ( (otherlv_0= 'author' ( (lv_author_1_0= RULE_STRING ) ) ) )
            // InternalTurn.g:2093:2: (otherlv_0= 'author' ( (lv_author_1_0= RULE_STRING ) ) )
            {
            // InternalTurn.g:2093:2: (otherlv_0= 'author' ( (lv_author_1_0= RULE_STRING ) ) )
            // InternalTurn.g:2094:3: otherlv_0= 'author' ( (lv_author_1_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConcreteStrategyAccess().getAuthorKeyword_0());
              		
            }
            // InternalTurn.g:2098:3: ( (lv_author_1_0= RULE_STRING ) )
            // InternalTurn.g:2099:4: (lv_author_1_0= RULE_STRING )
            {
            // InternalTurn.g:2099:4: (lv_author_1_0= RULE_STRING )
            // InternalTurn.g:2100:5: lv_author_1_0= RULE_STRING
            {
            lv_author_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_author_1_0, grammarAccess.getConcreteStrategyAccess().getAuthorSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteStrategyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"author",
              						lv_author_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteStrategy"


    // $ANTLR start "entryRuleEvaluation"
    // InternalTurn.g:2120:1: entryRuleEvaluation returns [EObject current=null] : iv_ruleEvaluation= ruleEvaluation EOF ;
    public final EObject entryRuleEvaluation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEvaluation = null;


        try {
            // InternalTurn.g:2120:51: (iv_ruleEvaluation= ruleEvaluation EOF )
            // InternalTurn.g:2121:2: iv_ruleEvaluation= ruleEvaluation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEvaluationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvaluation=ruleEvaluation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvaluation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEvaluation"


    // $ANTLR start "ruleEvaluation"
    // InternalTurn.g:2127:1: ruleEvaluation returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( (lv_exceeds_1_0= 'exceeding' ) )? ( (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) ) | ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) ) ) ) ;
    public final EObject ruleEvaluation() throws RecognitionException {
        EObject current = null;

        Token lv_exceeds_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Enumerator lv_qualitativeEvaluation_3_0 = null;

        AntlrDatatypeRuleToken lv_evaluation_4_0 = null;

        EObject lv_indicatorEval_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2133:2: ( ( ( ( ruleQualifiedName ) ) ( (lv_exceeds_1_0= 'exceeding' ) )? ( (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) ) | ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) ) ) ) )
            // InternalTurn.g:2134:2: ( ( ( ruleQualifiedName ) ) ( (lv_exceeds_1_0= 'exceeding' ) )? ( (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) ) | ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) ) ) )
            {
            // InternalTurn.g:2134:2: ( ( ( ruleQualifiedName ) ) ( (lv_exceeds_1_0= 'exceeding' ) )? ( (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) ) | ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) ) ) )
            // InternalTurn.g:2135:3: ( ( ruleQualifiedName ) ) ( (lv_exceeds_1_0= 'exceeding' ) )? ( (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) ) | ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) ) )
            {
            // InternalTurn.g:2135:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:2136:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:2136:4: ( ruleQualifiedName )
            // InternalTurn.g:2137:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEvaluationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEvaluationAccess().getIntElementIntentionalElementCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_46);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:2151:3: ( (lv_exceeds_1_0= 'exceeding' ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==45) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalTurn.g:2152:4: (lv_exceeds_1_0= 'exceeding' )
                    {
                    // InternalTurn.g:2152:4: (lv_exceeds_1_0= 'exceeding' )
                    // InternalTurn.g:2153:5: lv_exceeds_1_0= 'exceeding'
                    {
                    lv_exceeds_1_0=(Token)match(input,45,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_exceeds_1_0, grammarAccess.getEvaluationAccess().getExceedsExceedingKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEvaluationRule());
                      					}
                      					setWithLastConsumed(current, "exceeds", true, "exceeding");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:2165:3: ( (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) ) | ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==46) ) {
                alt43=1;
            }
            else if ( (LA43_0==48) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalTurn.g:2166:4: (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) )
                    {
                    // InternalTurn.g:2166:4: (otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) ) )
                    // InternalTurn.g:2167:5: otherlv_2= 'evaluation' ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) )
                    {
                    otherlv_2=(Token)match(input,46,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getEvaluationAccess().getEvaluationKeyword_2_0_0());
                      				
                    }
                    // InternalTurn.g:2171:5: ( ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_4_0= ruleQuantitativeValue ) ) )
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( ((LA42_0>=151 && LA42_0<=157)) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==RULE_INT||(LA42_0>=56 && LA42_0<=57)) ) {
                        alt42=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 42, 0, input);

                        throw nvae;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalTurn.g:2172:6: ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) )
                            {
                            // InternalTurn.g:2172:6: ( (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel ) )
                            // InternalTurn.g:2173:7: (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel )
                            {
                            // InternalTurn.g:2173:7: (lv_qualitativeEvaluation_3_0= ruleQualitativeLabel )
                            // InternalTurn.g:2174:8: lv_qualitativeEvaluation_3_0= ruleQualitativeLabel
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getEvaluationAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_qualitativeEvaluation_3_0=ruleQualitativeLabel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getEvaluationRule());
                              								}
                              								set(
                              									current,
                              									"qualitativeEvaluation",
                              									lv_qualitativeEvaluation_3_0,
                              									"org.xtext.project.turn.Turn.QualitativeLabel");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:2192:6: ( (lv_evaluation_4_0= ruleQuantitativeValue ) )
                            {
                            // InternalTurn.g:2192:6: ( (lv_evaluation_4_0= ruleQuantitativeValue ) )
                            // InternalTurn.g:2193:7: (lv_evaluation_4_0= ruleQuantitativeValue )
                            {
                            // InternalTurn.g:2193:7: (lv_evaluation_4_0= ruleQuantitativeValue )
                            // InternalTurn.g:2194:8: lv_evaluation_4_0= ruleQuantitativeValue
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getEvaluationAccess().getEvaluationQuantitativeValueParserRuleCall_2_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_evaluation_4_0=ruleQuantitativeValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getEvaluationRule());
                              								}
                              								set(
                              									current,
                              									"evaluation",
                              									lv_evaluation_4_0,
                              									"org.xtext.project.turn.Turn.QuantitativeValue");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:2214:4: ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) )
                    {
                    // InternalTurn.g:2214:4: ( ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) ) )
                    // InternalTurn.g:2215:5: ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) ) otherlv_6= 'convertedWith' ( (otherlv_7= RULE_ID ) )
                    {
                    // InternalTurn.g:2215:5: ( (lv_indicatorEval_5_0= ruleIndicatorEvaluation ) )
                    // InternalTurn.g:2216:6: (lv_indicatorEval_5_0= ruleIndicatorEvaluation )
                    {
                    // InternalTurn.g:2216:6: (lv_indicatorEval_5_0= ruleIndicatorEvaluation )
                    // InternalTurn.g:2217:7: lv_indicatorEval_5_0= ruleIndicatorEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEvaluationAccess().getIndicatorEvalIndicatorEvaluationParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_48);
                    lv_indicatorEval_5_0=ruleIndicatorEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEvaluationRule());
                      							}
                      							set(
                      								current,
                      								"indicatorEval",
                      								lv_indicatorEval_5_0,
                      								"org.xtext.project.turn.Turn.IndicatorEvaluation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,47,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getEvaluationAccess().getConvertedWithKeyword_2_1_1());
                      				
                    }
                    // InternalTurn.g:2238:5: ( (otherlv_7= RULE_ID ) )
                    // InternalTurn.g:2239:6: (otherlv_7= RULE_ID )
                    {
                    // InternalTurn.g:2239:6: (otherlv_7= RULE_ID )
                    // InternalTurn.g:2240:7: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getEvaluationRule());
                      							}
                      						
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_7, grammarAccess.getEvaluationAccess().getConversionIndicatorConversionCrossReference_2_1_2_0());
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEvaluation"


    // $ANTLR start "entryRuleIndicatorEvaluation"
    // InternalTurn.g:2257:1: entryRuleIndicatorEvaluation returns [EObject current=null] : iv_ruleIndicatorEvaluation= ruleIndicatorEvaluation EOF ;
    public final EObject entryRuleIndicatorEvaluation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndicatorEvaluation = null;


        try {
            // InternalTurn.g:2257:60: (iv_ruleIndicatorEvaluation= ruleIndicatorEvaluation EOF )
            // InternalTurn.g:2258:2: iv_ruleIndicatorEvaluation= ruleIndicatorEvaluation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndicatorEvaluationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndicatorEvaluation=ruleIndicatorEvaluation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndicatorEvaluation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndicatorEvaluation"


    // $ANTLR start "ruleIndicatorEvaluation"
    // InternalTurn.g:2264:1: ruleIndicatorEvaluation returns [EObject current=null] : (otherlv_0= 'real' ( ( (lv_realWorldLabel_1_0= RULE_STRING ) ) | ( (lv_realWorldValue_2_0= RULE_INT ) ) ) ) ;
    public final EObject ruleIndicatorEvaluation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_realWorldLabel_1_0=null;
        Token lv_realWorldValue_2_0=null;


        	enterRule();

        try {
            // InternalTurn.g:2270:2: ( (otherlv_0= 'real' ( ( (lv_realWorldLabel_1_0= RULE_STRING ) ) | ( (lv_realWorldValue_2_0= RULE_INT ) ) ) ) )
            // InternalTurn.g:2271:2: (otherlv_0= 'real' ( ( (lv_realWorldLabel_1_0= RULE_STRING ) ) | ( (lv_realWorldValue_2_0= RULE_INT ) ) ) )
            {
            // InternalTurn.g:2271:2: (otherlv_0= 'real' ( ( (lv_realWorldLabel_1_0= RULE_STRING ) ) | ( (lv_realWorldValue_2_0= RULE_INT ) ) ) )
            // InternalTurn.g:2272:3: otherlv_0= 'real' ( ( (lv_realWorldLabel_1_0= RULE_STRING ) ) | ( (lv_realWorldValue_2_0= RULE_INT ) ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndicatorEvaluationAccess().getRealKeyword_0());
              		
            }
            // InternalTurn.g:2276:3: ( ( (lv_realWorldLabel_1_0= RULE_STRING ) ) | ( (lv_realWorldValue_2_0= RULE_INT ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_STRING) ) {
                alt44=1;
            }
            else if ( (LA44_0==RULE_INT) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalTurn.g:2277:4: ( (lv_realWorldLabel_1_0= RULE_STRING ) )
                    {
                    // InternalTurn.g:2277:4: ( (lv_realWorldLabel_1_0= RULE_STRING ) )
                    // InternalTurn.g:2278:5: (lv_realWorldLabel_1_0= RULE_STRING )
                    {
                    // InternalTurn.g:2278:5: (lv_realWorldLabel_1_0= RULE_STRING )
                    // InternalTurn.g:2279:6: lv_realWorldLabel_1_0= RULE_STRING
                    {
                    lv_realWorldLabel_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_realWorldLabel_1_0, grammarAccess.getIndicatorEvaluationAccess().getRealWorldLabelSTRINGTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIndicatorEvaluationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"realWorldLabel",
                      							lv_realWorldLabel_1_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:2296:4: ( (lv_realWorldValue_2_0= RULE_INT ) )
                    {
                    // InternalTurn.g:2296:4: ( (lv_realWorldValue_2_0= RULE_INT ) )
                    // InternalTurn.g:2297:5: (lv_realWorldValue_2_0= RULE_INT )
                    {
                    // InternalTurn.g:2297:5: (lv_realWorldValue_2_0= RULE_INT )
                    // InternalTurn.g:2298:6: lv_realWorldValue_2_0= RULE_INT
                    {
                    lv_realWorldValue_2_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_realWorldValue_2_0, grammarAccess.getIndicatorEvaluationAccess().getRealWorldValueINTTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIndicatorEvaluationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"realWorldValue",
                      							lv_realWorldValue_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndicatorEvaluation"


    // $ANTLR start "entryRuleIndicatorConversion"
    // InternalTurn.g:2319:1: entryRuleIndicatorConversion returns [EObject current=null] : iv_ruleIndicatorConversion= ruleIndicatorConversion EOF ;
    public final EObject entryRuleIndicatorConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndicatorConversion = null;


        try {
            // InternalTurn.g:2319:60: (iv_ruleIndicatorConversion= ruleIndicatorConversion EOF )
            // InternalTurn.g:2320:2: iv_ruleIndicatorConversion= ruleIndicatorConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndicatorConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndicatorConversion=ruleIndicatorConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndicatorConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndicatorConversion"


    // $ANTLR start "ruleIndicatorConversion"
    // InternalTurn.g:2326:1: ruleIndicatorConversion returns [EObject current=null] : (this_LinearConversion_0= ruleLinearConversion | this_QualToQMappings_1= ruleQualToQMappings ) ;
    public final EObject ruleIndicatorConversion() throws RecognitionException {
        EObject current = null;

        EObject this_LinearConversion_0 = null;

        EObject this_QualToQMappings_1 = null;



        	enterRule();

        try {
            // InternalTurn.g:2332:2: ( (this_LinearConversion_0= ruleLinearConversion | this_QualToQMappings_1= ruleQualToQMappings ) )
            // InternalTurn.g:2333:2: (this_LinearConversion_0= ruleLinearConversion | this_QualToQMappings_1= ruleQualToQMappings )
            {
            // InternalTurn.g:2333:2: (this_LinearConversion_0= ruleLinearConversion | this_QualToQMappings_1= ruleQualToQMappings )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==49) ) {
                alt45=1;
            }
            else if ( (LA45_0==53) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalTurn.g:2334:3: this_LinearConversion_0= ruleLinearConversion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIndicatorConversionAccess().getLinearConversionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LinearConversion_0=ruleLinearConversion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LinearConversion_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:2343:3: this_QualToQMappings_1= ruleQualToQMappings
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIndicatorConversionAccess().getQualToQMappingsParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualToQMappings_1=ruleQualToQMappings();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QualToQMappings_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndicatorConversion"


    // $ANTLR start "entryRuleLinearConversion"
    // InternalTurn.g:2355:1: entryRuleLinearConversion returns [EObject current=null] : iv_ruleLinearConversion= ruleLinearConversion EOF ;
    public final EObject entryRuleLinearConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLinearConversion = null;


        try {
            // InternalTurn.g:2355:57: (iv_ruleLinearConversion= ruleLinearConversion EOF )
            // InternalTurn.g:2356:2: iv_ruleLinearConversion= ruleLinearConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLinearConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLinearConversion=ruleLinearConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLinearConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLinearConversion"


    // $ANTLR start "ruleLinearConversion"
    // InternalTurn.g:2362:1: ruleLinearConversion returns [EObject current=null] : (otherlv_0= 'linearConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) otherlv_6= 'target' ( (lv_targetValue_7_0= RULE_INT ) ) otherlv_8= 'threshold' ( (lv_thresholdValue_9_0= RULE_INT ) ) otherlv_10= 'worst' ( (lv_worstValue_11_0= RULE_INT ) ) otherlv_12= '}' ) ;
    public final EObject ruleLinearConversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_unit_5_0=null;
        Token otherlv_6=null;
        Token lv_targetValue_7_0=null;
        Token otherlv_8=null;
        Token lv_thresholdValue_9_0=null;
        Token otherlv_10=null;
        Token lv_worstValue_11_0=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2368:2: ( (otherlv_0= 'linearConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) otherlv_6= 'target' ( (lv_targetValue_7_0= RULE_INT ) ) otherlv_8= 'threshold' ( (lv_thresholdValue_9_0= RULE_INT ) ) otherlv_10= 'worst' ( (lv_worstValue_11_0= RULE_INT ) ) otherlv_12= '}' ) )
            // InternalTurn.g:2369:2: (otherlv_0= 'linearConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) otherlv_6= 'target' ( (lv_targetValue_7_0= RULE_INT ) ) otherlv_8= 'threshold' ( (lv_thresholdValue_9_0= RULE_INT ) ) otherlv_10= 'worst' ( (lv_worstValue_11_0= RULE_INT ) ) otherlv_12= '}' )
            {
            // InternalTurn.g:2369:2: (otherlv_0= 'linearConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) otherlv_6= 'target' ( (lv_targetValue_7_0= RULE_INT ) ) otherlv_8= 'threshold' ( (lv_thresholdValue_9_0= RULE_INT ) ) otherlv_10= 'worst' ( (lv_worstValue_11_0= RULE_INT ) ) otherlv_12= '}' )
            // InternalTurn.g:2370:3: otherlv_0= 'linearConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) otherlv_6= 'target' ( (lv_targetValue_7_0= RULE_INT ) ) otherlv_8= 'threshold' ( (lv_thresholdValue_9_0= RULE_INT ) ) otherlv_10= 'worst' ( (lv_worstValue_11_0= RULE_INT ) ) otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,49,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLinearConversionAccess().getLinearConversionKeyword_0());
              		
            }
            // InternalTurn.g:2374:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:2375:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:2375:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:2376:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLinearConversionAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLinearConversionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:2393:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:2394:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:2394:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:2395:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLinearConversionAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLinearConversionRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,15,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLinearConversionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLinearConversionAccess().getUnitKeyword_4());
              		
            }
            // InternalTurn.g:2420:3: ( (lv_unit_5_0= RULE_STRING ) )
            // InternalTurn.g:2421:4: (lv_unit_5_0= RULE_STRING )
            {
            // InternalTurn.g:2421:4: (lv_unit_5_0= RULE_STRING )
            // InternalTurn.g:2422:5: lv_unit_5_0= RULE_STRING
            {
            lv_unit_5_0=(Token)match(input,RULE_STRING,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_unit_5_0, grammarAccess.getLinearConversionAccess().getUnitSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLinearConversionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"unit",
              						lv_unit_5_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,50,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getLinearConversionAccess().getTargetKeyword_6());
              		
            }
            // InternalTurn.g:2442:3: ( (lv_targetValue_7_0= RULE_INT ) )
            // InternalTurn.g:2443:4: (lv_targetValue_7_0= RULE_INT )
            {
            // InternalTurn.g:2443:4: (lv_targetValue_7_0= RULE_INT )
            // InternalTurn.g:2444:5: lv_targetValue_7_0= RULE_INT
            {
            lv_targetValue_7_0=(Token)match(input,RULE_INT,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_targetValue_7_0, grammarAccess.getLinearConversionAccess().getTargetValueINTTerminalRuleCall_7_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLinearConversionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"targetValue",
              						lv_targetValue_7_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_8=(Token)match(input,51,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getLinearConversionAccess().getThresholdKeyword_8());
              		
            }
            // InternalTurn.g:2464:3: ( (lv_thresholdValue_9_0= RULE_INT ) )
            // InternalTurn.g:2465:4: (lv_thresholdValue_9_0= RULE_INT )
            {
            // InternalTurn.g:2465:4: (lv_thresholdValue_9_0= RULE_INT )
            // InternalTurn.g:2466:5: lv_thresholdValue_9_0= RULE_INT
            {
            lv_thresholdValue_9_0=(Token)match(input,RULE_INT,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_thresholdValue_9_0, grammarAccess.getLinearConversionAccess().getThresholdValueINTTerminalRuleCall_9_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLinearConversionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"thresholdValue",
              						lv_thresholdValue_9_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_10=(Token)match(input,52,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getLinearConversionAccess().getWorstKeyword_10());
              		
            }
            // InternalTurn.g:2486:3: ( (lv_worstValue_11_0= RULE_INT ) )
            // InternalTurn.g:2487:4: (lv_worstValue_11_0= RULE_INT )
            {
            // InternalTurn.g:2487:4: (lv_worstValue_11_0= RULE_INT )
            // InternalTurn.g:2488:5: lv_worstValue_11_0= RULE_INT
            {
            lv_worstValue_11_0=(Token)match(input,RULE_INT,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_worstValue_11_0, grammarAccess.getLinearConversionAccess().getWorstValueINTTerminalRuleCall_11_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLinearConversionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"worstValue",
              						lv_worstValue_11_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_12=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getLinearConversionAccess().getRightCurlyBracketKeyword_12());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLinearConversion"


    // $ANTLR start "entryRuleQualToQMappings"
    // InternalTurn.g:2512:1: entryRuleQualToQMappings returns [EObject current=null] : iv_ruleQualToQMappings= ruleQualToQMappings EOF ;
    public final EObject entryRuleQualToQMappings() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualToQMappings = null;


        try {
            // InternalTurn.g:2512:56: (iv_ruleQualToQMappings= ruleQualToQMappings EOF )
            // InternalTurn.g:2513:2: iv_ruleQualToQMappings= ruleQualToQMappings EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualToQMappingsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualToQMappings=ruleQualToQMappings();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualToQMappings; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualToQMappings"


    // $ANTLR start "ruleQualToQMappings"
    // InternalTurn.g:2519:1: ruleQualToQMappings returns [EObject current=null] : (otherlv_0= 'mappingConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) ( (lv_mappings_6_0= ruleQualToQMapping ) )+ otherlv_7= '}' ) ;
    public final EObject ruleQualToQMappings() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_unit_5_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_mappings_6_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2525:2: ( (otherlv_0= 'mappingConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) ( (lv_mappings_6_0= ruleQualToQMapping ) )+ otherlv_7= '}' ) )
            // InternalTurn.g:2526:2: (otherlv_0= 'mappingConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) ( (lv_mappings_6_0= ruleQualToQMapping ) )+ otherlv_7= '}' )
            {
            // InternalTurn.g:2526:2: (otherlv_0= 'mappingConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) ( (lv_mappings_6_0= ruleQualToQMapping ) )+ otherlv_7= '}' )
            // InternalTurn.g:2527:3: otherlv_0= 'mappingConversion' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' otherlv_4= 'unit' ( (lv_unit_5_0= RULE_STRING ) ) ( (lv_mappings_6_0= ruleQualToQMapping ) )+ otherlv_7= '}'
            {
            otherlv_0=(Token)match(input,53,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQualToQMappingsAccess().getMappingConversionKeyword_0());
              		
            }
            // InternalTurn.g:2531:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:2532:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:2532:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:2533:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualToQMappingsAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualToQMappingsRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:2550:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:2551:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:2551:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:2552:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualToQMappingsAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualToQMappingsRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,15,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getQualToQMappingsAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQualToQMappingsAccess().getUnitKeyword_4());
              		
            }
            // InternalTurn.g:2577:3: ( (lv_unit_5_0= RULE_STRING ) )
            // InternalTurn.g:2578:4: (lv_unit_5_0= RULE_STRING )
            {
            // InternalTurn.g:2578:4: (lv_unit_5_0= RULE_STRING )
            // InternalTurn.g:2579:5: lv_unit_5_0= RULE_STRING
            {
            lv_unit_5_0=(Token)match(input,RULE_STRING,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_unit_5_0, grammarAccess.getQualToQMappingsAccess().getUnitSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualToQMappingsRule());
              					}
              					setWithLastConsumed(
              						current,
              						"unit",
              						lv_unit_5_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            // InternalTurn.g:2595:3: ( (lv_mappings_6_0= ruleQualToQMapping ) )+
            int cnt46=0;
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==45||LA46_0==48) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalTurn.g:2596:4: (lv_mappings_6_0= ruleQualToQMapping )
            	    {
            	    // InternalTurn.g:2596:4: (lv_mappings_6_0= ruleQualToQMapping )
            	    // InternalTurn.g:2597:5: lv_mappings_6_0= ruleQualToQMapping
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getQualToQMappingsAccess().getMappingsQualToQMappingParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_mappings_6_0=ruleQualToQMapping();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getQualToQMappingsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"mappings",
            	      						lv_mappings_6_0,
            	      						"org.xtext.project.turn.Turn.QualToQMapping");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt46 >= 1 ) break loop46;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(46, input);
                        throw eee;
                }
                cnt46++;
            } while (true);

            otherlv_7=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getQualToQMappingsAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualToQMappings"


    // $ANTLR start "entryRuleQualToQMapping"
    // InternalTurn.g:2622:1: entryRuleQualToQMapping returns [EObject current=null] : iv_ruleQualToQMapping= ruleQualToQMapping EOF ;
    public final EObject entryRuleQualToQMapping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualToQMapping = null;


        try {
            // InternalTurn.g:2622:55: (iv_ruleQualToQMapping= ruleQualToQMapping EOF )
            // InternalTurn.g:2623:2: iv_ruleQualToQMapping= ruleQualToQMapping EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualToQMappingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualToQMapping=ruleQualToQMapping();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualToQMapping; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualToQMapping"


    // $ANTLR start "ruleQualToQMapping"
    // InternalTurn.g:2629:1: ruleQualToQMapping returns [EObject current=null] : ( ( (lv_exceeds_0_0= 'exceeding' ) )? otherlv_1= 'real' ( (lv_realWorldLabel_2_0= RULE_STRING ) ) otherlv_3= '-->' ( ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_5_0= ruleQuantitativeValue ) ) ) ) ;
    public final EObject ruleQualToQMapping() throws RecognitionException {
        EObject current = null;

        Token lv_exceeds_0_0=null;
        Token otherlv_1=null;
        Token lv_realWorldLabel_2_0=null;
        Token otherlv_3=null;
        Enumerator lv_qualitativeEvaluation_4_0 = null;

        AntlrDatatypeRuleToken lv_evaluation_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2635:2: ( ( ( (lv_exceeds_0_0= 'exceeding' ) )? otherlv_1= 'real' ( (lv_realWorldLabel_2_0= RULE_STRING ) ) otherlv_3= '-->' ( ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_5_0= ruleQuantitativeValue ) ) ) ) )
            // InternalTurn.g:2636:2: ( ( (lv_exceeds_0_0= 'exceeding' ) )? otherlv_1= 'real' ( (lv_realWorldLabel_2_0= RULE_STRING ) ) otherlv_3= '-->' ( ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_5_0= ruleQuantitativeValue ) ) ) )
            {
            // InternalTurn.g:2636:2: ( ( (lv_exceeds_0_0= 'exceeding' ) )? otherlv_1= 'real' ( (lv_realWorldLabel_2_0= RULE_STRING ) ) otherlv_3= '-->' ( ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_5_0= ruleQuantitativeValue ) ) ) )
            // InternalTurn.g:2637:3: ( (lv_exceeds_0_0= 'exceeding' ) )? otherlv_1= 'real' ( (lv_realWorldLabel_2_0= RULE_STRING ) ) otherlv_3= '-->' ( ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_5_0= ruleQuantitativeValue ) ) )
            {
            // InternalTurn.g:2637:3: ( (lv_exceeds_0_0= 'exceeding' ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==45) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalTurn.g:2638:4: (lv_exceeds_0_0= 'exceeding' )
                    {
                    // InternalTurn.g:2638:4: (lv_exceeds_0_0= 'exceeding' )
                    // InternalTurn.g:2639:5: lv_exceeds_0_0= 'exceeding'
                    {
                    lv_exceeds_0_0=(Token)match(input,45,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_exceeds_0_0, grammarAccess.getQualToQMappingAccess().getExceedsExceedingKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getQualToQMappingRule());
                      					}
                      					setWithLastConsumed(current, "exceeds", true, "exceeding");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,48,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQualToQMappingAccess().getRealKeyword_1());
              		
            }
            // InternalTurn.g:2655:3: ( (lv_realWorldLabel_2_0= RULE_STRING ) )
            // InternalTurn.g:2656:4: (lv_realWorldLabel_2_0= RULE_STRING )
            {
            // InternalTurn.g:2656:4: (lv_realWorldLabel_2_0= RULE_STRING )
            // InternalTurn.g:2657:5: lv_realWorldLabel_2_0= RULE_STRING
            {
            lv_realWorldLabel_2_0=(Token)match(input,RULE_STRING,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_realWorldLabel_2_0, grammarAccess.getQualToQMappingAccess().getRealWorldLabelSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualToQMappingRule());
              					}
              					setWithLastConsumed(
              						current,
              						"realWorldLabel",
              						lv_realWorldLabel_2_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getQualToQMappingAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3());
              		
            }
            // InternalTurn.g:2677:3: ( ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) ) | ( (lv_evaluation_5_0= ruleQuantitativeValue ) ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=151 && LA48_0<=157)) ) {
                alt48=1;
            }
            else if ( (LA48_0==RULE_INT||(LA48_0>=56 && LA48_0<=57)) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalTurn.g:2678:4: ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) )
                    {
                    // InternalTurn.g:2678:4: ( (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel ) )
                    // InternalTurn.g:2679:5: (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel )
                    {
                    // InternalTurn.g:2679:5: (lv_qualitativeEvaluation_4_0= ruleQualitativeLabel )
                    // InternalTurn.g:2680:6: lv_qualitativeEvaluation_4_0= ruleQualitativeLabel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQualToQMappingAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualitativeEvaluation_4_0=ruleQualitativeLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQualToQMappingRule());
                      						}
                      						set(
                      							current,
                      							"qualitativeEvaluation",
                      							lv_qualitativeEvaluation_4_0,
                      							"org.xtext.project.turn.Turn.QualitativeLabel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:2698:4: ( (lv_evaluation_5_0= ruleQuantitativeValue ) )
                    {
                    // InternalTurn.g:2698:4: ( (lv_evaluation_5_0= ruleQuantitativeValue ) )
                    // InternalTurn.g:2699:5: (lv_evaluation_5_0= ruleQuantitativeValue )
                    {
                    // InternalTurn.g:2699:5: (lv_evaluation_5_0= ruleQuantitativeValue )
                    // InternalTurn.g:2700:6: lv_evaluation_5_0= ruleQuantitativeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQualToQMappingAccess().getEvaluationQuantitativeValueParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_evaluation_5_0=ruleQuantitativeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQualToQMappingRule());
                      						}
                      						set(
                      							current,
                      							"evaluation",
                      							lv_evaluation_5_0,
                      							"org.xtext.project.turn.Turn.QuantitativeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualToQMapping"


    // $ANTLR start "entryRuleContributionContextGroup"
    // InternalTurn.g:2722:1: entryRuleContributionContextGroup returns [EObject current=null] : iv_ruleContributionContextGroup= ruleContributionContextGroup EOF ;
    public final EObject entryRuleContributionContextGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContributionContextGroup = null;


        try {
            // InternalTurn.g:2722:65: (iv_ruleContributionContextGroup= ruleContributionContextGroup EOF )
            // InternalTurn.g:2723:2: iv_ruleContributionContextGroup= ruleContributionContextGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContributionContextGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContributionContextGroup=ruleContributionContextGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContributionContextGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContributionContextGroup"


    // $ANTLR start "ruleContributionContextGroup"
    // InternalTurn.g:2729:1: ruleContributionContextGroup returns [EObject current=null] : (otherlv_0= 'contributionContextGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* ) ;
    public final EObject ruleContributionContextGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2735:2: ( (otherlv_0= 'contributionContextGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* ) )
            // InternalTurn.g:2736:2: (otherlv_0= 'contributionContextGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )
            {
            // InternalTurn.g:2736:2: (otherlv_0= 'contributionContextGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )
            // InternalTurn.g:2737:3: otherlv_0= 'contributionContextGroup' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= ':' ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
            {
            otherlv_0=(Token)match(input,54,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getContributionContextGroupAccess().getContributionContextGroupKeyword_0());
              		
            }
            // InternalTurn.g:2741:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:2742:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:2742:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:2743:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getContributionContextGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getContributionContextGroupRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:2760:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:2761:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:2761:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:2762:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getContributionContextGroupAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getContributionContextGroupRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getContributionContextGroupAccess().getColonKeyword_3());
              		
            }
            // InternalTurn.g:2783:3: ( (otherlv_4= RULE_ID ) )
            // InternalTurn.g:2784:4: (otherlv_4= RULE_ID )
            {
            // InternalTurn.g:2784:4: (otherlv_4= RULE_ID )
            // InternalTurn.g:2785:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getContributionContextGroupRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getContributionContextGroupAccess().getContribContributionContextCrossReference_4_0());
              				
            }

            }


            }

            // InternalTurn.g:2796:3: (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==25) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalTurn.g:2797:4: otherlv_5= ',' ( (otherlv_6= RULE_ID ) )
            	    {
            	    otherlv_5=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getContributionContextGroupAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalTurn.g:2801:4: ( (otherlv_6= RULE_ID ) )
            	    // InternalTurn.g:2802:5: (otherlv_6= RULE_ID )
            	    {
            	    // InternalTurn.g:2802:5: (otherlv_6= RULE_ID )
            	    // InternalTurn.g:2803:6: otherlv_6= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getContributionContextGroupRule());
            	      						}
            	      					
            	    }
            	    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_6, grammarAccess.getContributionContextGroupAccess().getContribsContributionContextCrossReference_5_1_0());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContributionContextGroup"


    // $ANTLR start "entryRuleContributionContext"
    // InternalTurn.g:2819:1: entryRuleContributionContext returns [EObject current=null] : iv_ruleContributionContext= ruleContributionContext EOF ;
    public final EObject entryRuleContributionContext() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContributionContext = null;


        try {
            // InternalTurn.g:2819:60: (iv_ruleContributionContext= ruleContributionContext EOF )
            // InternalTurn.g:2820:2: iv_ruleContributionContext= ruleContributionContext EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContributionContextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContributionContext=ruleContributionContext();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContributionContext; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContributionContext"


    // $ANTLR start "ruleContributionContext"
    // InternalTurn.g:2826:1: ruleContributionContext returns [EObject current=null] : (otherlv_0= 'contributionContext' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_changes_4_0= ruleContributionChange ) )* (otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )* )? otherlv_9= '}' ) ;
    public final EObject ruleContributionContext() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_changes_4_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2832:2: ( (otherlv_0= 'contributionContext' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_changes_4_0= ruleContributionChange ) )* (otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )* )? otherlv_9= '}' ) )
            // InternalTurn.g:2833:2: (otherlv_0= 'contributionContext' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_changes_4_0= ruleContributionChange ) )* (otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )* )? otherlv_9= '}' )
            {
            // InternalTurn.g:2833:2: (otherlv_0= 'contributionContext' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_changes_4_0= ruleContributionChange ) )* (otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )* )? otherlv_9= '}' )
            // InternalTurn.g:2834:3: otherlv_0= 'contributionContext' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) otherlv_3= '{' ( (lv_changes_4_0= ruleContributionChange ) )* (otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )* )? otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,55,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getContributionContextAccess().getContributionContextKeyword_0());
              		
            }
            // InternalTurn.g:2838:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:2839:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:2839:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:2840:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getContributionContextAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getContributionContextRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:2857:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:2858:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:2858:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:2859:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getContributionContextAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getContributionContextRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,15,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getContributionContextAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalTurn.g:2880:3: ( (lv_changes_4_0= ruleContributionChange ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==RULE_ID) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalTurn.g:2881:4: (lv_changes_4_0= ruleContributionChange )
            	    {
            	    // InternalTurn.g:2881:4: (lv_changes_4_0= ruleContributionChange )
            	    // InternalTurn.g:2882:5: lv_changes_4_0= ruleContributionChange
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getContributionContextAccess().getChangesContributionChangeParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_changes_4_0=ruleContributionChange();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getContributionContextRule());
            	      					}
            	      					add(
            	      						current,
            	      						"changes",
            	      						lv_changes_4_0,
            	      						"org.xtext.project.turn.Turn.ContributionChange");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            // InternalTurn.g:2899:3: (otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )* )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==44) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalTurn.g:2900:4: otherlv_5= 'includes' ( (otherlv_6= RULE_ID ) ) (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )*
                    {
                    otherlv_5=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getContributionContextAccess().getIncludesKeyword_5_0());
                      			
                    }
                    // InternalTurn.g:2904:4: ( (otherlv_6= RULE_ID ) )
                    // InternalTurn.g:2905:5: (otherlv_6= RULE_ID )
                    {
                    // InternalTurn.g:2905:5: (otherlv_6= RULE_ID )
                    // InternalTurn.g:2906:6: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getContributionContextRule());
                      						}
                      					
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_6, grammarAccess.getContributionContextAccess().getIncludedContextContributionContextCrossReference_5_1_0());
                      					
                    }

                    }


                    }

                    // InternalTurn.g:2917:4: (otherlv_7= ',' ( (otherlv_8= RULE_ID ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==25) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalTurn.g:2918:5: otherlv_7= ',' ( (otherlv_8= RULE_ID ) )
                    	    {
                    	    otherlv_7=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getContributionContextAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:2922:5: ( (otherlv_8= RULE_ID ) )
                    	    // InternalTurn.g:2923:6: (otherlv_8= RULE_ID )
                    	    {
                    	    // InternalTurn.g:2923:6: (otherlv_8= RULE_ID )
                    	    // InternalTurn.g:2924:7: otherlv_8= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getContributionContextRule());
                    	      							}
                    	      						
                    	    }
                    	    otherlv_8=(Token)match(input,RULE_ID,FOLLOW_45); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_8, grammarAccess.getContributionContextAccess().getIncludedContextsContributionContextCrossReference_5_2_1_0());
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getContributionContextAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContributionContext"


    // $ANTLR start "entryRuleContributionChange"
    // InternalTurn.g:2945:1: entryRuleContributionChange returns [EObject current=null] : iv_ruleContributionChange= ruleContributionChange EOF ;
    public final EObject entryRuleContributionChange() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContributionChange = null;


        try {
            // InternalTurn.g:2945:59: (iv_ruleContributionChange= ruleContributionChange EOF )
            // InternalTurn.g:2946:2: iv_ruleContributionChange= ruleContributionChange EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContributionChangeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContributionChange=ruleContributionChange();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContributionChange; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContributionChange"


    // $ANTLR start "ruleContributionChange"
    // InternalTurn.g:2952:1: ruleContributionChange returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= 'with' ( ( (lv_newContribution_2_0= ruleContributionType ) ) | ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) ) ) ) ;
    public final EObject ruleContributionChange() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Enumerator lv_newContribution_2_0 = null;

        AntlrDatatypeRuleToken lv_newQuantitativeContribution_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:2958:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= 'with' ( ( (lv_newContribution_2_0= ruleContributionType ) ) | ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) ) ) ) )
            // InternalTurn.g:2959:2: ( ( ( ruleQualifiedName ) ) otherlv_1= 'with' ( ( (lv_newContribution_2_0= ruleContributionType ) ) | ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) ) ) )
            {
            // InternalTurn.g:2959:2: ( ( ( ruleQualifiedName ) ) otherlv_1= 'with' ( ( (lv_newContribution_2_0= ruleContributionType ) ) | ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) ) ) )
            // InternalTurn.g:2960:3: ( ( ruleQualifiedName ) ) otherlv_1= 'with' ( ( (lv_newContribution_2_0= ruleContributionType ) ) | ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) ) )
            {
            // InternalTurn.g:2960:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:2961:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:2961:4: ( ruleQualifiedName )
            // InternalTurn.g:2962:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getContributionChangeRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getContributionChangeAccess().getContributionContributionCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_36);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getContributionChangeAccess().getWithKeyword_1());
              		
            }
            // InternalTurn.g:2980:3: ( ( (lv_newContribution_2_0= ruleContributionType ) ) | ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==156||(LA53_0>=164 && LA53_0<=169)) ) {
                alt53=1;
            }
            else if ( (LA53_0==RULE_INT||(LA53_0>=56 && LA53_0<=57)) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalTurn.g:2981:4: ( (lv_newContribution_2_0= ruleContributionType ) )
                    {
                    // InternalTurn.g:2981:4: ( (lv_newContribution_2_0= ruleContributionType ) )
                    // InternalTurn.g:2982:5: (lv_newContribution_2_0= ruleContributionType )
                    {
                    // InternalTurn.g:2982:5: (lv_newContribution_2_0= ruleContributionType )
                    // InternalTurn.g:2983:6: lv_newContribution_2_0= ruleContributionType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContributionChangeAccess().getNewContributionContributionTypeEnumRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_newContribution_2_0=ruleContributionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContributionChangeRule());
                      						}
                      						set(
                      							current,
                      							"newContribution",
                      							lv_newContribution_2_0,
                      							"org.xtext.project.turn.Turn.ContributionType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:3001:4: ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) )
                    {
                    // InternalTurn.g:3001:4: ( (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue ) )
                    // InternalTurn.g:3002:5: (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue )
                    {
                    // InternalTurn.g:3002:5: (lv_newQuantitativeContribution_3_0= ruleQuantitativeValue )
                    // InternalTurn.g:3003:6: lv_newQuantitativeContribution_3_0= ruleQuantitativeValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContributionChangeAccess().getNewQuantitativeContributionQuantitativeValueParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_newQuantitativeContribution_3_0=ruleQuantitativeValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContributionChangeRule());
                      						}
                      						set(
                      							current,
                      							"newQuantitativeContribution",
                      							lv_newQuantitativeContribution_3_0,
                      							"org.xtext.project.turn.Turn.QuantitativeValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContributionChange"


    // $ANTLR start "entryRuleQuantitativeValue"
    // InternalTurn.g:3025:1: entryRuleQuantitativeValue returns [String current=null] : iv_ruleQuantitativeValue= ruleQuantitativeValue EOF ;
    public final String entryRuleQuantitativeValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQuantitativeValue = null;


        try {
            // InternalTurn.g:3025:57: (iv_ruleQuantitativeValue= ruleQuantitativeValue EOF )
            // InternalTurn.g:3026:2: iv_ruleQuantitativeValue= ruleQuantitativeValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantitativeValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantitativeValue=ruleQuantitativeValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantitativeValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantitativeValue"


    // $ANTLR start "ruleQuantitativeValue"
    // InternalTurn.g:3032:1: ruleQuantitativeValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' | kw= '+' )? this_INT_2= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleQuantitativeValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_2=null;


        	enterRule();

        try {
            // InternalTurn.g:3038:2: ( ( (kw= '-' | kw= '+' )? this_INT_2= RULE_INT ) )
            // InternalTurn.g:3039:2: ( (kw= '-' | kw= '+' )? this_INT_2= RULE_INT )
            {
            // InternalTurn.g:3039:2: ( (kw= '-' | kw= '+' )? this_INT_2= RULE_INT )
            // InternalTurn.g:3040:3: (kw= '-' | kw= '+' )? this_INT_2= RULE_INT
            {
            // InternalTurn.g:3040:3: (kw= '-' | kw= '+' )?
            int alt54=3;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==56) ) {
                alt54=1;
            }
            else if ( (LA54_0==57) ) {
                alt54=2;
            }
            switch (alt54) {
                case 1 :
                    // InternalTurn.g:3041:4: kw= '-'
                    {
                    kw=(Token)match(input,56,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getQuantitativeValueAccess().getHyphenMinusKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:3047:4: kw= '+'
                    {
                    kw=(Token)match(input,57,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getQuantitativeValueAccess().getPlusSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            this_INT_2=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_2, grammarAccess.getQuantitativeValueAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantitativeValue"


    // $ANTLR start "entryRuleUCMmap"
    // InternalTurn.g:3064:1: entryRuleUCMmap returns [EObject current=null] : iv_ruleUCMmap= ruleUCMmap EOF ;
    public final EObject entryRuleUCMmap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUCMmap = null;


        try {
            // InternalTurn.g:3064:47: (iv_ruleUCMmap= ruleUCMmap EOF )
            // InternalTurn.g:3065:2: iv_ruleUCMmap= ruleUCMmap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUCMmapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUCMmap=ruleUCMmap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUCMmap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUCMmap"


    // $ANTLR start "ruleUCMmap"
    // InternalTurn.g:3071:1: ruleUCMmap returns [EObject current=null] : ( ( (lv_singleton_0_0= 'singleton' ) )? otherlv_1= 'map' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) otherlv_4= '{' ( (lv_stubs_5_0= ruleStubDeclaration ) )* ( (lv_paths_6_0= rulePath ) )* ( (lv_components_7_0= ruleComponentRef ) )* otherlv_8= '}' ) ;
    public final EObject ruleUCMmap() throws RecognitionException {
        EObject current = null;

        Token lv_singleton_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_longName_3_0 = null;

        EObject lv_stubs_5_0 = null;

        EObject lv_paths_6_0 = null;

        EObject lv_components_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3077:2: ( ( ( (lv_singleton_0_0= 'singleton' ) )? otherlv_1= 'map' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) otherlv_4= '{' ( (lv_stubs_5_0= ruleStubDeclaration ) )* ( (lv_paths_6_0= rulePath ) )* ( (lv_components_7_0= ruleComponentRef ) )* otherlv_8= '}' ) )
            // InternalTurn.g:3078:2: ( ( (lv_singleton_0_0= 'singleton' ) )? otherlv_1= 'map' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) otherlv_4= '{' ( (lv_stubs_5_0= ruleStubDeclaration ) )* ( (lv_paths_6_0= rulePath ) )* ( (lv_components_7_0= ruleComponentRef ) )* otherlv_8= '}' )
            {
            // InternalTurn.g:3078:2: ( ( (lv_singleton_0_0= 'singleton' ) )? otherlv_1= 'map' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) otherlv_4= '{' ( (lv_stubs_5_0= ruleStubDeclaration ) )* ( (lv_paths_6_0= rulePath ) )* ( (lv_components_7_0= ruleComponentRef ) )* otherlv_8= '}' )
            // InternalTurn.g:3079:3: ( (lv_singleton_0_0= 'singleton' ) )? otherlv_1= 'map' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) otherlv_4= '{' ( (lv_stubs_5_0= ruleStubDeclaration ) )* ( (lv_paths_6_0= rulePath ) )* ( (lv_components_7_0= ruleComponentRef ) )* otherlv_8= '}'
            {
            // InternalTurn.g:3079:3: ( (lv_singleton_0_0= 'singleton' ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==58) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalTurn.g:3080:4: (lv_singleton_0_0= 'singleton' )
                    {
                    // InternalTurn.g:3080:4: (lv_singleton_0_0= 'singleton' )
                    // InternalTurn.g:3081:5: lv_singleton_0_0= 'singleton'
                    {
                    lv_singleton_0_0=(Token)match(input,58,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_singleton_0_0, grammarAccess.getUCMmapAccess().getSingletonSingletonKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUCMmapRule());
                      					}
                      					setWithLastConsumed(current, "singleton", true, "singleton");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,59,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getUCMmapAccess().getMapKeyword_1());
              		
            }
            // InternalTurn.g:3097:3: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalTurn.g:3098:4: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalTurn.g:3098:4: (lv_name_2_0= ruleQualifiedName )
            // InternalTurn.g:3099:5: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUCMmapAccess().getNameQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUCMmapRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:3116:3: ( (lv_longName_3_0= ruleLongName ) )
            // InternalTurn.g:3117:4: (lv_longName_3_0= ruleLongName )
            {
            // InternalTurn.g:3117:4: (lv_longName_3_0= ruleLongName )
            // InternalTurn.g:3118:5: lv_longName_3_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUCMmapAccess().getLongNameLongNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_longName_3_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUCMmapRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_3_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,15,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getUCMmapAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalTurn.g:3139:3: ( (lv_stubs_5_0= ruleStubDeclaration ) )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalTurn.g:3140:4: (lv_stubs_5_0= ruleStubDeclaration )
            	    {
            	    // InternalTurn.g:3140:4: (lv_stubs_5_0= ruleStubDeclaration )
            	    // InternalTurn.g:3141:5: lv_stubs_5_0= ruleStubDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getUCMmapAccess().getStubsStubDeclarationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_stubs_5_0=ruleStubDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getUCMmapRule());
            	      					}
            	      					add(
            	      						current,
            	      						"stubs",
            	      						lv_stubs_5_0,
            	      						"org.xtext.project.turn.Turn.StubDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            // InternalTurn.g:3158:3: ( (lv_paths_6_0= rulePath ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==60||(LA57_0>=64 && LA57_0<=65)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalTurn.g:3159:4: (lv_paths_6_0= rulePath )
            	    {
            	    // InternalTurn.g:3159:4: (lv_paths_6_0= rulePath )
            	    // InternalTurn.g:3160:5: lv_paths_6_0= rulePath
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getUCMmapAccess().getPathsPathParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_paths_6_0=rulePath();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getUCMmapRule());
            	      					}
            	      					add(
            	      						current,
            	      						"paths",
            	      						lv_paths_6_0,
            	      						"org.xtext.project.turn.Turn.Path");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            // InternalTurn.g:3177:3: ( (lv_components_7_0= ruleComponentRef ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_ID||LA58_0==34||LA58_0==90||(LA58_0>=176 && LA58_0<=180)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalTurn.g:3178:4: (lv_components_7_0= ruleComponentRef )
            	    {
            	    // InternalTurn.g:3178:4: (lv_components_7_0= ruleComponentRef )
            	    // InternalTurn.g:3179:5: lv_components_7_0= ruleComponentRef
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getUCMmapAccess().getComponentsComponentRefParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_components_7_0=ruleComponentRef();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getUCMmapRule());
            	      					}
            	      					add(
            	      						current,
            	      						"components",
            	      						lv_components_7_0,
            	      						"org.xtext.project.turn.Turn.ComponentRef");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            otherlv_8=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getUCMmapAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUCMmap"


    // $ANTLR start "entryRulePath"
    // InternalTurn.g:3204:1: entryRulePath returns [EObject current=null] : iv_rulePath= rulePath EOF ;
    public final EObject entryRulePath() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePath = null;


        try {
            // InternalTurn.g:3204:45: (iv_rulePath= rulePath EOF )
            // InternalTurn.g:3205:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalTurn.g:3211:1: rulePath returns [EObject current=null] : ( ( (lv_startPoint_0_0= ruleStartPoint ) ) ( (lv_pathBody_1_0= rulePathBody ) ) ) ;
    public final EObject rulePath() throws RecognitionException {
        EObject current = null;

        EObject lv_startPoint_0_0 = null;

        EObject lv_pathBody_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3217:2: ( ( ( (lv_startPoint_0_0= ruleStartPoint ) ) ( (lv_pathBody_1_0= rulePathBody ) ) ) )
            // InternalTurn.g:3218:2: ( ( (lv_startPoint_0_0= ruleStartPoint ) ) ( (lv_pathBody_1_0= rulePathBody ) ) )
            {
            // InternalTurn.g:3218:2: ( ( (lv_startPoint_0_0= ruleStartPoint ) ) ( (lv_pathBody_1_0= rulePathBody ) ) )
            // InternalTurn.g:3219:3: ( (lv_startPoint_0_0= ruleStartPoint ) ) ( (lv_pathBody_1_0= rulePathBody ) )
            {
            // InternalTurn.g:3219:3: ( (lv_startPoint_0_0= ruleStartPoint ) )
            // InternalTurn.g:3220:4: (lv_startPoint_0_0= ruleStartPoint )
            {
            // InternalTurn.g:3220:4: (lv_startPoint_0_0= ruleStartPoint )
            // InternalTurn.g:3221:5: lv_startPoint_0_0= ruleStartPoint
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathAccess().getStartPointStartPointParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_61);
            lv_startPoint_0_0=ruleStartPoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathRule());
              					}
              					set(
              						current,
              						"startPoint",
              						lv_startPoint_0_0,
              						"org.xtext.project.turn.Turn.StartPoint");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:3238:3: ( (lv_pathBody_1_0= rulePathBody ) )
            // InternalTurn.g:3239:4: (lv_pathBody_1_0= rulePathBody )
            {
            // InternalTurn.g:3239:4: (lv_pathBody_1_0= rulePathBody )
            // InternalTurn.g:3240:5: lv_pathBody_1_0= rulePathBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathAccess().getPathBodyPathBodyParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_pathBody_1_0=rulePathBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathRule());
              					}
              					set(
              						current,
              						"pathBody",
              						lv_pathBody_1_0,
              						"org.xtext.project.turn.Turn.PathBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleStartPoint"
    // InternalTurn.g:3261:1: entryRuleStartPoint returns [EObject current=null] : iv_ruleStartPoint= ruleStartPoint EOF ;
    public final EObject entryRuleStartPoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStartPoint = null;


        try {
            // InternalTurn.g:3261:51: (iv_ruleStartPoint= ruleStartPoint EOF )
            // InternalTurn.g:3262:2: iv_ruleStartPoint= ruleStartPoint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStartPointRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStartPoint=ruleStartPoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStartPoint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStartPoint"


    // $ANTLR start "ruleStartPoint"
    // InternalTurn.g:3268:1: ruleStartPoint returns [EObject current=null] : ( (otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )? ) | ( ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )? ) ) ;
    public final EObject ruleStartPoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_catches_9_0=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_precondition_3_0 = null;

        AntlrDatatypeRuleToken lv_failKind_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_longName_6_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3274:2: ( ( (otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )? ) | ( ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )? ) ) )
            // InternalTurn.g:3275:2: ( (otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )? ) | ( ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )? ) )
            {
            // InternalTurn.g:3275:2: ( (otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )? ) | ( ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )? ) )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==60) ) {
                alt62=1;
            }
            else if ( ((LA62_0>=64 && LA62_0<=65)) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalTurn.g:3276:3: (otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )? )
                    {
                    // InternalTurn.g:3276:3: (otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )? )
                    // InternalTurn.g:3277:4: otherlv_0= 'start' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_precondition_3_0= ruleCondition ) )?
                    {
                    otherlv_0=(Token)match(input,60,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getStartPointAccess().getStartKeyword_0_0());
                      			
                    }
                    // InternalTurn.g:3281:4: ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==RULE_ID) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // InternalTurn.g:3282:5: ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) )
                            {
                            // InternalTurn.g:3282:5: ( (lv_name_1_0= ruleQualifiedName ) )
                            // InternalTurn.g:3283:6: (lv_name_1_0= ruleQualifiedName )
                            {
                            // InternalTurn.g:3283:6: (lv_name_1_0= ruleQualifiedName )
                            // InternalTurn.g:3284:7: lv_name_1_0= ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_63);
                            lv_name_1_0=ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getStartPointRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_1_0,
                              								"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalTurn.g:3301:5: ( (lv_longName_2_0= ruleLongName ) )
                            // InternalTurn.g:3302:6: (lv_longName_2_0= ruleLongName )
                            {
                            // InternalTurn.g:3302:6: (lv_longName_2_0= ruleLongName )
                            // InternalTurn.g:3303:7: lv_longName_2_0= ruleLongName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_longName_2_0=ruleLongName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getStartPointRule());
                              							}
                              							set(
                              								current,
                              								"longName",
                              								lv_longName_2_0,
                              								"org.xtext.project.turn.Turn.LongName");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalTurn.g:3321:4: ( (lv_precondition_3_0= ruleCondition ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==27) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalTurn.g:3322:5: (lv_precondition_3_0= ruleCondition )
                            {
                            // InternalTurn.g:3322:5: (lv_precondition_3_0= ruleCondition )
                            // InternalTurn.g:3323:6: lv_precondition_3_0= ruleCondition
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getStartPointAccess().getPreconditionConditionParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_precondition_3_0=ruleCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getStartPointRule());
                              						}
                              						set(
                              							current,
                              							"precondition",
                              							lv_precondition_3_0,
                              							"org.xtext.project.turn.Turn.Condition");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:3342:3: ( ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )? )
                    {
                    // InternalTurn.g:3342:3: ( ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )? )
                    // InternalTurn.g:3343:4: ( (lv_failKind_4_0= ruleFailureKind ) ) ( (lv_name_5_0= ruleQualifiedName ) ) ( (lv_longName_6_0= ruleLongName ) ) (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )?
                    {
                    // InternalTurn.g:3343:4: ( (lv_failKind_4_0= ruleFailureKind ) )
                    // InternalTurn.g:3344:5: (lv_failKind_4_0= ruleFailureKind )
                    {
                    // InternalTurn.g:3344:5: (lv_failKind_4_0= ruleFailureKind )
                    // InternalTurn.g:3345:6: lv_failKind_4_0= ruleFailureKind
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartPointAccess().getFailKindFailureKindParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_failKind_4_0=ruleFailureKind();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStartPointRule());
                      						}
                      						set(
                      							current,
                      							"failKind",
                      							lv_failKind_4_0,
                      							"org.xtext.project.turn.Turn.FailureKind");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:3362:4: ( (lv_name_5_0= ruleQualifiedName ) )
                    // InternalTurn.g:3363:5: (lv_name_5_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:3363:5: (lv_name_5_0= ruleQualifiedName )
                    // InternalTurn.g:3364:6: lv_name_5_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_name_5_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStartPointRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:3381:4: ( (lv_longName_6_0= ruleLongName ) )
                    // InternalTurn.g:3382:5: (lv_longName_6_0= ruleLongName )
                    {
                    // InternalTurn.g:3382:5: (lv_longName_6_0= ruleLongName )
                    // InternalTurn.g:3383:6: lv_longName_6_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_longName_6_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStartPointRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_6_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:3400:4: (otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]' )?
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==61) ) {
                        alt61=1;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalTurn.g:3401:5: otherlv_7= 'catches' otherlv_8= '[[' ( (lv_catches_9_0= RULE_STRING ) ) otherlv_10= ']]'
                            {
                            otherlv_7=(Token)match(input,61,FOLLOW_67); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getStartPointAccess().getCatchesKeyword_1_3_0());
                              				
                            }
                            otherlv_8=(Token)match(input,62,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getStartPointAccess().getLeftSquareBracketLeftSquareBracketKeyword_1_3_1());
                              				
                            }
                            // InternalTurn.g:3409:5: ( (lv_catches_9_0= RULE_STRING ) )
                            // InternalTurn.g:3410:6: (lv_catches_9_0= RULE_STRING )
                            {
                            // InternalTurn.g:3410:6: (lv_catches_9_0= RULE_STRING )
                            // InternalTurn.g:3411:7: lv_catches_9_0= RULE_STRING
                            {
                            lv_catches_9_0=(Token)match(input,RULE_STRING,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_catches_9_0, grammarAccess.getStartPointAccess().getCatchesSTRINGTerminalRuleCall_1_3_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getStartPointRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"catches",
                              								lv_catches_9_0,
                              								"org.eclipse.xtext.xbase.Xtype.STRING");
                              						
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getStartPointAccess().getRightSquareBracketRightSquareBracketKeyword_1_3_3());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStartPoint"


    // $ANTLR start "entryRuleFailureKind"
    // InternalTurn.g:3437:1: entryRuleFailureKind returns [String current=null] : iv_ruleFailureKind= ruleFailureKind EOF ;
    public final String entryRuleFailureKind() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFailureKind = null;


        try {
            // InternalTurn.g:3437:51: (iv_ruleFailureKind= ruleFailureKind EOF )
            // InternalTurn.g:3438:2: iv_ruleFailureKind= ruleFailureKind EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFailureKindRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFailureKind=ruleFailureKind();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFailureKind.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFailureKind"


    // $ANTLR start "ruleFailureKind"
    // InternalTurn.g:3444:1: ruleFailureKind returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'abort' | kw= 'failure' ) ;
    public final AntlrDatatypeRuleToken ruleFailureKind() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:3450:2: ( (kw= 'abort' | kw= 'failure' ) )
            // InternalTurn.g:3451:2: (kw= 'abort' | kw= 'failure' )
            {
            // InternalTurn.g:3451:2: (kw= 'abort' | kw= 'failure' )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==64) ) {
                alt63=1;
            }
            else if ( (LA63_0==65) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalTurn.g:3452:3: kw= 'abort'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFailureKindAccess().getAbortKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:3458:3: kw= 'failure'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFailureKindAccess().getFailureKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFailureKind"


    // $ANTLR start "entryRulePathBody"
    // InternalTurn.g:3467:1: entryRulePathBody returns [EObject current=null] : iv_rulePathBody= rulePathBody EOF ;
    public final EObject entryRulePathBody() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathBody = null;


        try {
            // InternalTurn.g:3467:49: (iv_rulePathBody= rulePathBody EOF )
            // InternalTurn.g:3468:2: iv_rulePathBody= rulePathBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathBody=rulePathBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathBody"


    // $ANTLR start "rulePathBody"
    // InternalTurn.g:3474:1: rulePathBody returns [EObject current=null] : this_PathWithRegularEnd_0= rulePathWithRegularEnd ;
    public final EObject rulePathBody() throws RecognitionException {
        EObject current = null;

        EObject this_PathWithRegularEnd_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3480:2: (this_PathWithRegularEnd_0= rulePathWithRegularEnd )
            // InternalTurn.g:3481:2: this_PathWithRegularEnd_0= rulePathWithRegularEnd
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getPathBodyAccess().getPathWithRegularEndParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_PathWithRegularEnd_0=rulePathWithRegularEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_PathWithRegularEnd_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathBody"


    // $ANTLR start "entryRulePathWithRegularEnd"
    // InternalTurn.g:3492:1: entryRulePathWithRegularEnd returns [EObject current=null] : iv_rulePathWithRegularEnd= rulePathWithRegularEnd EOF ;
    public final EObject entryRulePathWithRegularEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathWithRegularEnd = null;


        try {
            // InternalTurn.g:3492:59: (iv_rulePathWithRegularEnd= rulePathWithRegularEnd EOF )
            // InternalTurn.g:3493:2: iv_rulePathWithRegularEnd= rulePathWithRegularEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathWithRegularEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathWithRegularEnd=rulePathWithRegularEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathWithRegularEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathWithRegularEnd"


    // $ANTLR start "rulePathWithRegularEnd"
    // InternalTurn.g:3499:1: rulePathWithRegularEnd returns [EObject current=null] : (this_PathWithReferencedEnd_0= rulePathWithReferencedEnd ( (lv_pathEnd_1_0= ruleRegularEnd ) )? ) ;
    public final EObject rulePathWithRegularEnd() throws RecognitionException {
        EObject current = null;

        EObject this_PathWithReferencedEnd_0 = null;

        EObject lv_pathEnd_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3505:2: ( (this_PathWithReferencedEnd_0= rulePathWithReferencedEnd ( (lv_pathEnd_1_0= ruleRegularEnd ) )? ) )
            // InternalTurn.g:3506:2: (this_PathWithReferencedEnd_0= rulePathWithReferencedEnd ( (lv_pathEnd_1_0= ruleRegularEnd ) )? )
            {
            // InternalTurn.g:3506:2: (this_PathWithReferencedEnd_0= rulePathWithReferencedEnd ( (lv_pathEnd_1_0= ruleRegularEnd ) )? )
            // InternalTurn.g:3507:3: this_PathWithReferencedEnd_0= rulePathWithReferencedEnd ( (lv_pathEnd_1_0= ruleRegularEnd ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPathWithRegularEndAccess().getPathWithReferencedEndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_PathWithReferencedEnd_0=rulePathWithReferencedEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PathWithReferencedEnd_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:3515:3: ( (lv_pathEnd_1_0= ruleRegularEnd ) )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==79||LA64_0==81||LA64_0==83||LA64_0==85||(LA64_0>=92 && LA64_0<=93)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalTurn.g:3516:4: (lv_pathEnd_1_0= ruleRegularEnd )
                    {
                    // InternalTurn.g:3516:4: (lv_pathEnd_1_0= ruleRegularEnd )
                    // InternalTurn.g:3517:5: lv_pathEnd_1_0= ruleRegularEnd
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPathWithRegularEndAccess().getPathEndRegularEndParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_pathEnd_1_0=ruleRegularEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPathWithRegularEndRule());
                      					}
                      					set(
                      						current,
                      						"pathEnd",
                      						lv_pathEnd_1_0,
                      						"org.xtext.project.turn.Turn.RegularEnd");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathWithRegularEnd"


    // $ANTLR start "entryRulePathWithReferencedEnd"
    // InternalTurn.g:3538:1: entryRulePathWithReferencedEnd returns [EObject current=null] : iv_rulePathWithReferencedEnd= rulePathWithReferencedEnd EOF ;
    public final EObject entryRulePathWithReferencedEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathWithReferencedEnd = null;


        try {
            // InternalTurn.g:3538:62: (iv_rulePathWithReferencedEnd= rulePathWithReferencedEnd EOF )
            // InternalTurn.g:3539:2: iv_rulePathWithReferencedEnd= rulePathWithReferencedEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathWithReferencedEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathWithReferencedEnd=rulePathWithReferencedEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathWithReferencedEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathWithReferencedEnd"


    // $ANTLR start "rulePathWithReferencedEnd"
    // InternalTurn.g:3545:1: rulePathWithReferencedEnd returns [EObject current=null] : (this_PathWithReferencedStub_0= rulePathWithReferencedStub ( ( (otherlv_1= RULE_ID ) )? otherlv_2= ';' )? ) ;
    public final EObject rulePathWithReferencedEnd() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject this_PathWithReferencedStub_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3551:2: ( (this_PathWithReferencedStub_0= rulePathWithReferencedStub ( ( (otherlv_1= RULE_ID ) )? otherlv_2= ';' )? ) )
            // InternalTurn.g:3552:2: (this_PathWithReferencedStub_0= rulePathWithReferencedStub ( ( (otherlv_1= RULE_ID ) )? otherlv_2= ';' )? )
            {
            // InternalTurn.g:3552:2: (this_PathWithReferencedStub_0= rulePathWithReferencedStub ( ( (otherlv_1= RULE_ID ) )? otherlv_2= ';' )? )
            // InternalTurn.g:3553:3: this_PathWithReferencedStub_0= rulePathWithReferencedStub ( ( (otherlv_1= RULE_ID ) )? otherlv_2= ';' )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPathWithReferencedEndAccess().getPathWithReferencedStubParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_70);
            this_PathWithReferencedStub_0=rulePathWithReferencedStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PathWithReferencedStub_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:3561:3: ( ( (otherlv_1= RULE_ID ) )? otherlv_2= ';' )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ID) ) {
                int LA66_1 = input.LA(2);

                if ( (LA66_1==66) ) {
                    alt66=1;
                }
            }
            else if ( (LA66_0==66) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalTurn.g:3562:4: ( (otherlv_1= RULE_ID ) )? otherlv_2= ';'
                    {
                    // InternalTurn.g:3562:4: ( (otherlv_1= RULE_ID ) )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==RULE_ID) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalTurn.g:3563:5: (otherlv_1= RULE_ID )
                            {
                            // InternalTurn.g:3563:5: (otherlv_1= RULE_ID )
                            // InternalTurn.g:3564:6: otherlv_1= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getPathWithReferencedEndRule());
                              						}
                              					
                            }
                            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getPathWithReferencedEndAccess().getReferencedEndReferencedEndCrossReference_1_0_0());
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPathWithReferencedEndAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathWithReferencedEnd"


    // $ANTLR start "entryRulePathWithReferencedStub"
    // InternalTurn.g:3584:1: entryRulePathWithReferencedStub returns [EObject current=null] : iv_rulePathWithReferencedStub= rulePathWithReferencedStub EOF ;
    public final EObject entryRulePathWithReferencedStub() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathWithReferencedStub = null;


        try {
            // InternalTurn.g:3584:63: (iv_rulePathWithReferencedStub= rulePathWithReferencedStub EOF )
            // InternalTurn.g:3585:2: iv_rulePathWithReferencedStub= rulePathWithReferencedStub EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathWithReferencedStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathWithReferencedStub=rulePathWithReferencedStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathWithReferencedStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathWithReferencedStub"


    // $ANTLR start "rulePathWithReferencedStub"
    // InternalTurn.g:3591:1: rulePathWithReferencedStub returns [EObject current=null] : (this_PathBodyNodes_0= rulePathBodyNodes (otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';' )? ) ;
    public final EObject rulePathWithReferencedStub() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject this_PathBodyNodes_0 = null;

        AntlrDatatypeRuleToken lv_index_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3597:2: ( (this_PathBodyNodes_0= rulePathBodyNodes (otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';' )? ) )
            // InternalTurn.g:3598:2: (this_PathBodyNodes_0= rulePathBodyNodes (otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';' )? )
            {
            // InternalTurn.g:3598:2: (this_PathBodyNodes_0= rulePathBodyNodes (otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';' )? )
            // InternalTurn.g:3599:3: this_PathBodyNodes_0= rulePathBodyNodes (otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';' )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPathWithReferencedStubAccess().getPathBodyNodesParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_72);
            this_PathBodyNodes_0=rulePathBodyNodes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PathBodyNodes_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:3607:3: (otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';' )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==67) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalTurn.g:3608:4: otherlv_1= 'in' ( ( ruleQualifiedName ) ) ( (lv_index_3_0= rulePositiveInteger ) ) otherlv_4= ';'
                    {
                    otherlv_1=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPathWithReferencedStubAccess().getInKeyword_1_0());
                      			
                    }
                    // InternalTurn.g:3612:4: ( ( ruleQualifiedName ) )
                    // InternalTurn.g:3613:5: ( ruleQualifiedName )
                    {
                    // InternalTurn.g:3613:5: ( ruleQualifiedName )
                    // InternalTurn.g:3614:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPathWithReferencedStubRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubStubCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:3628:4: ( (lv_index_3_0= rulePositiveInteger ) )
                    // InternalTurn.g:3629:5: (lv_index_3_0= rulePositiveInteger )
                    {
                    // InternalTurn.g:3629:5: (lv_index_3_0= rulePositiveInteger )
                    // InternalTurn.g:3630:6: lv_index_3_0= rulePositiveInteger
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPathWithReferencedStubAccess().getIndexPositiveIntegerParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    lv_index_3_0=rulePositiveInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPathWithReferencedStubRule());
                      						}
                      						set(
                      							current,
                      							"index",
                      							lv_index_3_0,
                      							"org.xtext.project.turn.Turn.PositiveInteger");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPathWithReferencedStubAccess().getSemicolonKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathWithReferencedStub"


    // $ANTLR start "entryRulePathBodyNodes"
    // InternalTurn.g:3656:1: entryRulePathBodyNodes returns [EObject current=null] : iv_rulePathBodyNodes= rulePathBodyNodes EOF ;
    public final EObject entryRulePathBodyNodes() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathBodyNodes = null;


        try {
            // InternalTurn.g:3656:54: (iv_rulePathBodyNodes= rulePathBodyNodes EOF )
            // InternalTurn.g:3657:2: iv_rulePathBodyNodes= rulePathBodyNodes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathBodyNodesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathBodyNodes=rulePathBodyNodes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathBodyNodes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathBodyNodes"


    // $ANTLR start "rulePathBodyNodes"
    // InternalTurn.g:3663:1: rulePathBodyNodes returns [EObject current=null] : ( () ruleArrow ( ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->' )* ) ;
    public final EObject rulePathBodyNodes() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_pathNodes_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3669:2: ( ( () ruleArrow ( ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->' )* ) )
            // InternalTurn.g:3670:2: ( () ruleArrow ( ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->' )* )
            {
            // InternalTurn.g:3670:2: ( () ruleArrow ( ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->' )* )
            // InternalTurn.g:3671:3: () ruleArrow ( ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->' )*
            {
            // InternalTurn.g:3671:3: ()
            // InternalTurn.g:3672:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPathBodyNodesAccess().getPathBodyNodesAction_0(),
              					current);
              			
            }

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPathBodyNodesAccess().getArrowParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_73);
            ruleArrow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:3685:3: ( ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->' )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=69 && LA68_0<=75)||(LA68_0>=77 && LA68_0<=78)||(LA68_0>=174 && LA68_0<=175)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalTurn.g:3686:4: ( (lv_pathNodes_2_0= rulePathBodyNode ) ) otherlv_3= '->'
            	    {
            	    // InternalTurn.g:3686:4: ( (lv_pathNodes_2_0= rulePathBodyNode ) )
            	    // InternalTurn.g:3687:5: (lv_pathNodes_2_0= rulePathBodyNode )
            	    {
            	    // InternalTurn.g:3687:5: (lv_pathNodes_2_0= rulePathBodyNode )
            	    // InternalTurn.g:3688:6: lv_pathNodes_2_0= rulePathBodyNode
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPathBodyNodesAccess().getPathNodesPathBodyNodeParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_pathNodes_2_0=rulePathBodyNode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPathBodyNodesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"pathNodes",
            	      							lv_pathNodes_2_0,
            	      							"org.xtext.project.turn.Turn.PathBodyNode");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,68,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getPathBodyNodesAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathBodyNodes"


    // $ANTLR start "entryRuleArrow"
    // InternalTurn.g:3714:1: entryRuleArrow returns [String current=null] : iv_ruleArrow= ruleArrow EOF ;
    public final String entryRuleArrow() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrow = null;


        try {
            // InternalTurn.g:3714:45: (iv_ruleArrow= ruleArrow EOF )
            // InternalTurn.g:3715:2: iv_ruleArrow= ruleArrow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrow=ruleArrow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrow.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrow"


    // $ANTLR start "ruleArrow"
    // InternalTurn.g:3721:1: ruleArrow returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '->' ;
    public final AntlrDatatypeRuleToken ruleArrow() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:3727:2: (kw= '->' )
            // InternalTurn.g:3728:2: kw= '->'
            {
            kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrow"


    // $ANTLR start "entryRulePathBodyNode"
    // InternalTurn.g:3736:1: entryRulePathBodyNode returns [EObject current=null] : iv_rulePathBodyNode= rulePathBodyNode EOF ;
    public final EObject entryRulePathBodyNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathBodyNode = null;


        try {
            // InternalTurn.g:3736:53: (iv_rulePathBodyNode= rulePathBodyNode EOF )
            // InternalTurn.g:3737:2: iv_rulePathBodyNode= rulePathBodyNode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathBodyNodeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathBodyNode=rulePathBodyNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathBodyNode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathBodyNode"


    // $ANTLR start "rulePathBodyNode"
    // InternalTurn.g:3743:1: rulePathBodyNode returns [EObject current=null] : (this_AndJoin_0= ruleAndJoin | this_RespRef_1= ruleRespRef | this_OrJoin_2= ruleOrJoin | this_WaitingPlace_3= ruleWaitingPlace | this_FailurePoint_4= ruleFailurePoint | this_Timer_5= ruleTimer | this_Connect_6= ruleConnect ) ;
    public final EObject rulePathBodyNode() throws RecognitionException {
        EObject current = null;

        EObject this_AndJoin_0 = null;

        EObject this_RespRef_1 = null;

        EObject this_OrJoin_2 = null;

        EObject this_WaitingPlace_3 = null;

        EObject this_FailurePoint_4 = null;

        EObject this_Timer_5 = null;

        EObject this_Connect_6 = null;



        	enterRule();

        try {
            // InternalTurn.g:3749:2: ( (this_AndJoin_0= ruleAndJoin | this_RespRef_1= ruleRespRef | this_OrJoin_2= ruleOrJoin | this_WaitingPlace_3= ruleWaitingPlace | this_FailurePoint_4= ruleFailurePoint | this_Timer_5= ruleTimer | this_Connect_6= ruleConnect ) )
            // InternalTurn.g:3750:2: (this_AndJoin_0= ruleAndJoin | this_RespRef_1= ruleRespRef | this_OrJoin_2= ruleOrJoin | this_WaitingPlace_3= ruleWaitingPlace | this_FailurePoint_4= ruleFailurePoint | this_Timer_5= ruleTimer | this_Connect_6= ruleConnect )
            {
            // InternalTurn.g:3750:2: (this_AndJoin_0= ruleAndJoin | this_RespRef_1= ruleRespRef | this_OrJoin_2= ruleOrJoin | this_WaitingPlace_3= ruleWaitingPlace | this_FailurePoint_4= ruleFailurePoint | this_Timer_5= ruleTimer | this_Connect_6= ruleConnect )
            int alt69=7;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalTurn.g:3751:3: this_AndJoin_0= ruleAndJoin
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getAndJoinParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AndJoin_0=ruleAndJoin();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AndJoin_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:3760:3: this_RespRef_1= ruleRespRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getRespRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RespRef_1=ruleRespRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RespRef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:3769:3: this_OrJoin_2= ruleOrJoin
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getOrJoinParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrJoin_2=ruleOrJoin();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrJoin_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:3778:3: this_WaitingPlace_3= ruleWaitingPlace
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getWaitingPlaceParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_WaitingPlace_3=ruleWaitingPlace();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WaitingPlace_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalTurn.g:3787:3: this_FailurePoint_4= ruleFailurePoint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getFailurePointParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FailurePoint_4=ruleFailurePoint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FailurePoint_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalTurn.g:3796:3: this_Timer_5= ruleTimer
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getTimerParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Timer_5=ruleTimer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Timer_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalTurn.g:3805:3: this_Connect_6= ruleConnect
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathBodyNodeAccess().getConnectParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Connect_6=ruleConnect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Connect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathBodyNode"


    // $ANTLR start "entryRuleRegularEnd"
    // InternalTurn.g:3817:1: entryRuleRegularEnd returns [EObject current=null] : iv_ruleRegularEnd= ruleRegularEnd EOF ;
    public final EObject entryRuleRegularEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegularEnd = null;


        try {
            // InternalTurn.g:3817:51: (iv_ruleRegularEnd= ruleRegularEnd EOF )
            // InternalTurn.g:3818:2: iv_ruleRegularEnd= ruleRegularEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegularEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegularEnd=ruleRegularEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegularEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegularEnd"


    // $ANTLR start "ruleRegularEnd"
    // InternalTurn.g:3824:1: ruleRegularEnd returns [EObject current=null] : (this_EndpointWithConnect_0= ruleEndpointWithConnect | this_AndFork_1= ruleAndFork | this_OrFork_2= ruleOrFork | this_Stub_3= ruleStub ) ;
    public final EObject ruleRegularEnd() throws RecognitionException {
        EObject current = null;

        EObject this_EndpointWithConnect_0 = null;

        EObject this_AndFork_1 = null;

        EObject this_OrFork_2 = null;

        EObject this_Stub_3 = null;



        	enterRule();

        try {
            // InternalTurn.g:3830:2: ( (this_EndpointWithConnect_0= ruleEndpointWithConnect | this_AndFork_1= ruleAndFork | this_OrFork_2= ruleOrFork | this_Stub_3= ruleStub ) )
            // InternalTurn.g:3831:2: (this_EndpointWithConnect_0= ruleEndpointWithConnect | this_AndFork_1= ruleAndFork | this_OrFork_2= ruleOrFork | this_Stub_3= ruleStub )
            {
            // InternalTurn.g:3831:2: (this_EndpointWithConnect_0= ruleEndpointWithConnect | this_AndFork_1= ruleAndFork | this_OrFork_2= ruleOrFork | this_Stub_3= ruleStub )
            int alt70=4;
            switch ( input.LA(1) ) {
            case 79:
                {
                alt70=1;
                }
                break;
            case 83:
                {
                alt70=2;
                }
                break;
            case 81:
                {
                alt70=3;
                }
                break;
            case 85:
            case 92:
            case 93:
                {
                alt70=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalTurn.g:3832:3: this_EndpointWithConnect_0= ruleEndpointWithConnect
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegularEndAccess().getEndpointWithConnectParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EndpointWithConnect_0=ruleEndpointWithConnect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EndpointWithConnect_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:3841:3: this_AndFork_1= ruleAndFork
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegularEndAccess().getAndForkParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AndFork_1=ruleAndFork();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AndFork_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:3850:3: this_OrFork_2= ruleOrFork
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegularEndAccess().getOrForkParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrFork_2=ruleOrFork();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrFork_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:3859:3: this_Stub_3= ruleStub
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegularEndAccess().getStubParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Stub_3=ruleStub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Stub_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegularEnd"


    // $ANTLR start "entryRuleEndpointWithConnect"
    // InternalTurn.g:3871:1: entryRuleEndpointWithConnect returns [EObject current=null] : iv_ruleEndpointWithConnect= ruleEndpointWithConnect EOF ;
    public final EObject entryRuleEndpointWithConnect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEndpointWithConnect = null;


        try {
            // InternalTurn.g:3871:60: (iv_ruleEndpointWithConnect= ruleEndpointWithConnect EOF )
            // InternalTurn.g:3872:2: iv_ruleEndpointWithConnect= ruleEndpointWithConnect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEndpointWithConnectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEndpointWithConnect=ruleEndpointWithConnect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEndpointWithConnect; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEndpointWithConnect"


    // $ANTLR start "ruleEndpointWithConnect"
    // InternalTurn.g:3878:1: ruleEndpointWithConnect returns [EObject current=null] : ( ( (lv_regularEnd_0_0= ruleEndPoint ) ) (otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) ) )? ) ;
    public final EObject ruleEndpointWithConnect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_regularEnd_0_0 = null;

        EObject lv_connect_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3884:2: ( ( ( (lv_regularEnd_0_0= ruleEndPoint ) ) (otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) ) )? ) )
            // InternalTurn.g:3885:2: ( ( (lv_regularEnd_0_0= ruleEndPoint ) ) (otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) ) )? )
            {
            // InternalTurn.g:3885:2: ( ( (lv_regularEnd_0_0= ruleEndPoint ) ) (otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) ) )? )
            // InternalTurn.g:3886:3: ( (lv_regularEnd_0_0= ruleEndPoint ) ) (otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) ) )?
            {
            // InternalTurn.g:3886:3: ( (lv_regularEnd_0_0= ruleEndPoint ) )
            // InternalTurn.g:3887:4: (lv_regularEnd_0_0= ruleEndPoint )
            {
            // InternalTurn.g:3887:4: (lv_regularEnd_0_0= ruleEndPoint )
            // InternalTurn.g:3888:5: lv_regularEnd_0_0= ruleEndPoint
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEndpointWithConnectAccess().getRegularEndEndPointParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_74);
            lv_regularEnd_0_0=ruleEndPoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEndpointWithConnectRule());
              					}
              					set(
              						current,
              						"regularEnd",
              						lv_regularEnd_0_0,
              						"org.xtext.project.turn.Turn.EndPoint");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:3905:3: (otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==68) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalTurn.g:3906:4: otherlv_1= '->' ( (lv_connect_2_0= ruleConnect ) )
                    {
                    otherlv_1=(Token)match(input,68,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEndpointWithConnectAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
                      			
                    }
                    // InternalTurn.g:3910:4: ( (lv_connect_2_0= ruleConnect ) )
                    // InternalTurn.g:3911:5: (lv_connect_2_0= ruleConnect )
                    {
                    // InternalTurn.g:3911:5: (lv_connect_2_0= ruleConnect )
                    // InternalTurn.g:3912:6: lv_connect_2_0= ruleConnect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEndpointWithConnectAccess().getConnectConnectParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_connect_2_0=ruleConnect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEndpointWithConnectRule());
                      						}
                      						set(
                      							current,
                      							"connect",
                      							lv_connect_2_0,
                      							"org.xtext.project.turn.Turn.Connect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEndpointWithConnect"


    // $ANTLR start "entryRuleRespRef"
    // InternalTurn.g:3934:1: entryRuleRespRef returns [EObject current=null] : iv_ruleRespRef= ruleRespRef EOF ;
    public final EObject entryRuleRespRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRespRef = null;


        try {
            // InternalTurn.g:3934:48: (iv_ruleRespRef= ruleRespRef EOF )
            // InternalTurn.g:3935:2: iv_ruleRespRef= ruleRespRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRespRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRespRef=ruleRespRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRespRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRespRef"


    // $ANTLR start "ruleRespRef"
    // InternalTurn.g:3941:1: ruleRespRef returns [EObject current=null] : (otherlv_0= 'X' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) ) ;
    public final EObject ruleRespRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:3947:2: ( (otherlv_0= 'X' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) ) )
            // InternalTurn.g:3948:2: (otherlv_0= 'X' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )
            {
            // InternalTurn.g:3948:2: (otherlv_0= 'X' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )
            // InternalTurn.g:3949:3: otherlv_0= 'X' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) )
            {
            otherlv_0=(Token)match(input,69,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRespRefAccess().getXKeyword_0());
              		
            }
            // InternalTurn.g:3953:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalTurn.g:3954:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalTurn.g:3954:4: (lv_name_1_0= ruleQualifiedName )
            // InternalTurn.g:3955:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRespRefAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_76);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRespRefRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:3972:3: ( (lv_longName_2_0= ruleLongName ) )
            // InternalTurn.g:3973:4: (lv_longName_2_0= ruleLongName )
            {
            // InternalTurn.g:3973:4: (lv_longName_2_0= ruleLongName )
            // InternalTurn.g:3974:5: lv_longName_2_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRespRefAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_longName_2_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRespRefRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_2_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRespRef"


    // $ANTLR start "entryRuleOrJoin"
    // InternalTurn.g:3995:1: entryRuleOrJoin returns [EObject current=null] : iv_ruleOrJoin= ruleOrJoin EOF ;
    public final EObject entryRuleOrJoin() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrJoin = null;


        try {
            // InternalTurn.g:3995:47: (iv_ruleOrJoin= ruleOrJoin EOF )
            // InternalTurn.g:3996:2: iv_ruleOrJoin= ruleOrJoin EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrJoin=ruleOrJoin();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrJoin; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrJoin"


    // $ANTLR start "ruleOrJoin"
    // InternalTurn.g:4002:1: ruleOrJoin returns [EObject current=null] : ( () (otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) ) ) ( (lv_longName_3_0= ruleLongName ) ) ) ;
    public final EObject ruleOrJoin() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_longName_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4008:2: ( ( () (otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) ) ) ( (lv_longName_3_0= ruleLongName ) ) ) )
            // InternalTurn.g:4009:2: ( () (otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) ) ) ( (lv_longName_3_0= ruleLongName ) ) )
            {
            // InternalTurn.g:4009:2: ( () (otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) ) ) ( (lv_longName_3_0= ruleLongName ) ) )
            // InternalTurn.g:4010:3: () (otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) ) ) ( (lv_longName_3_0= ruleLongName ) )
            {
            // InternalTurn.g:4010:3: ()
            // InternalTurn.g:4011:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getOrJoinAccess().getOrJoinAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:4017:3: (otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) ) )
            // InternalTurn.g:4018:4: otherlv_1= 'join' ( (lv_name_2_0= ruleQualifiedName ) )
            {
            otherlv_1=(Token)match(input,70,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOrJoinAccess().getJoinKeyword_1_0());
              			
            }
            // InternalTurn.g:4022:4: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalTurn.g:4023:5: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalTurn.g:4023:5: (lv_name_2_0= ruleQualifiedName )
            // InternalTurn.g:4024:6: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getOrJoinAccess().getNameQualifiedNameParserRuleCall_1_1_0());
              					
            }
            pushFollow(FOLLOW_76);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getOrJoinRule());
              						}
              						set(
              							current,
              							"name",
              							lv_name_2_0,
              							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalTurn.g:4042:3: ( (lv_longName_3_0= ruleLongName ) )
            // InternalTurn.g:4043:4: (lv_longName_3_0= ruleLongName )
            {
            // InternalTurn.g:4043:4: (lv_longName_3_0= ruleLongName )
            // InternalTurn.g:4044:5: lv_longName_3_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOrJoinAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_longName_3_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOrJoinRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_3_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrJoin"


    // $ANTLR start "entryRuleAndJoin"
    // InternalTurn.g:4065:1: entryRuleAndJoin returns [EObject current=null] : iv_ruleAndJoin= ruleAndJoin EOF ;
    public final EObject entryRuleAndJoin() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndJoin = null;


        try {
            // InternalTurn.g:4065:48: (iv_ruleAndJoin= ruleAndJoin EOF )
            // InternalTurn.g:4066:2: iv_ruleAndJoin= ruleAndJoin EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndJoin=ruleAndJoin();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndJoin; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndJoin"


    // $ANTLR start "ruleAndJoin"
    // InternalTurn.g:4072:1: ruleAndJoin returns [EObject current=null] : ( (otherlv_0= 'synch' | otherlv_1= 'sync' | otherlv_2= '|' ) ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) ) ;
    public final EObject ruleAndJoin() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_longName_4_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4078:2: ( ( (otherlv_0= 'synch' | otherlv_1= 'sync' | otherlv_2= '|' ) ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) ) )
            // InternalTurn.g:4079:2: ( (otherlv_0= 'synch' | otherlv_1= 'sync' | otherlv_2= '|' ) ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )
            {
            // InternalTurn.g:4079:2: ( (otherlv_0= 'synch' | otherlv_1= 'sync' | otherlv_2= '|' ) ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )
            // InternalTurn.g:4080:3: (otherlv_0= 'synch' | otherlv_1= 'sync' | otherlv_2= '|' ) ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) )
            {
            // InternalTurn.g:4080:3: (otherlv_0= 'synch' | otherlv_1= 'sync' | otherlv_2= '|' )
            int alt72=3;
            switch ( input.LA(1) ) {
            case 71:
                {
                alt72=1;
                }
                break;
            case 72:
                {
                alt72=2;
                }
                break;
            case 73:
                {
                alt72=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalTurn.g:4081:4: otherlv_0= 'synch'
                    {
                    otherlv_0=(Token)match(input,71,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAndJoinAccess().getSynchKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:4086:4: otherlv_1= 'sync'
                    {
                    otherlv_1=(Token)match(input,72,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAndJoinAccess().getSyncKeyword_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:4091:4: otherlv_2= '|'
                    {
                    otherlv_2=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAndJoinAccess().getVerticalLineKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:4096:3: ( (lv_name_3_0= ruleQualifiedName ) )
            // InternalTurn.g:4097:4: (lv_name_3_0= ruleQualifiedName )
            {
            // InternalTurn.g:4097:4: (lv_name_3_0= ruleQualifiedName )
            // InternalTurn.g:4098:5: lv_name_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAndJoinAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_76);
            lv_name_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAndJoinRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:4115:3: ( (lv_longName_4_0= ruleLongName ) )
            // InternalTurn.g:4116:4: (lv_longName_4_0= ruleLongName )
            {
            // InternalTurn.g:4116:4: (lv_longName_4_0= ruleLongName )
            // InternalTurn.g:4117:5: lv_longName_4_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAndJoinAccess().getLongNameLongNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_longName_4_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAndJoinRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_4_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndJoin"


    // $ANTLR start "entryRuleWaitingPlace"
    // InternalTurn.g:4138:1: entryRuleWaitingPlace returns [EObject current=null] : iv_ruleWaitingPlace= ruleWaitingPlace EOF ;
    public final EObject entryRuleWaitingPlace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWaitingPlace = null;


        try {
            // InternalTurn.g:4138:53: (iv_ruleWaitingPlace= ruleWaitingPlace EOF )
            // InternalTurn.g:4139:2: iv_ruleWaitingPlace= ruleWaitingPlace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWaitingPlaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWaitingPlace=ruleWaitingPlace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWaitingPlace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWaitingPlace"


    // $ANTLR start "ruleWaitingPlace"
    // InternalTurn.g:4145:1: ruleWaitingPlace returns [EObject current=null] : ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'wait' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? ( (lv_condition_5_0= ruleCondition ) )? ) ;
    public final EObject ruleWaitingPlace() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_kind_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_longName_4_0 = null;

        EObject lv_condition_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4151:2: ( ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'wait' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? ( (lv_condition_5_0= ruleCondition ) )? ) )
            // InternalTurn.g:4152:2: ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'wait' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? ( (lv_condition_5_0= ruleCondition ) )? )
            {
            // InternalTurn.g:4152:2: ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'wait' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? ( (lv_condition_5_0= ruleCondition ) )? )
            // InternalTurn.g:4153:3: () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'wait' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? ( (lv_condition_5_0= ruleCondition ) )?
            {
            // InternalTurn.g:4153:3: ()
            // InternalTurn.g:4154:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWaitingPlaceAccess().getWaitingPlaceAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:4160:3: ( (lv_kind_1_0= ruleWAITKIND ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=174 && LA73_0<=175)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalTurn.g:4161:4: (lv_kind_1_0= ruleWAITKIND )
                    {
                    // InternalTurn.g:4161:4: (lv_kind_1_0= ruleWAITKIND )
                    // InternalTurn.g:4162:5: lv_kind_1_0= ruleWAITKIND
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWaitingPlaceAccess().getKindWAITKINDEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_77);
                    lv_kind_1_0=ruleWAITKIND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
                      					}
                      					set(
                      						current,
                      						"kind",
                      						lv_kind_1_0,
                      						"org.xtext.project.turn.Turn.WAITKIND");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,74,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getWaitingPlaceAccess().getWaitKeyword_2());
              		
            }
            // InternalTurn.g:4183:3: ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_ID) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalTurn.g:4184:4: ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) )
                    {
                    // InternalTurn.g:4184:4: ( (lv_name_3_0= ruleQualifiedName ) )
                    // InternalTurn.g:4185:5: (lv_name_3_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:4185:5: (lv_name_3_0= ruleQualifiedName )
                    // InternalTurn.g:4186:6: lv_name_3_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWaitingPlaceAccess().getNameQualifiedNameParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_63);
                    lv_name_3_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:4203:4: ( (lv_longName_4_0= ruleLongName ) )
                    // InternalTurn.g:4204:5: (lv_longName_4_0= ruleLongName )
                    {
                    // InternalTurn.g:4204:5: (lv_longName_4_0= ruleLongName )
                    // InternalTurn.g:4205:6: lv_longName_4_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWaitingPlaceAccess().getLongNameLongNameParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_longName_4_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_4_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:4223:3: ( (lv_condition_5_0= ruleCondition ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==27) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalTurn.g:4224:4: (lv_condition_5_0= ruleCondition )
                    {
                    // InternalTurn.g:4224:4: (lv_condition_5_0= ruleCondition )
                    // InternalTurn.g:4225:5: lv_condition_5_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWaitingPlaceAccess().getConditionConditionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_5_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWaitingPlaceRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_5_0,
                      						"org.xtext.project.turn.Turn.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWaitingPlace"


    // $ANTLR start "entryRuleTimer"
    // InternalTurn.g:4246:1: entryRuleTimer returns [EObject current=null] : iv_ruleTimer= ruleTimer EOF ;
    public final EObject entryRuleTimer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimer = null;


        try {
            // InternalTurn.g:4246:46: (iv_ruleTimer= ruleTimer EOF )
            // InternalTurn.g:4247:2: iv_ruleTimer= ruleTimer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTimer=ruleTimer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimer"


    // $ANTLR start "ruleTimer"
    // InternalTurn.g:4253:1: ruleTimer returns [EObject current=null] : ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'timer' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? (otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}' )? ( (lv_condition_10_0= ruleCondition ) )? ) ;
    public final EObject ruleTimer() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Enumerator lv_kind_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_longName_4_0 = null;

        EObject lv_timeoutCondition_7_0 = null;

        EObject lv_timeoutPath_8_0 = null;

        EObject lv_condition_10_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4259:2: ( ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'timer' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? (otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}' )? ( (lv_condition_10_0= ruleCondition ) )? ) )
            // InternalTurn.g:4260:2: ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'timer' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? (otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}' )? ( (lv_condition_10_0= ruleCondition ) )? )
            {
            // InternalTurn.g:4260:2: ( () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'timer' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? (otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}' )? ( (lv_condition_10_0= ruleCondition ) )? )
            // InternalTurn.g:4261:3: () ( (lv_kind_1_0= ruleWAITKIND ) )? otherlv_2= 'timer' ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )? (otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}' )? ( (lv_condition_10_0= ruleCondition ) )?
            {
            // InternalTurn.g:4261:3: ()
            // InternalTurn.g:4262:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTimerAccess().getTimerAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:4268:3: ( (lv_kind_1_0= ruleWAITKIND ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=174 && LA76_0<=175)) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalTurn.g:4269:4: (lv_kind_1_0= ruleWAITKIND )
                    {
                    // InternalTurn.g:4269:4: (lv_kind_1_0= ruleWAITKIND )
                    // InternalTurn.g:4270:5: lv_kind_1_0= ruleWAITKIND
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTimerAccess().getKindWAITKINDEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_78);
                    lv_kind_1_0=ruleWAITKIND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTimerRule());
                      					}
                      					set(
                      						current,
                      						"kind",
                      						lv_kind_1_0,
                      						"org.xtext.project.turn.Turn.WAITKIND");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,75,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTimerAccess().getTimerKeyword_2());
              		
            }
            // InternalTurn.g:4291:3: ( ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_ID) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalTurn.g:4292:4: ( (lv_name_3_0= ruleQualifiedName ) ) ( (lv_longName_4_0= ruleLongName ) )
                    {
                    // InternalTurn.g:4292:4: ( (lv_name_3_0= ruleQualifiedName ) )
                    // InternalTurn.g:4293:5: (lv_name_3_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:4293:5: (lv_name_3_0= ruleQualifiedName )
                    // InternalTurn.g:4294:6: lv_name_3_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimerAccess().getNameQualifiedNameParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_name_3_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimerRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:4311:4: ( (lv_longName_4_0= ruleLongName ) )
                    // InternalTurn.g:4312:5: (lv_longName_4_0= ruleLongName )
                    {
                    // InternalTurn.g:4312:5: (lv_longName_4_0= ruleLongName )
                    // InternalTurn.g:4313:6: lv_longName_4_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTimerAccess().getLongNameLongNameParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_longName_4_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTimerRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_4_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:4331:3: (otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}' )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==15) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalTurn.g:4332:4: otherlv_5= '{' (otherlv_6= 'timeout' )? ( (lv_timeoutCondition_7_0= ruleCondition ) )? ( (lv_timeoutPath_8_0= rulePathBody ) )? otherlv_9= '}'
                    {
                    otherlv_5=(Token)match(input,15,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTimerAccess().getLeftCurlyBracketKeyword_4_0());
                      			
                    }
                    // InternalTurn.g:4336:4: (otherlv_6= 'timeout' )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==76) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalTurn.g:4337:5: otherlv_6= 'timeout'
                            {
                            otherlv_6=(Token)match(input,76,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getTimerAccess().getTimeoutKeyword_4_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalTurn.g:4342:4: ( (lv_timeoutCondition_7_0= ruleCondition ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==27) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalTurn.g:4343:5: (lv_timeoutCondition_7_0= ruleCondition )
                            {
                            // InternalTurn.g:4343:5: (lv_timeoutCondition_7_0= ruleCondition )
                            // InternalTurn.g:4344:6: lv_timeoutCondition_7_0= ruleCondition
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimerAccess().getTimeoutConditionConditionParserRuleCall_4_2_0());
                              					
                            }
                            pushFollow(FOLLOW_84);
                            lv_timeoutCondition_7_0=ruleCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimerRule());
                              						}
                              						set(
                              							current,
                              							"timeoutCondition",
                              							lv_timeoutCondition_7_0,
                              							"org.xtext.project.turn.Turn.Condition");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalTurn.g:4361:4: ( (lv_timeoutPath_8_0= rulePathBody ) )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==68) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalTurn.g:4362:5: (lv_timeoutPath_8_0= rulePathBody )
                            {
                            // InternalTurn.g:4362:5: (lv_timeoutPath_8_0= rulePathBody )
                            // InternalTurn.g:4363:6: lv_timeoutPath_8_0= rulePathBody
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTimerAccess().getTimeoutPathPathBodyParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_timeoutPath_8_0=rulePathBody();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTimerRule());
                              						}
                              						set(
                              							current,
                              							"timeoutPath",
                              							lv_timeoutPath_8_0,
                              							"org.xtext.project.turn.Turn.PathBody");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,22,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getTimerAccess().getRightCurlyBracketKeyword_4_4());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:4385:3: ( (lv_condition_10_0= ruleCondition ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==27) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalTurn.g:4386:4: (lv_condition_10_0= ruleCondition )
                    {
                    // InternalTurn.g:4386:4: (lv_condition_10_0= ruleCondition )
                    // InternalTurn.g:4387:5: lv_condition_10_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTimerAccess().getConditionConditionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_10_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTimerRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_10_0,
                      						"org.xtext.project.turn.Turn.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimer"


    // $ANTLR start "entryRuleConnect"
    // InternalTurn.g:4408:1: entryRuleConnect returns [EObject current=null] : iv_ruleConnect= ruleConnect EOF ;
    public final EObject entryRuleConnect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConnect = null;


        try {
            // InternalTurn.g:4408:48: (iv_ruleConnect= ruleConnect EOF )
            // InternalTurn.g:4409:2: iv_ruleConnect= ruleConnect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnect=ruleConnect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnect; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConnect"


    // $ANTLR start "ruleConnect"
    // InternalTurn.g:4415:1: ruleConnect returns [EObject current=null] : (otherlv_0= 'trigger' ( ( ruleQualifiedName ) ) otherlv_2= ';' ) ;
    public final EObject ruleConnect() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalTurn.g:4421:2: ( (otherlv_0= 'trigger' ( ( ruleQualifiedName ) ) otherlv_2= ';' ) )
            // InternalTurn.g:4422:2: (otherlv_0= 'trigger' ( ( ruleQualifiedName ) ) otherlv_2= ';' )
            {
            // InternalTurn.g:4422:2: (otherlv_0= 'trigger' ( ( ruleQualifiedName ) ) otherlv_2= ';' )
            // InternalTurn.g:4423:3: otherlv_0= 'trigger' ( ( ruleQualifiedName ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,77,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConnectAccess().getTriggerKeyword_0());
              		
            }
            // InternalTurn.g:4427:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:4428:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:4428:4: ( ruleQualifiedName )
            // InternalTurn.g:4429:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConnectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConnectAccess().getConnectsToConnectElementCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_71);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConnectAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConnect"


    // $ANTLR start "entryRuleFailurePoint"
    // InternalTurn.g:4451:1: entryRuleFailurePoint returns [EObject current=null] : iv_ruleFailurePoint= ruleFailurePoint EOF ;
    public final EObject entryRuleFailurePoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFailurePoint = null;


        try {
            // InternalTurn.g:4451:53: (iv_ruleFailurePoint= ruleFailurePoint EOF )
            // InternalTurn.g:4452:2: iv_ruleFailurePoint= ruleFailurePoint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFailurePointRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFailurePoint=ruleFailurePoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFailurePoint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFailurePoint"


    // $ANTLR start "ruleFailurePoint"
    // InternalTurn.g:4458:1: ruleFailurePoint returns [EObject current=null] : ( () otherlv_1= 'fail' ( ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) )? ( ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) ) | ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) ) )? ) ;
    public final EObject ruleFailurePoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_longName_3_0 = null;

        EObject lv_condition_4_0 = null;

        EObject lv_failLabel_5_0 = null;

        EObject lv_failLabel_6_0 = null;

        EObject lv_condition_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4464:2: ( ( () otherlv_1= 'fail' ( ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) )? ( ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) ) | ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) ) )? ) )
            // InternalTurn.g:4465:2: ( () otherlv_1= 'fail' ( ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) )? ( ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) ) | ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) ) )? )
            {
            // InternalTurn.g:4465:2: ( () otherlv_1= 'fail' ( ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) )? ( ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) ) | ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) ) )? )
            // InternalTurn.g:4466:3: () otherlv_1= 'fail' ( ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) )? ( ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) ) | ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) ) )?
            {
            // InternalTurn.g:4466:3: ()
            // InternalTurn.g:4467:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFailurePointAccess().getFailurePointAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFailurePointAccess().getFailKeyword_1());
              		
            }
            // InternalTurn.g:4477:3: ( ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_ID) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalTurn.g:4478:4: ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) )
                    {
                    // InternalTurn.g:4478:4: ( (lv_name_2_0= ruleQualifiedName ) )
                    // InternalTurn.g:4479:5: (lv_name_2_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:4479:5: (lv_name_2_0= ruleQualifiedName )
                    // InternalTurn.g:4480:6: lv_name_2_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFailurePointAccess().getNameQualifiedNameParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_name_2_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFailurePointRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:4497:4: ( (lv_longName_3_0= ruleLongName ) )
                    // InternalTurn.g:4498:5: (lv_longName_3_0= ruleLongName )
                    {
                    // InternalTurn.g:4498:5: (lv_longName_3_0= ruleLongName )
                    // InternalTurn.g:4499:6: lv_longName_3_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFailurePointAccess().getLongNameLongNameParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_longName_3_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFailurePointRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_3_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:4517:3: ( ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) ) | ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) ) )?
            int alt84=3;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==27) ) {
                alt84=1;
            }
            else if ( (LA84_0==62) ) {
                alt84=2;
            }
            switch (alt84) {
                case 1 :
                    // InternalTurn.g:4518:4: ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) )
                    {
                    // InternalTurn.g:4518:4: ( ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) ) )
                    // InternalTurn.g:4519:5: ( (lv_condition_4_0= ruleCondition ) ) ( (lv_failLabel_5_0= ruleFailureLabel ) )
                    {
                    // InternalTurn.g:4519:5: ( (lv_condition_4_0= ruleCondition ) )
                    // InternalTurn.g:4520:6: (lv_condition_4_0= ruleCondition )
                    {
                    // InternalTurn.g:4520:6: (lv_condition_4_0= ruleCondition )
                    // InternalTurn.g:4521:7: lv_condition_4_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_3_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_67);
                    lv_condition_4_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFailurePointRule());
                      							}
                      							set(
                      								current,
                      								"condition",
                      								lv_condition_4_0,
                      								"org.xtext.project.turn.Turn.Condition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalTurn.g:4538:5: ( (lv_failLabel_5_0= ruleFailureLabel ) )
                    // InternalTurn.g:4539:6: (lv_failLabel_5_0= ruleFailureLabel )
                    {
                    // InternalTurn.g:4539:6: (lv_failLabel_5_0= ruleFailureLabel )
                    // InternalTurn.g:4540:7: lv_failLabel_5_0= ruleFailureLabel
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_failLabel_5_0=ruleFailureLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFailurePointRule());
                      							}
                      							set(
                      								current,
                      								"failLabel",
                      								lv_failLabel_5_0,
                      								"org.xtext.project.turn.Turn.FailureLabel");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:4559:4: ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) )
                    {
                    // InternalTurn.g:4559:4: ( ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) ) )
                    // InternalTurn.g:4560:5: ( (lv_failLabel_6_0= ruleFailureLabel ) ) ( (lv_condition_7_0= ruleCondition ) )
                    {
                    // InternalTurn.g:4560:5: ( (lv_failLabel_6_0= ruleFailureLabel ) )
                    // InternalTurn.g:4561:6: (lv_failLabel_6_0= ruleFailureLabel )
                    {
                    // InternalTurn.g:4561:6: (lv_failLabel_6_0= ruleFailureLabel )
                    // InternalTurn.g:4562:7: lv_failLabel_6_0= ruleFailureLabel
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_3_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_88);
                    lv_failLabel_6_0=ruleFailureLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFailurePointRule());
                      							}
                      							set(
                      								current,
                      								"failLabel",
                      								lv_failLabel_6_0,
                      								"org.xtext.project.turn.Turn.FailureLabel");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalTurn.g:4579:5: ( (lv_condition_7_0= ruleCondition ) )
                    // InternalTurn.g:4580:6: (lv_condition_7_0= ruleCondition )
                    {
                    // InternalTurn.g:4580:6: (lv_condition_7_0= ruleCondition )
                    // InternalTurn.g:4581:7: lv_condition_7_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_7_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFailurePointRule());
                      							}
                      							set(
                      								current,
                      								"condition",
                      								lv_condition_7_0,
                      								"org.xtext.project.turn.Turn.Condition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFailurePoint"


    // $ANTLR start "entryRuleEndPoint"
    // InternalTurn.g:4604:1: entryRuleEndPoint returns [EObject current=null] : iv_ruleEndPoint= ruleEndPoint EOF ;
    public final EObject entryRuleEndPoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEndPoint = null;


        try {
            // InternalTurn.g:4604:49: (iv_ruleEndPoint= ruleEndPoint EOF )
            // InternalTurn.g:4605:2: iv_ruleEndPoint= ruleEndPoint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEndPointRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEndPoint=ruleEndPoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEndPoint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEndPoint"


    // $ANTLR start "ruleEndPoint"
    // InternalTurn.g:4611:1: ruleEndPoint returns [EObject current=null] : (otherlv_0= 'end' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= '.' ) ;
    public final EObject ruleEndPoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_condition_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4617:2: ( (otherlv_0= 'end' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= '.' ) )
            // InternalTurn.g:4618:2: (otherlv_0= 'end' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= '.' )
            {
            // InternalTurn.g:4618:2: (otherlv_0= 'end' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= '.' )
            // InternalTurn.g:4619:3: otherlv_0= 'end' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? ( (lv_condition_3_0= ruleCondition ) )? otherlv_4= '.'
            {
            otherlv_0=(Token)match(input,79,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEndPointAccess().getEndKeyword_0());
              		
            }
            // InternalTurn.g:4623:3: ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_ID) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalTurn.g:4624:4: ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) )
                    {
                    // InternalTurn.g:4624:4: ( (lv_name_1_0= ruleQualifiedName ) )
                    // InternalTurn.g:4625:5: (lv_name_1_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:4625:5: (lv_name_1_0= ruleQualifiedName )
                    // InternalTurn.g:4626:6: lv_name_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEndPointAccess().getNameQualifiedNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_90);
                    lv_name_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEndPointRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:4643:4: ( (lv_longName_2_0= ruleLongName ) )
                    // InternalTurn.g:4644:5: (lv_longName_2_0= ruleLongName )
                    {
                    // InternalTurn.g:4644:5: (lv_longName_2_0= ruleLongName )
                    // InternalTurn.g:4645:6: lv_longName_2_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEndPointAccess().getLongNameLongNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_longName_2_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEndPointRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_2_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:4663:3: ( (lv_condition_3_0= ruleCondition ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==27) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalTurn.g:4664:4: (lv_condition_3_0= ruleCondition )
                    {
                    // InternalTurn.g:4664:4: (lv_condition_3_0= ruleCondition )
                    // InternalTurn.g:4665:5: lv_condition_3_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEndPointAccess().getConditionConditionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_92);
                    lv_condition_3_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEndPointRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_3_0,
                      						"org.xtext.project.turn.Turn.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEndPointAccess().getFullStopKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEndPoint"


    // $ANTLR start "entryRuleOrFork"
    // InternalTurn.g:4690:1: entryRuleOrFork returns [EObject current=null] : iv_ruleOrFork= ruleOrFork EOF ;
    public final EObject entryRuleOrFork() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrFork = null;


        try {
            // InternalTurn.g:4690:47: (iv_ruleOrFork= ruleOrFork EOF )
            // InternalTurn.g:4691:2: iv_ruleOrFork= ruleOrFork EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrForkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrFork=ruleOrFork();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrFork; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrFork"


    // $ANTLR start "ruleOrFork"
    // InternalTurn.g:4697:1: ruleOrFork returns [EObject current=null] : (otherlv_0= 'or' ( ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' ) | ( (lv_condition_6_0= ruleCondition ) ) ) ( (lv_connectingOrBody_7_0= rulePathBody ) )? ) ;
    public final EObject ruleOrFork() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_body_4_0 = null;

        EObject lv_condition_6_0 = null;

        EObject lv_connectingOrBody_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4703:2: ( (otherlv_0= 'or' ( ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' ) | ( (lv_condition_6_0= ruleCondition ) ) ) ( (lv_connectingOrBody_7_0= rulePathBody ) )? ) )
            // InternalTurn.g:4704:2: (otherlv_0= 'or' ( ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' ) | ( (lv_condition_6_0= ruleCondition ) ) ) ( (lv_connectingOrBody_7_0= rulePathBody ) )? )
            {
            // InternalTurn.g:4704:2: (otherlv_0= 'or' ( ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' ) | ( (lv_condition_6_0= ruleCondition ) ) ) ( (lv_connectingOrBody_7_0= rulePathBody ) )? )
            // InternalTurn.g:4705:3: otherlv_0= 'or' ( ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' ) | ( (lv_condition_6_0= ruleCondition ) ) ) ( (lv_connectingOrBody_7_0= rulePathBody ) )?
            {
            otherlv_0=(Token)match(input,81,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOrForkAccess().getOrKeyword_0());
              		
            }
            // InternalTurn.g:4709:3: ( ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' ) | ( (lv_condition_6_0= ruleCondition ) ) )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==RULE_ID||LA88_0==15) ) {
                alt88=1;
            }
            else if ( (LA88_0==27) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalTurn.g:4710:4: ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' )
                    {
                    // InternalTurn.g:4710:4: ( ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}' )
                    // InternalTurn.g:4711:5: ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' ( (lv_body_4_0= ruleOrBody ) ) otherlv_5= '}'
                    {
                    // InternalTurn.g:4711:5: ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==RULE_ID) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // InternalTurn.g:4712:6: ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) )
                            {
                            // InternalTurn.g:4712:6: ( (lv_name_1_0= ruleQualifiedName ) )
                            // InternalTurn.g:4713:7: (lv_name_1_0= ruleQualifiedName )
                            {
                            // InternalTurn.g:4713:7: (lv_name_1_0= ruleQualifiedName )
                            // InternalTurn.g:4714:8: lv_name_1_0= ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getOrForkAccess().getNameQualifiedNameParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_25);
                            lv_name_1_0=ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getOrForkRule());
                              								}
                              								set(
                              									current,
                              									"name",
                              									lv_name_1_0,
                              									"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalTurn.g:4731:6: ( (lv_longName_2_0= ruleLongName ) )
                            // InternalTurn.g:4732:7: (lv_longName_2_0= ruleLongName )
                            {
                            // InternalTurn.g:4732:7: (lv_longName_2_0= ruleLongName )
                            // InternalTurn.g:4733:8: lv_longName_2_0= ruleLongName
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getOrForkAccess().getLongNameLongNameParserRuleCall_1_0_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_26);
                            lv_longName_2_0=ruleLongName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getOrForkRule());
                              								}
                              								set(
                              									current,
                              									"longName",
                              									lv_longName_2_0,
                              									"org.xtext.project.turn.Turn.LongName");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,15,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getOrForkAccess().getLeftCurlyBracketKeyword_1_0_1());
                      				
                    }
                    // InternalTurn.g:4755:5: ( (lv_body_4_0= ruleOrBody ) )
                    // InternalTurn.g:4756:6: (lv_body_4_0= ruleOrBody )
                    {
                    // InternalTurn.g:4756:6: (lv_body_4_0= ruleOrBody )
                    // InternalTurn.g:4757:7: lv_body_4_0= ruleOrBody
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getOrForkAccess().getBodyOrBodyParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_12);
                    lv_body_4_0=ruleOrBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getOrForkRule());
                      							}
                      							set(
                      								current,
                      								"body",
                      								lv_body_4_0,
                      								"org.xtext.project.turn.Turn.OrBody");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,22,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getOrForkAccess().getRightCurlyBracketKeyword_1_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:4780:4: ( (lv_condition_6_0= ruleCondition ) )
                    {
                    // InternalTurn.g:4780:4: ( (lv_condition_6_0= ruleCondition ) )
                    // InternalTurn.g:4781:5: (lv_condition_6_0= ruleCondition )
                    {
                    // InternalTurn.g:4781:5: (lv_condition_6_0= ruleCondition )
                    // InternalTurn.g:4782:6: lv_condition_6_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOrForkAccess().getConditionConditionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_74);
                    lv_condition_6_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOrForkRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_6_0,
                      							"org.xtext.project.turn.Turn.Condition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:4800:3: ( (lv_connectingOrBody_7_0= rulePathBody ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==68) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalTurn.g:4801:4: (lv_connectingOrBody_7_0= rulePathBody )
                    {
                    // InternalTurn.g:4801:4: (lv_connectingOrBody_7_0= rulePathBody )
                    // InternalTurn.g:4802:5: lv_connectingOrBody_7_0= rulePathBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOrForkAccess().getConnectingOrBodyPathBodyParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_connectingOrBody_7_0=rulePathBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOrForkRule());
                      					}
                      					set(
                      						current,
                      						"connectingOrBody",
                      						lv_connectingOrBody_7_0,
                      						"org.xtext.project.turn.Turn.PathBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrFork"


    // $ANTLR start "entryRuleOrBody"
    // InternalTurn.g:4823:1: entryRuleOrBody returns [EObject current=null] : iv_ruleOrBody= ruleOrBody EOF ;
    public final EObject entryRuleOrBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrBody = null;


        try {
            // InternalTurn.g:4823:47: (iv_ruleOrBody= ruleOrBody EOF )
            // InternalTurn.g:4824:2: iv_ruleOrBody= ruleOrBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrBody=ruleOrBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrBody"


    // $ANTLR start "ruleOrBody"
    // InternalTurn.g:4830:1: ruleOrBody returns [EObject current=null] : this_ElseOrForkBody_0= ruleElseOrForkBody ;
    public final EObject ruleOrBody() throws RecognitionException {
        EObject current = null;

        EObject this_ElseOrForkBody_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4836:2: (this_ElseOrForkBody_0= ruleElseOrForkBody )
            // InternalTurn.g:4837:2: this_ElseOrForkBody_0= ruleElseOrForkBody
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getOrBodyAccess().getElseOrForkBodyParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ElseOrForkBody_0=ruleElseOrForkBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ElseOrForkBody_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrBody"


    // $ANTLR start "entryRuleElseOrForkBody"
    // InternalTurn.g:4848:1: entryRuleElseOrForkBody returns [EObject current=null] : iv_ruleElseOrForkBody= ruleElseOrForkBody EOF ;
    public final EObject entryRuleElseOrForkBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseOrForkBody = null;


        try {
            // InternalTurn.g:4848:55: (iv_ruleElseOrForkBody= ruleElseOrForkBody EOF )
            // InternalTurn.g:4849:2: iv_ruleElseOrForkBody= ruleElseOrForkBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseOrForkBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElseOrForkBody=ruleElseOrForkBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseOrForkBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseOrForkBody"


    // $ANTLR start "ruleElseOrForkBody"
    // InternalTurn.g:4855:1: ruleElseOrForkBody returns [EObject current=null] : (this_OrForkBody_0= ruleOrForkBody (otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) ) )? ) ;
    public final EObject ruleElseOrForkBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_OrForkBody_0 = null;

        EObject lv_elseBody_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4861:2: ( (this_OrForkBody_0= ruleOrForkBody (otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) ) )? ) )
            // InternalTurn.g:4862:2: (this_OrForkBody_0= ruleOrForkBody (otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) ) )? )
            {
            // InternalTurn.g:4862:2: (this_OrForkBody_0= ruleOrForkBody (otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) ) )? )
            // InternalTurn.g:4863:3: this_OrForkBody_0= ruleOrForkBody (otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getElseOrForkBodyAccess().getOrForkBodyParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_94);
            this_OrForkBody_0=ruleOrForkBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_OrForkBody_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:4871:3: (otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==82) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalTurn.g:4872:4: otherlv_1= '[else]' ( (lv_elseBody_2_0= rulePathBody ) )
                    {
                    otherlv_1=(Token)match(input,82,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getElseOrForkBodyAccess().getElseKeyword_1_0());
                      			
                    }
                    // InternalTurn.g:4876:4: ( (lv_elseBody_2_0= rulePathBody ) )
                    // InternalTurn.g:4877:5: (lv_elseBody_2_0= rulePathBody )
                    {
                    // InternalTurn.g:4877:5: (lv_elseBody_2_0= rulePathBody )
                    // InternalTurn.g:4878:6: lv_elseBody_2_0= rulePathBody
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElseOrForkBodyAccess().getElseBodyPathBodyParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseBody_2_0=rulePathBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElseOrForkBodyRule());
                      						}
                      						set(
                      							current,
                      							"elseBody",
                      							lv_elseBody_2_0,
                      							"org.xtext.project.turn.Turn.PathBody");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseOrForkBody"


    // $ANTLR start "entryRuleOrForkBody"
    // InternalTurn.g:4900:1: entryRuleOrForkBody returns [EObject current=null] : iv_ruleOrForkBody= ruleOrForkBody EOF ;
    public final EObject entryRuleOrForkBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrForkBody = null;


        try {
            // InternalTurn.g:4900:51: (iv_ruleOrForkBody= ruleOrForkBody EOF )
            // InternalTurn.g:4901:2: iv_ruleOrForkBody= ruleOrForkBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrForkBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrForkBody=ruleOrForkBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrForkBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrForkBody"


    // $ANTLR start "ruleOrForkBody"
    // InternalTurn.g:4907:1: ruleOrForkBody returns [EObject current=null] : ( (lv_regularBody_0_0= ruleRegularOrFork ) )+ ;
    public final EObject ruleOrForkBody() throws RecognitionException {
        EObject current = null;

        EObject lv_regularBody_0_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4913:2: ( ( (lv_regularBody_0_0= ruleRegularOrFork ) )+ )
            // InternalTurn.g:4914:2: ( (lv_regularBody_0_0= ruleRegularOrFork ) )+
            {
            // InternalTurn.g:4914:2: ( (lv_regularBody_0_0= ruleRegularOrFork ) )+
            int cnt91=0;
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==27) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalTurn.g:4915:3: (lv_regularBody_0_0= ruleRegularOrFork )
            	    {
            	    // InternalTurn.g:4915:3: (lv_regularBody_0_0= ruleRegularOrFork )
            	    // InternalTurn.g:4916:4: lv_regularBody_0_0= ruleRegularOrFork
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getOrForkBodyAccess().getRegularBodyRegularOrForkParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_regularBody_0_0=ruleRegularOrFork();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getOrForkBodyRule());
            	      				}
            	      				add(
            	      					current,
            	      					"regularBody",
            	      					lv_regularBody_0_0,
            	      					"org.xtext.project.turn.Turn.RegularOrFork");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt91 >= 1 ) break loop91;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(91, input);
                        throw eee;
                }
                cnt91++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrForkBody"


    // $ANTLR start "entryRuleRegularOrFork"
    // InternalTurn.g:4936:1: entryRuleRegularOrFork returns [EObject current=null] : iv_ruleRegularOrFork= ruleRegularOrFork EOF ;
    public final EObject entryRuleRegularOrFork() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegularOrFork = null;


        try {
            // InternalTurn.g:4936:54: (iv_ruleRegularOrFork= ruleRegularOrFork EOF )
            // InternalTurn.g:4937:2: iv_ruleRegularOrFork= ruleRegularOrFork EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegularOrForkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegularOrFork=ruleRegularOrFork();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegularOrFork; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegularOrFork"


    // $ANTLR start "ruleRegularOrFork"
    // InternalTurn.g:4943:1: ruleRegularOrFork returns [EObject current=null] : ( ( (lv_condition_0_0= ruleCondition ) ) ( (lv_pathBody_1_0= rulePathBody ) ) ) ;
    public final EObject ruleRegularOrFork() throws RecognitionException {
        EObject current = null;

        EObject lv_condition_0_0 = null;

        EObject lv_pathBody_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:4949:2: ( ( ( (lv_condition_0_0= ruleCondition ) ) ( (lv_pathBody_1_0= rulePathBody ) ) ) )
            // InternalTurn.g:4950:2: ( ( (lv_condition_0_0= ruleCondition ) ) ( (lv_pathBody_1_0= rulePathBody ) ) )
            {
            // InternalTurn.g:4950:2: ( ( (lv_condition_0_0= ruleCondition ) ) ( (lv_pathBody_1_0= rulePathBody ) ) )
            // InternalTurn.g:4951:3: ( (lv_condition_0_0= ruleCondition ) ) ( (lv_pathBody_1_0= rulePathBody ) )
            {
            // InternalTurn.g:4951:3: ( (lv_condition_0_0= ruleCondition ) )
            // InternalTurn.g:4952:4: (lv_condition_0_0= ruleCondition )
            {
            // InternalTurn.g:4952:4: (lv_condition_0_0= ruleCondition )
            // InternalTurn.g:4953:5: lv_condition_0_0= ruleCondition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRegularOrForkAccess().getConditionConditionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_61);
            lv_condition_0_0=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRegularOrForkRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_0_0,
              						"org.xtext.project.turn.Turn.Condition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:4970:3: ( (lv_pathBody_1_0= rulePathBody ) )
            // InternalTurn.g:4971:4: (lv_pathBody_1_0= rulePathBody )
            {
            // InternalTurn.g:4971:4: (lv_pathBody_1_0= rulePathBody )
            // InternalTurn.g:4972:5: lv_pathBody_1_0= rulePathBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRegularOrForkAccess().getPathBodyPathBodyParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_pathBody_1_0=rulePathBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRegularOrForkRule());
              					}
              					set(
              						current,
              						"pathBody",
              						lv_pathBody_1_0,
              						"org.xtext.project.turn.Turn.PathBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegularOrFork"


    // $ANTLR start "entryRuleAndFork"
    // InternalTurn.g:4993:1: entryRuleAndFork returns [EObject current=null] : iv_ruleAndFork= ruleAndFork EOF ;
    public final EObject entryRuleAndFork() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndFork = null;


        try {
            // InternalTurn.g:4993:48: (iv_ruleAndFork= ruleAndFork EOF )
            // InternalTurn.g:4994:2: iv_ruleAndFork= ruleAndFork EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndForkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndFork=ruleAndFork();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndFork; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndFork"


    // $ANTLR start "ruleAndFork"
    // InternalTurn.g:5000:1: ruleAndFork returns [EObject current=null] : (otherlv_0= 'and' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' (otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) ) )* otherlv_6= '}' ( (lv_connectingAndBody_7_0= rulePathBody ) )? ) ;
    public final EObject ruleAndFork() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_longName_2_0 = null;

        EObject lv_pathbody_5_0 = null;

        EObject lv_connectingAndBody_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5006:2: ( (otherlv_0= 'and' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' (otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) ) )* otherlv_6= '}' ( (lv_connectingAndBody_7_0= rulePathBody ) )? ) )
            // InternalTurn.g:5007:2: (otherlv_0= 'and' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' (otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) ) )* otherlv_6= '}' ( (lv_connectingAndBody_7_0= rulePathBody ) )? )
            {
            // InternalTurn.g:5007:2: (otherlv_0= 'and' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' (otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) ) )* otherlv_6= '}' ( (lv_connectingAndBody_7_0= rulePathBody ) )? )
            // InternalTurn.g:5008:3: otherlv_0= 'and' ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )? otherlv_3= '{' (otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) ) )* otherlv_6= '}' ( (lv_connectingAndBody_7_0= rulePathBody ) )?
            {
            otherlv_0=(Token)match(input,83,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAndForkAccess().getAndKeyword_0());
              		
            }
            // InternalTurn.g:5012:3: ( ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_ID) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalTurn.g:5013:4: ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_longName_2_0= ruleLongName ) )
                    {
                    // InternalTurn.g:5013:4: ( (lv_name_1_0= ruleQualifiedName ) )
                    // InternalTurn.g:5014:5: (lv_name_1_0= ruleQualifiedName )
                    {
                    // InternalTurn.g:5014:5: (lv_name_1_0= ruleQualifiedName )
                    // InternalTurn.g:5015:6: lv_name_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAndForkAccess().getNameQualifiedNameParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAndForkRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:5032:4: ( (lv_longName_2_0= ruleLongName ) )
                    // InternalTurn.g:5033:5: (lv_longName_2_0= ruleLongName )
                    {
                    // InternalTurn.g:5033:5: (lv_longName_2_0= ruleLongName )
                    // InternalTurn.g:5034:6: lv_longName_2_0= ruleLongName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAndForkAccess().getLongNameLongNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_longName_2_0=ruleLongName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAndForkRule());
                      						}
                      						set(
                      							current,
                      							"longName",
                      							lv_longName_2_0,
                      							"org.xtext.project.turn.Turn.LongName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,15,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAndForkAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalTurn.g:5056:3: (otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) ) )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==84) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalTurn.g:5057:4: otherlv_4= '*' ( (lv_pathbody_5_0= rulePathBody ) )
            	    {
            	    otherlv_4=(Token)match(input,84,FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getAndForkAccess().getAsteriskKeyword_3_0());
            	      			
            	    }
            	    // InternalTurn.g:5061:4: ( (lv_pathbody_5_0= rulePathBody ) )
            	    // InternalTurn.g:5062:5: (lv_pathbody_5_0= rulePathBody )
            	    {
            	    // InternalTurn.g:5062:5: (lv_pathbody_5_0= rulePathBody )
            	    // InternalTurn.g:5063:6: lv_pathbody_5_0= rulePathBody
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndForkAccess().getPathbodyPathBodyParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_pathbody_5_0=rulePathBody();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndForkRule());
            	      						}
            	      						add(
            	      							current,
            	      							"pathbody",
            	      							lv_pathbody_5_0,
            	      							"org.xtext.project.turn.Turn.PathBody");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAndForkAccess().getRightCurlyBracketKeyword_4());
              		
            }
            // InternalTurn.g:5085:3: ( (lv_connectingAndBody_7_0= rulePathBody ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==68) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalTurn.g:5086:4: (lv_connectingAndBody_7_0= rulePathBody )
                    {
                    // InternalTurn.g:5086:4: (lv_connectingAndBody_7_0= rulePathBody )
                    // InternalTurn.g:5087:5: lv_connectingAndBody_7_0= rulePathBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAndForkAccess().getConnectingAndBodyPathBodyParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_connectingAndBody_7_0=rulePathBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAndForkRule());
                      					}
                      					set(
                      						current,
                      						"connectingAndBody",
                      						lv_connectingAndBody_7_0,
                      						"org.xtext.project.turn.Turn.PathBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndFork"


    // $ANTLR start "entryRuleStub"
    // InternalTurn.g:5108:1: entryRuleStub returns [EObject current=null] : iv_ruleStub= ruleStub EOF ;
    public final EObject entryRuleStub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStub = null;


        try {
            // InternalTurn.g:5108:45: (iv_ruleStub= ruleStub EOF )
            // InternalTurn.g:5109:2: iv_ruleStub= ruleStub EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStubRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStub=ruleStub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStub; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStub"


    // $ANTLR start "ruleStub"
    // InternalTurn.g:5115:1: ruleStub returns [EObject current=null] : ( ( (lv_stubType_0_0= ruleStubType ) )? (otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )? ) ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) ) (otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}' )? ( (lv_connectingStubBody_11_0= rulePathBody ) )? ) ;
    public final EObject ruleStub() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_stubType_0_0 = null;

        AntlrDatatypeRuleToken lv_index_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_longName_5_0 = null;

        EObject lv_params_6_0 = null;

        EObject lv_outPaths_9_0 = null;

        EObject lv_connectingStubBody_11_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5121:2: ( ( ( (lv_stubType_0_0= ruleStubType ) )? (otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )? ) ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) ) (otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}' )? ( (lv_connectingStubBody_11_0= rulePathBody ) )? ) )
            // InternalTurn.g:5122:2: ( ( (lv_stubType_0_0= ruleStubType ) )? (otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )? ) ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) ) (otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}' )? ( (lv_connectingStubBody_11_0= rulePathBody ) )? )
            {
            // InternalTurn.g:5122:2: ( ( (lv_stubType_0_0= ruleStubType ) )? (otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )? ) ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) ) (otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}' )? ( (lv_connectingStubBody_11_0= rulePathBody ) )? )
            // InternalTurn.g:5123:3: ( (lv_stubType_0_0= ruleStubType ) )? (otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )? ) ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) ) (otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}' )? ( (lv_connectingStubBody_11_0= rulePathBody ) )?
            {
            // InternalTurn.g:5123:3: ( (lv_stubType_0_0= ruleStubType ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( ((LA95_0>=92 && LA95_0<=93)) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalTurn.g:5124:4: (lv_stubType_0_0= ruleStubType )
                    {
                    // InternalTurn.g:5124:4: (lv_stubType_0_0= ruleStubType )
                    // InternalTurn.g:5125:5: lv_stubType_0_0= ruleStubType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubAccess().getStubTypeStubTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_97);
                    lv_stubType_0_0=ruleStubType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubRule());
                      					}
                      					set(
                      						current,
                      						"stubType",
                      						lv_stubType_0_0,
                      						"org.xtext.project.turn.Turn.StubType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:5142:3: (otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )? )
            // InternalTurn.g:5143:4: otherlv_1= 'stub' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )?
            {
            otherlv_1=(Token)match(input,85,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getStubAccess().getStubKeyword_1_0());
              			
            }
            // InternalTurn.g:5147:4: (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==67) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalTurn.g:5148:5: otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) )
                    {
                    otherlv_2=(Token)match(input,67,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getStubAccess().getInKeyword_1_1_0());
                      				
                    }
                    // InternalTurn.g:5152:5: ( (lv_index_3_0= rulePositiveInteger ) )
                    // InternalTurn.g:5153:6: (lv_index_3_0= rulePositiveInteger )
                    {
                    // InternalTurn.g:5153:6: (lv_index_3_0= rulePositiveInteger )
                    // InternalTurn.g:5154:7: lv_index_3_0= rulePositiveInteger
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStubAccess().getIndexPositiveIntegerParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_99);
                    lv_index_3_0=rulePositiveInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStubRule());
                      							}
                      							set(
                      								current,
                      								"index",
                      								lv_index_3_0,
                      								"org.xtext.project.turn.Turn.PositiveInteger");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;

            }


            }

            // InternalTurn.g:5173:3: ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) )
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalTurn.g:5174:4: ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) )
                    {
                    // InternalTurn.g:5174:4: ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) )
                    // InternalTurn.g:5175:5: ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) )
                    {
                    // InternalTurn.g:5175:5: ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==RULE_ID) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalTurn.g:5176:6: ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) )
                            {
                            // InternalTurn.g:5176:6: ( (lv_name_4_0= ruleQualifiedName ) )
                            // InternalTurn.g:5177:7: (lv_name_4_0= ruleQualifiedName )
                            {
                            // InternalTurn.g:5177:7: (lv_name_4_0= ruleQualifiedName )
                            // InternalTurn.g:5178:8: lv_name_4_0= ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getStubAccess().getNameQualifiedNameParserRuleCall_2_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_100);
                            lv_name_4_0=ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getStubRule());
                              								}
                              								set(
                              									current,
                              									"name",
                              									lv_name_4_0,
                              									"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalTurn.g:5195:6: ( (lv_longName_5_0= ruleLongName ) )
                            // InternalTurn.g:5196:7: (lv_longName_5_0= ruleLongName )
                            {
                            // InternalTurn.g:5196:7: (lv_longName_5_0= ruleLongName )
                            // InternalTurn.g:5197:8: lv_longName_5_0= ruleLongName
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getStubAccess().getLongNameLongNameParserRuleCall_2_0_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_99);
                            lv_longName_5_0=ruleLongName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getStubRule());
                              								}
                              								set(
                              									current,
                              									"longName",
                              									lv_longName_5_0,
                              									"org.xtext.project.turn.Turn.LongName");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalTurn.g:5215:5: ( (lv_params_6_0= ruleStubParameters ) )
                    // InternalTurn.g:5216:6: (lv_params_6_0= ruleStubParameters )
                    {
                    // InternalTurn.g:5216:6: (lv_params_6_0= ruleStubParameters )
                    // InternalTurn.g:5217:7: lv_params_6_0= ruleStubParameters
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStubAccess().getParamsStubParametersParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_101);
                    lv_params_6_0=ruleStubParameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStubRule());
                      							}
                      							set(
                      								current,
                      								"params",
                      								lv_params_6_0,
                      								"org.xtext.project.turn.Turn.StubParameters");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:5236:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalTurn.g:5236:4: ( ( ruleQualifiedName ) )
                    // InternalTurn.g:5237:5: ( ruleQualifiedName )
                    {
                    // InternalTurn.g:5237:5: ( ruleQualifiedName )
                    // InternalTurn.g:5238:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStubAccess().getStubRefStubDeclarationCrossReference_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_101);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:5253:3: (otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}' )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==15) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalTurn.g:5254:4: otherlv_8= '{' ( (lv_outPaths_9_0= ruleStubOutPath ) )* otherlv_10= '}'
                    {
                    otherlv_8=(Token)match(input,15,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getStubAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalTurn.g:5258:4: ( (lv_outPaths_9_0= ruleStubOutPath ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==88) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // InternalTurn.g:5259:5: (lv_outPaths_9_0= ruleStubOutPath )
                    	    {
                    	    // InternalTurn.g:5259:5: (lv_outPaths_9_0= ruleStubOutPath )
                    	    // InternalTurn.g:5260:6: lv_outPaths_9_0= ruleStubOutPath
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getStubAccess().getOutPathsStubOutPathParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_outPaths_9_0=ruleStubOutPath();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getStubRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"outPaths",
                    	      							lv_outPaths_9_0,
                    	      							"org.xtext.project.turn.Turn.StubOutPath");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getStubAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:5282:3: ( (lv_connectingStubBody_11_0= rulePathBody ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==68) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalTurn.g:5283:4: (lv_connectingStubBody_11_0= rulePathBody )
                    {
                    // InternalTurn.g:5283:4: (lv_connectingStubBody_11_0= rulePathBody )
                    // InternalTurn.g:5284:5: lv_connectingStubBody_11_0= rulePathBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubAccess().getConnectingStubBodyPathBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_connectingStubBody_11_0=rulePathBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubRule());
                      					}
                      					set(
                      						current,
                      						"connectingStubBody",
                      						lv_connectingStubBody_11_0,
                      						"org.xtext.project.turn.Turn.PathBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStub"


    // $ANTLR start "entryRuleStubParameters"
    // InternalTurn.g:5305:1: entryRuleStubParameters returns [EObject current=null] : iv_ruleStubParameters= ruleStubParameters EOF ;
    public final EObject entryRuleStubParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStubParameters = null;


        try {
            // InternalTurn.g:5305:55: (iv_ruleStubParameters= ruleStubParameters EOF )
            // InternalTurn.g:5306:2: iv_ruleStubParameters= ruleStubParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStubParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStubParameters=ruleStubParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStubParameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStubParameters"


    // $ANTLR start "ruleStubParameters"
    // InternalTurn.g:5312:1: ruleStubParameters returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_plugin_2_0= rulePluginBinding ) )* otherlv_3= ')' ) ;
    public final EObject ruleStubParameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_plugin_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5318:2: ( ( () otherlv_1= '(' ( (lv_plugin_2_0= rulePluginBinding ) )* otherlv_3= ')' ) )
            // InternalTurn.g:5319:2: ( () otherlv_1= '(' ( (lv_plugin_2_0= rulePluginBinding ) )* otherlv_3= ')' )
            {
            // InternalTurn.g:5319:2: ( () otherlv_1= '(' ( (lv_plugin_2_0= rulePluginBinding ) )* otherlv_3= ')' )
            // InternalTurn.g:5320:3: () otherlv_1= '(' ( (lv_plugin_2_0= rulePluginBinding ) )* otherlv_3= ')'
            {
            // InternalTurn.g:5320:3: ()
            // InternalTurn.g:5321:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStubParametersAccess().getStubParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,86,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStubParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalTurn.g:5331:3: ( (lv_plugin_2_0= rulePluginBinding ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_ID||LA102_0==27||LA102_0==89) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalTurn.g:5332:4: (lv_plugin_2_0= rulePluginBinding )
            	    {
            	    // InternalTurn.g:5332:4: (lv_plugin_2_0= rulePluginBinding )
            	    // InternalTurn.g:5333:5: lv_plugin_2_0= rulePluginBinding
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStubParametersAccess().getPluginPluginBindingParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_plugin_2_0=rulePluginBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStubParametersRule());
            	      					}
            	      					add(
            	      						current,
            	      						"plugin",
            	      						lv_plugin_2_0,
            	      						"org.xtext.project.turn.Turn.PluginBinding");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_3=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getStubParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStubParameters"


    // $ANTLR start "entryRuleStubDeclaration"
    // InternalTurn.g:5358:1: entryRuleStubDeclaration returns [EObject current=null] : iv_ruleStubDeclaration= ruleStubDeclaration EOF ;
    public final EObject entryRuleStubDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStubDeclaration = null;


        try {
            // InternalTurn.g:5358:56: (iv_ruleStubDeclaration= ruleStubDeclaration EOF )
            // InternalTurn.g:5359:2: iv_ruleStubDeclaration= ruleStubDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStubDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStubDeclaration=ruleStubDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStubDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStubDeclaration"


    // $ANTLR start "ruleStubDeclaration"
    // InternalTurn.g:5365:1: ruleStubDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) otherlv_2= '=' ( (lv_params_3_0= ruleStubParameters ) ) ) ;
    public final EObject ruleStubDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_longName_1_0 = null;

        EObject lv_params_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5371:2: ( ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) otherlv_2= '=' ( (lv_params_3_0= ruleStubParameters ) ) ) )
            // InternalTurn.g:5372:2: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) otherlv_2= '=' ( (lv_params_3_0= ruleStubParameters ) ) )
            {
            // InternalTurn.g:5372:2: ( ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) otherlv_2= '=' ( (lv_params_3_0= ruleStubParameters ) ) )
            // InternalTurn.g:5373:3: ( (lv_name_0_0= ruleQualifiedName ) ) ( (lv_longName_1_0= ruleLongName ) ) otherlv_2= '=' ( (lv_params_3_0= ruleStubParameters ) )
            {
            // InternalTurn.g:5373:3: ( (lv_name_0_0= ruleQualifiedName ) )
            // InternalTurn.g:5374:4: (lv_name_0_0= ruleQualifiedName )
            {
            // InternalTurn.g:5374:4: (lv_name_0_0= ruleQualifiedName )
            // InternalTurn.g:5375:5: lv_name_0_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStubDeclarationAccess().getNameQualifiedNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_name_0_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStubDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:5392:3: ( (lv_longName_1_0= ruleLongName ) )
            // InternalTurn.g:5393:4: (lv_longName_1_0= ruleLongName )
            {
            // InternalTurn.g:5393:4: (lv_longName_1_0= ruleLongName )
            // InternalTurn.g:5394:5: lv_longName_1_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStubDeclarationAccess().getLongNameLongNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_longName_1_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStubDeclarationRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_1_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,33,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStubDeclarationAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalTurn.g:5415:3: ( (lv_params_3_0= ruleStubParameters ) )
            // InternalTurn.g:5416:4: (lv_params_3_0= ruleStubParameters )
            {
            // InternalTurn.g:5416:4: (lv_params_3_0= ruleStubParameters )
            // InternalTurn.g:5417:5: lv_params_3_0= ruleStubParameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStubDeclarationAccess().getParamsStubParametersParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_params_3_0=ruleStubParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStubDeclarationRule());
              					}
              					set(
              						current,
              						"params",
              						lv_params_3_0,
              						"org.xtext.project.turn.Turn.StubParameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStubDeclaration"


    // $ANTLR start "entryRuleStubOutPath"
    // InternalTurn.g:5438:1: entryRuleStubOutPath returns [EObject current=null] : iv_ruleStubOutPath= ruleStubOutPath EOF ;
    public final EObject entryRuleStubOutPath() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStubOutPath = null;


        try {
            // InternalTurn.g:5438:52: (iv_ruleStubOutPath= ruleStubOutPath EOF )
            // InternalTurn.g:5439:2: iv_ruleStubOutPath= ruleStubOutPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStubOutPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStubOutPath=ruleStubOutPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStubOutPath; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStubOutPath"


    // $ANTLR start "ruleStubOutPath"
    // InternalTurn.g:5445:1: ruleStubOutPath returns [EObject current=null] : ( (otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) ) ) (otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']' )? ( (lv_path_6_0= rulePathBody ) ) ) ;
    public final EObject ruleStubOutPath() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_index_1_0 = null;

        AntlrDatatypeRuleToken lv_threshold_4_0 = null;

        EObject lv_path_6_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5451:2: ( ( (otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) ) ) (otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']' )? ( (lv_path_6_0= rulePathBody ) ) ) )
            // InternalTurn.g:5452:2: ( (otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) ) ) (otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']' )? ( (lv_path_6_0= rulePathBody ) ) )
            {
            // InternalTurn.g:5452:2: ( (otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) ) ) (otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']' )? ( (lv_path_6_0= rulePathBody ) ) )
            // InternalTurn.g:5453:3: (otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) ) ) (otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']' )? ( (lv_path_6_0= rulePathBody ) )
            {
            // InternalTurn.g:5453:3: (otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) ) )
            // InternalTurn.g:5454:4: otherlv_0= 'out' ( (lv_index_1_0= rulePositiveInteger ) )
            {
            otherlv_0=(Token)match(input,88,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getStubOutPathAccess().getOutKeyword_0_0());
              			
            }
            // InternalTurn.g:5458:4: ( (lv_index_1_0= rulePositiveInteger ) )
            // InternalTurn.g:5459:5: (lv_index_1_0= rulePositiveInteger )
            {
            // InternalTurn.g:5459:5: (lv_index_1_0= rulePositiveInteger )
            // InternalTurn.g:5460:6: lv_index_1_0= rulePositiveInteger
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getStubOutPathAccess().getIndexPositiveIntegerParserRuleCall_0_1_0());
              					
            }
            pushFollow(FOLLOW_105);
            lv_index_1_0=rulePositiveInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getStubOutPathRule());
              						}
              						set(
              							current,
              							"index",
              							lv_index_1_0,
              							"org.xtext.project.turn.Turn.PositiveInteger");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalTurn.g:5478:3: (otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']' )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==51) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalTurn.g:5479:4: otherlv_2= 'threshold' otherlv_3= '[' ( (lv_threshold_4_0= rulePositiveInteger ) ) otherlv_5= ']'
                    {
                    otherlv_2=(Token)match(input,51,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStubOutPathAccess().getThresholdKeyword_1_0());
                      			
                    }
                    otherlv_3=(Token)match(input,27,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStubOutPathAccess().getLeftSquareBracketKeyword_1_1());
                      			
                    }
                    // InternalTurn.g:5487:4: ( (lv_threshold_4_0= rulePositiveInteger ) )
                    // InternalTurn.g:5488:5: (lv_threshold_4_0= rulePositiveInteger )
                    {
                    // InternalTurn.g:5488:5: (lv_threshold_4_0= rulePositiveInteger )
                    // InternalTurn.g:5489:6: lv_threshold_4_0= rulePositiveInteger
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStubOutPathAccess().getThresholdPositiveIntegerParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_threshold_4_0=rulePositiveInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStubOutPathRule());
                      						}
                      						set(
                      							current,
                      							"threshold",
                      							lv_threshold_4_0,
                      							"org.xtext.project.turn.Turn.PositiveInteger");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,28,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStubOutPathAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:5511:3: ( (lv_path_6_0= rulePathBody ) )
            // InternalTurn.g:5512:4: (lv_path_6_0= rulePathBody )
            {
            // InternalTurn.g:5512:4: (lv_path_6_0= rulePathBody )
            // InternalTurn.g:5513:5: lv_path_6_0= rulePathBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStubOutPathAccess().getPathPathBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_path_6_0=rulePathBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStubOutPathRule());
              					}
              					set(
              						current,
              						"path",
              						lv_path_6_0,
              						"org.xtext.project.turn.Turn.PathBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStubOutPath"


    // $ANTLR start "entryRulePluginBinding"
    // InternalTurn.g:5534:1: entryRulePluginBinding returns [EObject current=null] : iv_rulePluginBinding= rulePluginBinding EOF ;
    public final EObject entryRulePluginBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePluginBinding = null;


        try {
            // InternalTurn.g:5534:54: (iv_rulePluginBinding= rulePluginBinding EOF )
            // InternalTurn.g:5535:2: iv_rulePluginBinding= rulePluginBinding EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPluginBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePluginBinding=rulePluginBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePluginBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePluginBinding"


    // $ANTLR start "rulePluginBinding"
    // InternalTurn.g:5541:1: rulePluginBinding returns [EObject current=null] : ( ( (lv_condition_0_0= ruleCondition ) )? (otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) ) )? ( (otherlv_3= RULE_ID ) ) (otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )* )? ) ;
    public final EObject rulePluginBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_condition_0_0 = null;

        AntlrDatatypeRuleToken lv_replication_2_0 = null;

        EObject lv_binding_5_0 = null;

        EObject lv_bindings_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5547:2: ( ( ( (lv_condition_0_0= ruleCondition ) )? (otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) ) )? ( (otherlv_3= RULE_ID ) ) (otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )* )? ) )
            // InternalTurn.g:5548:2: ( ( (lv_condition_0_0= ruleCondition ) )? (otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) ) )? ( (otherlv_3= RULE_ID ) ) (otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )* )? )
            {
            // InternalTurn.g:5548:2: ( ( (lv_condition_0_0= ruleCondition ) )? (otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) ) )? ( (otherlv_3= RULE_ID ) ) (otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )* )? )
            // InternalTurn.g:5549:3: ( (lv_condition_0_0= ruleCondition ) )? (otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) ) )? ( (otherlv_3= RULE_ID ) ) (otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )* )?
            {
            // InternalTurn.g:5549:3: ( (lv_condition_0_0= ruleCondition ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==27) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalTurn.g:5550:4: (lv_condition_0_0= ruleCondition )
                    {
                    // InternalTurn.g:5550:4: (lv_condition_0_0= ruleCondition )
                    // InternalTurn.g:5551:5: lv_condition_0_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPluginBindingAccess().getConditionConditionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_106);
                    lv_condition_0_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPluginBindingRule());
                      					}
                      					set(
                      						current,
                      						"condition",
                      						lv_condition_0_0,
                      						"org.xtext.project.turn.Turn.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:5568:3: (otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==89) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalTurn.g:5569:4: otherlv_1= 'replication' ( (lv_replication_2_0= rulePositiveInteger ) )
                    {
                    otherlv_1=(Token)match(input,89,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPluginBindingAccess().getReplicationKeyword_1_0());
                      			
                    }
                    // InternalTurn.g:5573:4: ( (lv_replication_2_0= rulePositiveInteger ) )
                    // InternalTurn.g:5574:5: (lv_replication_2_0= rulePositiveInteger )
                    {
                    // InternalTurn.g:5574:5: (lv_replication_2_0= rulePositiveInteger )
                    // InternalTurn.g:5575:6: lv_replication_2_0= rulePositiveInteger
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPluginBindingAccess().getReplicationPositiveIntegerParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_replication_2_0=rulePositiveInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPluginBindingRule());
                      						}
                      						set(
                      							current,
                      							"replication",
                      							lv_replication_2_0,
                      							"org.xtext.project.turn.Turn.PositiveInteger");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:5593:3: ( (otherlv_3= RULE_ID ) )
            // InternalTurn.g:5594:4: (otherlv_3= RULE_ID )
            {
            // InternalTurn.g:5594:4: (otherlv_3= RULE_ID )
            // InternalTurn.g:5595:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPluginBindingRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getPluginBindingAccess().getMapUCMmapCrossReference_2_0());
              				
            }

            }


            }

            // InternalTurn.g:5606:3: (otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )* )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==24) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalTurn.g:5607:4: otherlv_4= ':' ( (lv_binding_5_0= ruleBinding ) ) (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )*
                    {
                    otherlv_4=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPluginBindingAccess().getColonKeyword_3_0());
                      			
                    }
                    // InternalTurn.g:5611:4: ( (lv_binding_5_0= ruleBinding ) )
                    // InternalTurn.g:5612:5: (lv_binding_5_0= ruleBinding )
                    {
                    // InternalTurn.g:5612:5: (lv_binding_5_0= ruleBinding )
                    // InternalTurn.g:5613:6: lv_binding_5_0= ruleBinding
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPluginBindingAccess().getBindingBindingParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_binding_5_0=ruleBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPluginBindingRule());
                      						}
                      						set(
                      							current,
                      							"binding",
                      							lv_binding_5_0,
                      							"org.xtext.project.turn.Turn.Binding");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:5630:4: (otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) ) )*
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( (LA106_0==25) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalTurn.g:5631:5: otherlv_6= ',' ( (lv_bindings_7_0= ruleBinding ) )
                    	    {
                    	    otherlv_6=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getPluginBindingAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:5635:5: ( (lv_bindings_7_0= ruleBinding ) )
                    	    // InternalTurn.g:5636:6: (lv_bindings_7_0= ruleBinding )
                    	    {
                    	    // InternalTurn.g:5636:6: (lv_bindings_7_0= ruleBinding )
                    	    // InternalTurn.g:5637:7: lv_bindings_7_0= ruleBinding
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPluginBindingAccess().getBindingsBindingParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_bindings_7_0=ruleBinding();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPluginBindingRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"bindings",
                    	      								lv_bindings_7_0,
                    	      								"org.xtext.project.turn.Turn.Binding");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePluginBinding"


    // $ANTLR start "entryRuleComponentRef"
    // InternalTurn.g:5660:1: entryRuleComponentRef returns [EObject current=null] : iv_ruleComponentRef= ruleComponentRef EOF ;
    public final EObject entryRuleComponentRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentRef = null;


        try {
            // InternalTurn.g:5660:53: (iv_ruleComponentRef= ruleComponentRef EOF )
            // InternalTurn.g:5661:2: iv_ruleComponentRef= ruleComponentRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComponentRef=ruleComponentRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentRef"


    // $ANTLR start "ruleComponentRef"
    // InternalTurn.g:5667:1: ruleComponentRef returns [EObject current=null] : ( ( (lv_protected_0_0= 'protected' ) )? ( (lv_kind_1_0= ruleCOMPONENTKIND ) )? ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) (otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )* )? ) ;
    public final EObject ruleComponentRef() throws RecognitionException {
        EObject current = null;

        Token lv_protected_0_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_kind_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_longName_3_0 = null;

        EObject lv_element_5_0 = null;

        EObject lv_elements_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5673:2: ( ( ( (lv_protected_0_0= 'protected' ) )? ( (lv_kind_1_0= ruleCOMPONENTKIND ) )? ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) (otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )* )? ) )
            // InternalTurn.g:5674:2: ( ( (lv_protected_0_0= 'protected' ) )? ( (lv_kind_1_0= ruleCOMPONENTKIND ) )? ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) (otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )* )? )
            {
            // InternalTurn.g:5674:2: ( ( (lv_protected_0_0= 'protected' ) )? ( (lv_kind_1_0= ruleCOMPONENTKIND ) )? ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) (otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )* )? )
            // InternalTurn.g:5675:3: ( (lv_protected_0_0= 'protected' ) )? ( (lv_kind_1_0= ruleCOMPONENTKIND ) )? ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_longName_3_0= ruleLongName ) ) (otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )* )?
            {
            // InternalTurn.g:5675:3: ( (lv_protected_0_0= 'protected' ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==90) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalTurn.g:5676:4: (lv_protected_0_0= 'protected' )
                    {
                    // InternalTurn.g:5676:4: (lv_protected_0_0= 'protected' )
                    // InternalTurn.g:5677:5: lv_protected_0_0= 'protected'
                    {
                    lv_protected_0_0=(Token)match(input,90,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_protected_0_0, grammarAccess.getComponentRefAccess().getProtectedProtectedKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComponentRefRule());
                      					}
                      					setWithLastConsumed(current, "protected", true, "protected");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:5689:3: ( (lv_kind_1_0= ruleCOMPONENTKIND ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==34||(LA109_0>=176 && LA109_0<=180)) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalTurn.g:5690:4: (lv_kind_1_0= ruleCOMPONENTKIND )
                    {
                    // InternalTurn.g:5690:4: (lv_kind_1_0= ruleCOMPONENTKIND )
                    // InternalTurn.g:5691:5: lv_kind_1_0= ruleCOMPONENTKIND
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComponentRefAccess().getKindCOMPONENTKINDEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_kind_1_0=ruleCOMPONENTKIND();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComponentRefRule());
                      					}
                      					set(
                      						current,
                      						"kind",
                      						lv_kind_1_0,
                      						"org.xtext.project.turn.Turn.COMPONENTKIND");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:5708:3: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalTurn.g:5709:4: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalTurn.g:5709:4: (lv_name_2_0= ruleQualifiedName )
            // InternalTurn.g:5710:5: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getComponentRefAccess().getNameQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getComponentRefRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:5727:3: ( (lv_longName_3_0= ruleLongName ) )
            // InternalTurn.g:5728:4: (lv_longName_3_0= ruleLongName )
            {
            // InternalTurn.g:5728:4: (lv_longName_3_0= ruleLongName )
            // InternalTurn.g:5729:5: lv_longName_3_0= ruleLongName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getComponentRefAccess().getLongNameLongNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_longName_3_0=ruleLongName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getComponentRefRule());
              					}
              					set(
              						current,
              						"longName",
              						lv_longName_3_0,
              						"org.xtext.project.turn.Turn.LongName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:5746:3: (otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )* )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==24) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalTurn.g:5747:4: otherlv_4= ':' ( (lv_element_5_0= ruleBoundOption ) ) (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )*
                    {
                    otherlv_4=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getComponentRefAccess().getColonKeyword_4_0());
                      			
                    }
                    // InternalTurn.g:5751:4: ( (lv_element_5_0= ruleBoundOption ) )
                    // InternalTurn.g:5752:5: (lv_element_5_0= ruleBoundOption )
                    {
                    // InternalTurn.g:5752:5: (lv_element_5_0= ruleBoundOption )
                    // InternalTurn.g:5753:6: lv_element_5_0= ruleBoundOption
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getComponentRefAccess().getElementBoundOptionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_element_5_0=ruleBoundOption();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getComponentRefRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"org.xtext.project.turn.Turn.BoundOption");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:5770:4: (otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) ) )*
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==25) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // InternalTurn.g:5771:5: otherlv_6= ',' ( (lv_elements_7_0= ruleBoundOption ) )
                    	    {
                    	    otherlv_6=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getComponentRefAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:5775:5: ( (lv_elements_7_0= ruleBoundOption ) )
                    	    // InternalTurn.g:5776:6: (lv_elements_7_0= ruleBoundOption )
                    	    {
                    	    // InternalTurn.g:5776:6: (lv_elements_7_0= ruleBoundOption )
                    	    // InternalTurn.g:5777:7: lv_elements_7_0= ruleBoundOption
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getComponentRefAccess().getElementsBoundOptionParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_elements_7_0=ruleBoundOption();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getComponentRefRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_7_0,
                    	      								"org.xtext.project.turn.Turn.BoundOption");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentRef"


    // $ANTLR start "entryRuleBoundOption"
    // InternalTurn.g:5800:1: entryRuleBoundOption returns [EObject current=null] : iv_ruleBoundOption= ruleBoundOption EOF ;
    public final EObject entryRuleBoundOption() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoundOption = null;


        try {
            // InternalTurn.g:5800:52: (iv_ruleBoundOption= ruleBoundOption EOF )
            // InternalTurn.g:5801:2: iv_ruleBoundOption= ruleBoundOption EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoundOptionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBoundOption=ruleBoundOption();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoundOption; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoundOption"


    // $ANTLR start "ruleBoundOption"
    // InternalTurn.g:5807:1: ruleBoundOption returns [EObject current=null] : (this_BoundElement_0= ruleBoundElement | this_LongBoundElement_1= ruleLongBoundElement ) ;
    public final EObject ruleBoundOption() throws RecognitionException {
        EObject current = null;

        EObject this_BoundElement_0 = null;

        EObject this_LongBoundElement_1 = null;



        	enterRule();

        try {
            // InternalTurn.g:5813:2: ( (this_BoundElement_0= ruleBoundElement | this_LongBoundElement_1= ruleLongBoundElement ) )
            // InternalTurn.g:5814:2: (this_BoundElement_0= ruleBoundElement | this_LongBoundElement_1= ruleLongBoundElement )
            {
            // InternalTurn.g:5814:2: (this_BoundElement_0= ruleBoundElement | this_LongBoundElement_1= ruleLongBoundElement )
            int alt112=2;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // InternalTurn.g:5815:3: this_BoundElement_0= ruleBoundElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBoundOptionAccess().getBoundElementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BoundElement_0=ruleBoundElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoundElement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:5824:3: this_LongBoundElement_1= ruleLongBoundElement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBoundOptionAccess().getLongBoundElementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LongBoundElement_1=ruleLongBoundElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LongBoundElement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoundOption"


    // $ANTLR start "entryRuleBoundElement"
    // InternalTurn.g:5836:1: entryRuleBoundElement returns [EObject current=null] : iv_ruleBoundElement= ruleBoundElement EOF ;
    public final EObject entryRuleBoundElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoundElement = null;


        try {
            // InternalTurn.g:5836:53: (iv_ruleBoundElement= ruleBoundElement EOF )
            // InternalTurn.g:5837:2: iv_ruleBoundElement= ruleBoundElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoundElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBoundElement=ruleBoundElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoundElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoundElement"


    // $ANTLR start "ruleBoundElement"
    // InternalTurn.g:5843:1: ruleBoundElement returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleBoundElement() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalTurn.g:5849:2: ( ( ( ruleQualifiedName ) ) )
            // InternalTurn.g:5850:2: ( ( ruleQualifiedName ) )
            {
            // InternalTurn.g:5850:2: ( ( ruleQualifiedName ) )
            // InternalTurn.g:5851:3: ( ruleQualifiedName )
            {
            // InternalTurn.g:5851:3: ( ruleQualifiedName )
            // InternalTurn.g:5852:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoundElementRule());
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBoundElementAccess().getElemReferencedBoundElementCrossReference_0());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoundElement"


    // $ANTLR start "entryRuleLongBoundElement"
    // InternalTurn.g:5869:1: entryRuleLongBoundElement returns [EObject current=null] : iv_ruleLongBoundElement= ruleLongBoundElement EOF ;
    public final EObject entryRuleLongBoundElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLongBoundElement = null;


        try {
            // InternalTurn.g:5869:57: (iv_ruleLongBoundElement= ruleLongBoundElement EOF )
            // InternalTurn.g:5870:2: iv_ruleLongBoundElement= ruleLongBoundElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLongBoundElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLongBoundElement=ruleLongBoundElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLongBoundElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLongBoundElement"


    // $ANTLR start "ruleLongBoundElement"
    // InternalTurn.g:5876:1: ruleLongBoundElement returns [EObject current=null] : ( ( (lv_from_0_0= ruleQualifiedName ) ) otherlv_1= '..' ( (lv_to_2_0= ruleQualifiedName ) ) ) ;
    public final EObject ruleLongBoundElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_from_0_0 = null;

        AntlrDatatypeRuleToken lv_to_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5882:2: ( ( ( (lv_from_0_0= ruleQualifiedName ) ) otherlv_1= '..' ( (lv_to_2_0= ruleQualifiedName ) ) ) )
            // InternalTurn.g:5883:2: ( ( (lv_from_0_0= ruleQualifiedName ) ) otherlv_1= '..' ( (lv_to_2_0= ruleQualifiedName ) ) )
            {
            // InternalTurn.g:5883:2: ( ( (lv_from_0_0= ruleQualifiedName ) ) otherlv_1= '..' ( (lv_to_2_0= ruleQualifiedName ) ) )
            // InternalTurn.g:5884:3: ( (lv_from_0_0= ruleQualifiedName ) ) otherlv_1= '..' ( (lv_to_2_0= ruleQualifiedName ) )
            {
            // InternalTurn.g:5884:3: ( (lv_from_0_0= ruleQualifiedName ) )
            // InternalTurn.g:5885:4: (lv_from_0_0= ruleQualifiedName )
            {
            // InternalTurn.g:5885:4: (lv_from_0_0= ruleQualifiedName )
            // InternalTurn.g:5886:5: lv_from_0_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLongBoundElementAccess().getFromQualifiedNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_109);
            lv_from_0_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLongBoundElementRule());
              					}
              					set(
              						current,
              						"from",
              						lv_from_0_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,91,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLongBoundElementAccess().getFullStopFullStopKeyword_1());
              		
            }
            // InternalTurn.g:5907:3: ( (lv_to_2_0= ruleQualifiedName ) )
            // InternalTurn.g:5908:4: (lv_to_2_0= ruleQualifiedName )
            {
            // InternalTurn.g:5908:4: (lv_to_2_0= ruleQualifiedName )
            // InternalTurn.g:5909:5: lv_to_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLongBoundElementAccess().getToQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_to_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLongBoundElementRule());
              					}
              					set(
              						current,
              						"to",
              						lv_to_2_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLongBoundElement"


    // $ANTLR start "entryRuleBinding"
    // InternalTurn.g:5930:1: entryRuleBinding returns [EObject current=null] : iv_ruleBinding= ruleBinding EOF ;
    public final EObject entryRuleBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinding = null;


        try {
            // InternalTurn.g:5930:48: (iv_ruleBinding= ruleBinding EOF )
            // InternalTurn.g:5931:2: iv_ruleBinding= ruleBinding EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinding=ruleBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinding"


    // $ANTLR start "ruleBinding"
    // InternalTurn.g:5937:1: ruleBinding returns [EObject current=null] : (this_InBinding_0= ruleInBinding | this_OutBinding_1= ruleOutBinding | this_ComponentBinding_2= ruleComponentBinding ) ;
    public final EObject ruleBinding() throws RecognitionException {
        EObject current = null;

        EObject this_InBinding_0 = null;

        EObject this_OutBinding_1 = null;

        EObject this_ComponentBinding_2 = null;



        	enterRule();

        try {
            // InternalTurn.g:5943:2: ( (this_InBinding_0= ruleInBinding | this_OutBinding_1= ruleOutBinding | this_ComponentBinding_2= ruleComponentBinding ) )
            // InternalTurn.g:5944:2: (this_InBinding_0= ruleInBinding | this_OutBinding_1= ruleOutBinding | this_ComponentBinding_2= ruleComponentBinding )
            {
            // InternalTurn.g:5944:2: (this_InBinding_0= ruleInBinding | this_OutBinding_1= ruleOutBinding | this_ComponentBinding_2= ruleComponentBinding )
            int alt113=3;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalTurn.g:5945:3: this_InBinding_0= ruleInBinding
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBindingAccess().getInBindingParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InBinding_0=ruleInBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InBinding_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:5954:3: this_OutBinding_1= ruleOutBinding
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBindingAccess().getOutBindingParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OutBinding_1=ruleOutBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OutBinding_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:5963:3: this_ComponentBinding_2= ruleComponentBinding
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBindingAccess().getComponentBindingParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComponentBinding_2=ruleComponentBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComponentBinding_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinding"


    // $ANTLR start "entryRuleInBinding"
    // InternalTurn.g:5975:1: entryRuleInBinding returns [EObject current=null] : iv_ruleInBinding= ruleInBinding EOF ;
    public final EObject entryRuleInBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInBinding = null;


        try {
            // InternalTurn.g:5975:50: (iv_ruleInBinding= ruleInBinding EOF )
            // InternalTurn.g:5976:2: iv_ruleInBinding= ruleInBinding EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInBinding=ruleInBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInBinding"


    // $ANTLR start "ruleInBinding"
    // InternalTurn.g:5982:1: ruleInBinding returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) ) ) ;
    public final EObject ruleInBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_index_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:5988:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) ) ) )
            // InternalTurn.g:5989:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) ) )
            {
            // InternalTurn.g:5989:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) ) )
            // InternalTurn.g:5990:3: ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )
            {
            // InternalTurn.g:5990:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:5991:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:5991:4: ( ruleQualifiedName )
            // InternalTurn.g:5992:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getInBindingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInBindingAccess().getMapStartStartPointCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,33,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInBindingAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalTurn.g:6010:3: (otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) ) )
            // InternalTurn.g:6011:4: otherlv_2= 'in' ( (lv_index_3_0= rulePositiveInteger ) )
            {
            otherlv_2=(Token)match(input,67,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getInBindingAccess().getInKeyword_2_0());
              			
            }
            // InternalTurn.g:6015:4: ( (lv_index_3_0= rulePositiveInteger ) )
            // InternalTurn.g:6016:5: (lv_index_3_0= rulePositiveInteger )
            {
            // InternalTurn.g:6016:5: (lv_index_3_0= rulePositiveInteger )
            // InternalTurn.g:6017:6: lv_index_3_0= rulePositiveInteger
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getInBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0());
              					
            }
            pushFollow(FOLLOW_2);
            lv_index_3_0=rulePositiveInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getInBindingRule());
              						}
              						set(
              							current,
              							"index",
              							lv_index_3_0,
              							"org.xtext.project.turn.Turn.PositiveInteger");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInBinding"


    // $ANTLR start "entryRuleOutBinding"
    // InternalTurn.g:6039:1: entryRuleOutBinding returns [EObject current=null] : iv_ruleOutBinding= ruleOutBinding EOF ;
    public final EObject entryRuleOutBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutBinding = null;


        try {
            // InternalTurn.g:6039:51: (iv_ruleOutBinding= ruleOutBinding EOF )
            // InternalTurn.g:6040:2: iv_ruleOutBinding= ruleOutBinding EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOutBinding=ruleOutBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutBinding"


    // $ANTLR start "ruleOutBinding"
    // InternalTurn.g:6046:1: ruleOutBinding returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) ) ) ) ;
    public final EObject ruleOutBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_index_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6052:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) ) ) ) )
            // InternalTurn.g:6053:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) ) ) )
            {
            // InternalTurn.g:6053:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) ) ) )
            // InternalTurn.g:6054:3: ( ( ruleQualifiedName ) ) otherlv_1= '=' (otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) ) )
            {
            // InternalTurn.g:6054:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:6055:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:6055:4: ( ruleQualifiedName )
            // InternalTurn.g:6056:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOutBindingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutBindingAccess().getMapEndEndPointCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,33,FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOutBindingAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalTurn.g:6074:3: (otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) ) )
            // InternalTurn.g:6075:4: otherlv_2= 'out' ( (lv_index_3_0= rulePositiveInteger ) )
            {
            otherlv_2=(Token)match(input,88,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getOutBindingAccess().getOutKeyword_2_0());
              			
            }
            // InternalTurn.g:6079:4: ( (lv_index_3_0= rulePositiveInteger ) )
            // InternalTurn.g:6080:5: (lv_index_3_0= rulePositiveInteger )
            {
            // InternalTurn.g:6080:5: (lv_index_3_0= rulePositiveInteger )
            // InternalTurn.g:6081:6: lv_index_3_0= rulePositiveInteger
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getOutBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0());
              					
            }
            pushFollow(FOLLOW_2);
            lv_index_3_0=rulePositiveInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getOutBindingRule());
              						}
              						set(
              							current,
              							"index",
              							lv_index_3_0,
              							"org.xtext.project.turn.Turn.PositiveInteger");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutBinding"


    // $ANTLR start "entryRuleComponentBinding"
    // InternalTurn.g:6103:1: entryRuleComponentBinding returns [EObject current=null] : iv_ruleComponentBinding= ruleComponentBinding EOF ;
    public final EObject entryRuleComponentBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentBinding = null;


        try {
            // InternalTurn.g:6103:57: (iv_ruleComponentBinding= ruleComponentBinding EOF )
            // InternalTurn.g:6104:2: iv_ruleComponentBinding= ruleComponentBinding EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComponentBinding=ruleComponentBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentBinding"


    // $ANTLR start "ruleComponentBinding"
    // InternalTurn.g:6110:1: ruleComponentBinding returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) otherlv_1= '=' ( ( ruleQualifiedName ) ) ) ;
    public final EObject ruleComponentBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalTurn.g:6116:2: ( ( ( ( ruleQualifiedName ) ) otherlv_1= '=' ( ( ruleQualifiedName ) ) ) )
            // InternalTurn.g:6117:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '=' ( ( ruleQualifiedName ) ) )
            {
            // InternalTurn.g:6117:2: ( ( ( ruleQualifiedName ) ) otherlv_1= '=' ( ( ruleQualifiedName ) ) )
            // InternalTurn.g:6118:3: ( ( ruleQualifiedName ) ) otherlv_1= '=' ( ( ruleQualifiedName ) )
            {
            // InternalTurn.g:6118:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:6119:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:6119:4: ( ruleQualifiedName )
            // InternalTurn.g:6120:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getComponentBindingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getComponentBindingAccess().getComponentInComponentRefCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,33,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getComponentBindingAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalTurn.g:6138:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:6139:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:6139:4: ( ruleQualifiedName )
            // InternalTurn.g:6140:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getComponentBindingRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getComponentBindingAccess().getComponentOutComponentRefCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentBinding"


    // $ANTLR start "entryRuleFailureLabel"
    // InternalTurn.g:6158:1: entryRuleFailureLabel returns [EObject current=null] : iv_ruleFailureLabel= ruleFailureLabel EOF ;
    public final EObject entryRuleFailureLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFailureLabel = null;


        try {
            // InternalTurn.g:6158:53: (iv_ruleFailureLabel= ruleFailureLabel EOF )
            // InternalTurn.g:6159:2: iv_ruleFailureLabel= ruleFailureLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFailureLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFailureLabel=ruleFailureLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFailureLabel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFailureLabel"


    // $ANTLR start "ruleFailureLabel"
    // InternalTurn.g:6165:1: ruleFailureLabel returns [EObject current=null] : (otherlv_0= '[[' ( (lv_failure_1_0= RULE_STRING ) ) otherlv_2= ']]' ) ;
    public final EObject ruleFailureLabel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_failure_1_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalTurn.g:6171:2: ( (otherlv_0= '[[' ( (lv_failure_1_0= RULE_STRING ) ) otherlv_2= ']]' ) )
            // InternalTurn.g:6172:2: (otherlv_0= '[[' ( (lv_failure_1_0= RULE_STRING ) ) otherlv_2= ']]' )
            {
            // InternalTurn.g:6172:2: (otherlv_0= '[[' ( (lv_failure_1_0= RULE_STRING ) ) otherlv_2= ']]' )
            // InternalTurn.g:6173:3: otherlv_0= '[[' ( (lv_failure_1_0= RULE_STRING ) ) otherlv_2= ']]'
            {
            otherlv_0=(Token)match(input,62,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFailureLabelAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
              		
            }
            // InternalTurn.g:6177:3: ( (lv_failure_1_0= RULE_STRING ) )
            // InternalTurn.g:6178:4: (lv_failure_1_0= RULE_STRING )
            {
            // InternalTurn.g:6178:4: (lv_failure_1_0= RULE_STRING )
            // InternalTurn.g:6179:5: lv_failure_1_0= RULE_STRING
            {
            lv_failure_1_0=(Token)match(input,RULE_STRING,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_failure_1_0, grammarAccess.getFailureLabelAccess().getFailureSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFailureLabelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"failure",
              						lv_failure_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFailureLabelAccess().getRightSquareBracketRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFailureLabel"


    // $ANTLR start "entryRuleStubType"
    // InternalTurn.g:6203:1: entryRuleStubType returns [String current=null] : iv_ruleStubType= ruleStubType EOF ;
    public final String entryRuleStubType() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStubType = null;


        try {
            // InternalTurn.g:6203:48: (iv_ruleStubType= ruleStubType EOF )
            // InternalTurn.g:6204:2: iv_ruleStubType= ruleStubType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStubTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStubType=ruleStubType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStubType.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStubType"


    // $ANTLR start "ruleStubType"
    // InternalTurn.g:6210:1: ruleStubType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'blocking' | kw= 'synchronizing' ) ;
    public final AntlrDatatypeRuleToken ruleStubType() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:6216:2: ( (kw= 'blocking' | kw= 'synchronizing' ) )
            // InternalTurn.g:6217:2: (kw= 'blocking' | kw= 'synchronizing' )
            {
            // InternalTurn.g:6217:2: (kw= 'blocking' | kw= 'synchronizing' )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==92) ) {
                alt114=1;
            }
            else if ( (LA114_0==93) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalTurn.g:6218:3: kw= 'blocking'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStubTypeAccess().getBlockingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:6224:3: kw= 'synchronizing'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStubTypeAccess().getSynchronizingKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStubType"


    // $ANTLR start "entryRulePositiveInteger"
    // InternalTurn.g:6233:1: entryRulePositiveInteger returns [String current=null] : iv_rulePositiveInteger= rulePositiveInteger EOF ;
    public final String entryRulePositiveInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePositiveInteger = null;


        try {
            // InternalTurn.g:6233:55: (iv_rulePositiveInteger= rulePositiveInteger EOF )
            // InternalTurn.g:6234:2: iv_rulePositiveInteger= rulePositiveInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPositiveIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePositiveInteger=rulePositiveInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePositiveInteger.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePositiveInteger"


    // $ANTLR start "rulePositiveInteger"
    // InternalTurn.g:6240:1: rulePositiveInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken rulePositiveInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;


        	enterRule();

        try {
            // InternalTurn.g:6246:2: (this_INT_0= RULE_INT )
            // InternalTurn.g:6247:2: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_INT_0, grammarAccess.getPositiveIntegerAccess().getINTTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePositiveInteger"


    // $ANTLR start "entryRuleText"
    // InternalTurn.g:6257:1: entryRuleText returns [EObject current=null] : iv_ruleText= ruleText EOF ;
    public final EObject entryRuleText() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleText = null;


        try {
            // InternalTurn.g:6257:45: (iv_ruleText= ruleText EOF )
            // InternalTurn.g:6258:2: iv_ruleText= ruleText EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleText=ruleText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleText; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleText"


    // $ANTLR start "ruleText"
    // InternalTurn.g:6264:1: ruleText returns [EObject current=null] : ( (lv_content_0_0= ruleTextContent ) )+ ;
    public final EObject ruleText() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_content_0_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6270:2: ( ( (lv_content_0_0= ruleTextContent ) )+ )
            // InternalTurn.g:6271:2: ( (lv_content_0_0= ruleTextContent ) )+
            {
            // InternalTurn.g:6271:2: ( (lv_content_0_0= ruleTextContent ) )+
            int cnt115=0;
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==RULE_ID) ) {
                    int LA115_2 = input.LA(2);

                    if ( (LA115_2==EOF||(LA115_2>=RULE_ID && LA115_2<=RULE_INT)||(LA115_2>=13 && LA115_2<=14)||LA115_2==23||LA115_2==26||(LA115_2>=28 && LA115_2<=29)||LA115_2==32||LA115_2==34||(LA115_2>=42 && LA115_2<=43)||LA115_2==49||(LA115_2>=53 && LA115_2<=55)||(LA115_2>=58 && LA115_2<=59)||LA115_2==84||(LA115_2>=94 && LA115_2<=97)) ) {
                        alt115=1;
                    }


                }
                else if ( (LA115_0==RULE_INT||LA115_0==26||LA115_0==84||(LA115_0>=94 && LA115_0<=97)) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalTurn.g:6272:3: (lv_content_0_0= ruleTextContent )
            	    {
            	    // InternalTurn.g:6272:3: (lv_content_0_0= ruleTextContent )
            	    // InternalTurn.g:6273:4: lv_content_0_0= ruleTextContent
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getTextAccess().getContentTextContentParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_content_0_0=ruleTextContent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getTextRule());
            	      				}
            	      				add(
            	      					current,
            	      					"content",
            	      					lv_content_0_0,
            	      					"org.xtext.project.turn.Turn.TextContent");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt115 >= 1 ) break loop115;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(115, input);
                        throw eee;
                }
                cnt115++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleText"


    // $ANTLR start "entryRuleTextContent"
    // InternalTurn.g:6293:1: entryRuleTextContent returns [String current=null] : iv_ruleTextContent= ruleTextContent EOF ;
    public final String entryRuleTextContent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTextContent = null;


        try {
            // InternalTurn.g:6293:51: (iv_ruleTextContent= ruleTextContent EOF )
            // InternalTurn.g:6294:2: iv_ruleTextContent= ruleTextContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTextContent=ruleTextContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextContent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextContent"


    // $ANTLR start "ruleTextContent"
    // InternalTurn.g:6300:1: ruleTextContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | kw= '@' | kw= '#' | kw= '!' | kw= '%' | kw= '&' | kw= '*' | this_INT_7= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleTextContent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_INT_7=null;


        	enterRule();

        try {
            // InternalTurn.g:6306:2: ( (this_ID_0= RULE_ID | kw= '@' | kw= '#' | kw= '!' | kw= '%' | kw= '&' | kw= '*' | this_INT_7= RULE_INT ) )
            // InternalTurn.g:6307:2: (this_ID_0= RULE_ID | kw= '@' | kw= '#' | kw= '!' | kw= '%' | kw= '&' | kw= '*' | this_INT_7= RULE_INT )
            {
            // InternalTurn.g:6307:2: (this_ID_0= RULE_ID | kw= '@' | kw= '#' | kw= '!' | kw= '%' | kw= '&' | kw= '*' | this_INT_7= RULE_INT )
            int alt116=8;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt116=1;
                }
                break;
            case 94:
                {
                alt116=2;
                }
                break;
            case 26:
                {
                alt116=3;
                }
                break;
            case 95:
                {
                alt116=4;
                }
                break;
            case 96:
                {
                alt116=5;
                }
                break;
            case 97:
                {
                alt116=6;
                }
                break;
            case 84:
                {
                alt116=7;
                }
                break;
            case RULE_INT:
                {
                alt116=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }

            switch (alt116) {
                case 1 :
                    // InternalTurn.g:6308:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getTextContentAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:6316:3: kw= '@'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTextContentAccess().getCommercialAtKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:6322:3: kw= '#'
                    {
                    kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTextContentAccess().getNumberSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:6328:3: kw= '!'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTextContentAccess().getExclamationMarkKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalTurn.g:6334:3: kw= '%'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTextContentAccess().getPercentSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalTurn.g:6340:3: kw= '&'
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTextContentAccess().getAmpersandKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalTurn.g:6346:3: kw= '*'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTextContentAccess().getAsteriskKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalTurn.g:6352:3: this_INT_7= RULE_INT
                    {
                    this_INT_7=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_7, grammarAccess.getTextContentAccess().getINTTerminalRuleCall_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextContent"


    // $ANTLR start "entryRuleXExpression"
    // InternalTurn.g:6363:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalTurn.g:6363:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalTurn.g:6364:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalTurn.g:6370:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6376:2: (this_XAssignment_0= ruleXAssignment )
            // InternalTurn.g:6377:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalTurn.g:6388:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalTurn.g:6388:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalTurn.g:6389:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalTurn.g:6395:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6401:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalTurn.g:6402:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalTurn.g:6402:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt118=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA118_1 = input.LA(2);

                if ( (LA118_1==33) ) {
                    alt118=1;
                }
                else if ( (LA118_1==EOF||(LA118_1>=RULE_STRING && LA118_1<=RULE_DECIMAL)||LA118_1==15||LA118_1==22||(LA118_1>=24 && LA118_1<=28)||(LA118_1>=56 && LA118_1<=57)||LA118_1==66||LA118_1==68||LA118_1==80||LA118_1==84||(LA118_1>=86 && LA118_1<=87)||LA118_1==91||(LA118_1>=95 && LA118_1<=96)||(LA118_1>=98 && LA118_1<=149)) ) {
                    alt118=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 1, input);

                    throw nvae;
                }
                }
                break;
            case 134:
                {
                int LA118_2 = input.LA(2);

                if ( (LA118_2==33) ) {
                    alt118=1;
                }
                else if ( (LA118_2==EOF||(LA118_2>=RULE_STRING && LA118_2<=RULE_DECIMAL)||LA118_2==15||LA118_2==22||(LA118_2>=24 && LA118_2<=28)||(LA118_2>=56 && LA118_2<=57)||LA118_2==66||LA118_2==68||LA118_2==80||LA118_2==84||(LA118_2>=86 && LA118_2<=87)||LA118_2==91||(LA118_2>=95 && LA118_2<=96)||(LA118_2>=98 && LA118_2<=149)) ) {
                    alt118=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 2, input);

                    throw nvae;
                }
                }
                break;
            case 135:
                {
                int LA118_3 = input.LA(2);

                if ( (LA118_3==33) ) {
                    alt118=1;
                }
                else if ( (LA118_3==EOF||(LA118_3>=RULE_STRING && LA118_3<=RULE_DECIMAL)||LA118_3==15||LA118_3==22||(LA118_3>=24 && LA118_3<=28)||(LA118_3>=56 && LA118_3<=57)||LA118_3==66||LA118_3==68||LA118_3==80||LA118_3==84||(LA118_3>=86 && LA118_3<=87)||LA118_3==91||(LA118_3>=95 && LA118_3<=96)||(LA118_3>=98 && LA118_3<=149)) ) {
                    alt118=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 3, input);

                    throw nvae;
                }
                }
                break;
            case 136:
                {
                int LA118_4 = input.LA(2);

                if ( (LA118_4==33) ) {
                    alt118=1;
                }
                else if ( (LA118_4==EOF||(LA118_4>=RULE_STRING && LA118_4<=RULE_DECIMAL)||LA118_4==15||LA118_4==22||(LA118_4>=24 && LA118_4<=28)||(LA118_4>=56 && LA118_4<=57)||LA118_4==66||LA118_4==68||LA118_4==80||LA118_4==84||(LA118_4>=86 && LA118_4<=87)||LA118_4==91||(LA118_4>=95 && LA118_4<=96)||(LA118_4>=98 && LA118_4<=149)) ) {
                    alt118=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 4, input);

                    throw nvae;
                }
                }
                break;
            case 137:
                {
                int LA118_5 = input.LA(2);

                if ( (LA118_5==33) ) {
                    alt118=1;
                }
                else if ( (LA118_5==EOF||(LA118_5>=RULE_STRING && LA118_5<=RULE_DECIMAL)||LA118_5==15||LA118_5==22||(LA118_5>=24 && LA118_5<=28)||(LA118_5>=56 && LA118_5<=57)||LA118_5==66||LA118_5==68||LA118_5==80||LA118_5==84||(LA118_5>=86 && LA118_5<=87)||LA118_5==91||(LA118_5>=95 && LA118_5<=96)||(LA118_5>=98 && LA118_5<=149)) ) {
                    alt118=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 118, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 15:
            case 26:
            case 27:
            case 56:
            case 57:
            case 86:
            case 95:
            case 103:
            case 124:
            case 126:
            case 129:
            case 130:
            case 131:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 148:
                {
                alt118=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }

            switch (alt118) {
                case 1 :
                    // InternalTurn.g:6403:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalTurn.g:6403:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalTurn.g:6404:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalTurn.g:6404:4: ()
                    // InternalTurn.g:6405:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalTurn.g:6411:4: ( ( ruleFeatureCallID ) )
                    // InternalTurn.g:6412:5: ( ruleFeatureCallID )
                    {
                    // InternalTurn.g:6412:5: ( ruleFeatureCallID )
                    // InternalTurn.g:6413:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_113);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalTurn.g:6434:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalTurn.g:6435:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalTurn.g:6435:5: (lv_value_3_0= ruleXAssignment )
                    // InternalTurn.g:6436:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:6455:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalTurn.g:6455:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalTurn.g:6456:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_114);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalTurn.g:6464:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt117=2;
                    alt117 = dfa117.predict(input);
                    switch (alt117) {
                        case 1 :
                            // InternalTurn.g:6465:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalTurn.g:6465:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalTurn.g:6466:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalTurn.g:6476:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalTurn.g:6477:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalTurn.g:6477:7: ()
                            // InternalTurn.g:6478:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalTurn.g:6484:7: ( ( ruleOpMultiAssign ) )
                            // InternalTurn.g:6485:8: ( ruleOpMultiAssign )
                            {
                            // InternalTurn.g:6485:8: ( ruleOpMultiAssign )
                            // InternalTurn.g:6486:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_113);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalTurn.g:6502:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalTurn.g:6503:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalTurn.g:6503:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalTurn.g:6504:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalTurn.g:6527:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalTurn.g:6527:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalTurn.g:6528:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalTurn.g:6534:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:6540:2: (kw= '=' )
            // InternalTurn.g:6541:2: kw= '='
            {
            kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalTurn.g:6549:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalTurn.g:6549:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalTurn.g:6550:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalTurn.g:6556:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:6562:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalTurn.g:6563:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalTurn.g:6563:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt120=7;
            switch ( input.LA(1) ) {
            case 98:
                {
                alt120=1;
                }
                break;
            case 99:
                {
                alt120=2;
                }
                break;
            case 100:
                {
                alt120=3;
                }
                break;
            case 101:
                {
                alt120=4;
                }
                break;
            case 102:
                {
                alt120=5;
                }
                break;
            case 103:
                {
                alt120=6;
                }
                break;
            case 104:
                {
                alt120=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalTurn.g:6564:3: kw= '+='
                    {
                    kw=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:6570:3: kw= '-='
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:6576:3: kw= '*='
                    {
                    kw=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:6582:3: kw= '/='
                    {
                    kw=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalTurn.g:6588:3: kw= '%='
                    {
                    kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalTurn.g:6594:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalTurn.g:6594:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalTurn.g:6595:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,103,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,103,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalTurn.g:6612:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalTurn.g:6612:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalTurn.g:6613:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,104,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalTurn.g:6618:4: (kw= '>' )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==104) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalTurn.g:6619:5: kw= '>'
                            {
                            kw=(Token)match(input,104,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalTurn.g:6635:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalTurn.g:6635:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalTurn.g:6636:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalTurn.g:6642:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6648:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalTurn.g:6649:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalTurn.g:6649:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalTurn.g:6650:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_118);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:6658:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==106) ) {
                    int LA121_2 = input.LA(2);

                    if ( (synpred2_InternalTurn()) ) {
                        alt121=1;
                    }


                }


                switch (alt121) {
            	case 1 :
            	    // InternalTurn.g:6659:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalTurn.g:6659:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalTurn.g:6660:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalTurn.g:6670:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalTurn.g:6671:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalTurn.g:6671:6: ()
            	    // InternalTurn.g:6672:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalTurn.g:6678:6: ( ( ruleOpOr ) )
            	    // InternalTurn.g:6679:7: ( ruleOpOr )
            	    {
            	    // InternalTurn.g:6679:7: ( ruleOpOr )
            	    // InternalTurn.g:6680:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:6696:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalTurn.g:6697:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalTurn.g:6697:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalTurn.g:6698:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalTurn.g:6720:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalTurn.g:6720:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalTurn.g:6721:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalTurn.g:6727:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:6733:2: (kw= '||' )
            // InternalTurn.g:6734:2: kw= '||'
            {
            kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalTurn.g:6742:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalTurn.g:6742:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalTurn.g:6743:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalTurn.g:6749:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6755:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalTurn.g:6756:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalTurn.g:6756:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalTurn.g:6757:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_119);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:6765:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==107) ) {
                    int LA122_2 = input.LA(2);

                    if ( (synpred3_InternalTurn()) ) {
                        alt122=1;
                    }


                }


                switch (alt122) {
            	case 1 :
            	    // InternalTurn.g:6766:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalTurn.g:6766:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalTurn.g:6767:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalTurn.g:6777:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalTurn.g:6778:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalTurn.g:6778:6: ()
            	    // InternalTurn.g:6779:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalTurn.g:6785:6: ( ( ruleOpAnd ) )
            	    // InternalTurn.g:6786:7: ( ruleOpAnd )
            	    {
            	    // InternalTurn.g:6786:7: ( ruleOpAnd )
            	    // InternalTurn.g:6787:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:6803:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalTurn.g:6804:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalTurn.g:6804:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalTurn.g:6805:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalTurn.g:6827:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalTurn.g:6827:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalTurn.g:6828:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalTurn.g:6834:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:6840:2: (kw= '&&' )
            // InternalTurn.g:6841:2: kw= '&&'
            {
            kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalTurn.g:6849:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalTurn.g:6849:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalTurn.g:6850:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalTurn.g:6856:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6862:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalTurn.g:6863:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalTurn.g:6863:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalTurn.g:6864:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_120);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:6872:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop123:
            do {
                int alt123=2;
                switch ( input.LA(1) ) {
                case 108:
                    {
                    int LA123_2 = input.LA(2);

                    if ( (synpred4_InternalTurn()) ) {
                        alt123=1;
                    }


                    }
                    break;
                case 109:
                    {
                    int LA123_3 = input.LA(2);

                    if ( (synpred4_InternalTurn()) ) {
                        alt123=1;
                    }


                    }
                    break;
                case 110:
                    {
                    int LA123_4 = input.LA(2);

                    if ( (synpred4_InternalTurn()) ) {
                        alt123=1;
                    }


                    }
                    break;
                case 111:
                    {
                    int LA123_5 = input.LA(2);

                    if ( (synpred4_InternalTurn()) ) {
                        alt123=1;
                    }


                    }
                    break;

                }

                switch (alt123) {
            	case 1 :
            	    // InternalTurn.g:6873:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalTurn.g:6873:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalTurn.g:6874:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalTurn.g:6884:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalTurn.g:6885:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalTurn.g:6885:6: ()
            	    // InternalTurn.g:6886:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalTurn.g:6892:6: ( ( ruleOpEquality ) )
            	    // InternalTurn.g:6893:7: ( ruleOpEquality )
            	    {
            	    // InternalTurn.g:6893:7: ( ruleOpEquality )
            	    // InternalTurn.g:6894:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:6910:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalTurn.g:6911:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalTurn.g:6911:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalTurn.g:6912:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalTurn.g:6934:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalTurn.g:6934:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalTurn.g:6935:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalTurn.g:6941:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:6947:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalTurn.g:6948:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalTurn.g:6948:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt124=4;
            switch ( input.LA(1) ) {
            case 108:
                {
                alt124=1;
                }
                break;
            case 109:
                {
                alt124=2;
                }
                break;
            case 110:
                {
                alt124=3;
                }
                break;
            case 111:
                {
                alt124=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }

            switch (alt124) {
                case 1 :
                    // InternalTurn.g:6949:3: kw= '=='
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:6955:3: kw= '!='
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:6961:3: kw= '==='
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:6967:3: kw= '!=='
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalTurn.g:6976:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalTurn.g:6976:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalTurn.g:6977:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalTurn.g:6983:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:6989:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalTurn.g:6990:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalTurn.g:6990:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalTurn.g:6991:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_121);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:6999:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop125:
            do {
                int alt125=3;
                switch ( input.LA(1) ) {
                case 103:
                    {
                    int LA125_2 = input.LA(2);

                    if ( (synpred6_InternalTurn()) ) {
                        alt125=2;
                    }


                    }
                    break;
                case 104:
                    {
                    int LA125_3 = input.LA(2);

                    if ( (synpred6_InternalTurn()) ) {
                        alt125=2;
                    }


                    }
                    break;
                case 112:
                    {
                    int LA125_4 = input.LA(2);

                    if ( (synpred5_InternalTurn()) ) {
                        alt125=1;
                    }


                    }
                    break;
                case 105:
                    {
                    int LA125_5 = input.LA(2);

                    if ( (synpred6_InternalTurn()) ) {
                        alt125=2;
                    }


                    }
                    break;

                }

                switch (alt125) {
            	case 1 :
            	    // InternalTurn.g:7000:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalTurn.g:7000:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalTurn.g:7001:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalTurn.g:7001:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalTurn.g:7002:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalTurn.g:7008:6: ( () otherlv_2= 'instanceof' )
            	    // InternalTurn.g:7009:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalTurn.g:7009:7: ()
            	    // InternalTurn.g:7010:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,112,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalTurn.g:7022:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalTurn.g:7023:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalTurn.g:7023:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalTurn.g:7024:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalTurn.g:7043:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalTurn.g:7043:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalTurn.g:7044:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalTurn.g:7044:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalTurn.g:7045:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalTurn.g:7055:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalTurn.g:7056:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalTurn.g:7056:7: ()
            	    // InternalTurn.g:7057:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalTurn.g:7063:7: ( ( ruleOpCompare ) )
            	    // InternalTurn.g:7064:8: ( ruleOpCompare )
            	    {
            	    // InternalTurn.g:7064:8: ( ruleOpCompare )
            	    // InternalTurn.g:7065:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:7081:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalTurn.g:7082:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalTurn.g:7082:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalTurn.g:7083:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalTurn.g:7106:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalTurn.g:7106:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalTurn.g:7107:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalTurn.g:7113:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:7119:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalTurn.g:7120:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalTurn.g:7120:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt126=4;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt126=1;
                }
                break;
            case 103:
                {
                int LA126_2 = input.LA(2);

                if ( (LA126_2==EOF||(LA126_2>=RULE_STRING && LA126_2<=RULE_DECIMAL)||LA126_2==15||(LA126_2>=26 && LA126_2<=27)||(LA126_2>=56 && LA126_2<=57)||LA126_2==86||LA126_2==95||LA126_2==103||LA126_2==124||LA126_2==126||(LA126_2>=129 && LA126_2<=131)||(LA126_2>=134 && LA126_2<=146)||LA126_2==148) ) {
                    alt126=4;
                }
                else if ( (LA126_2==33) ) {
                    alt126=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 2, input);

                    throw nvae;
                }
                }
                break;
            case 104:
                {
                alt126=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }

            switch (alt126) {
                case 1 :
                    // InternalTurn.g:7121:3: kw= '>='
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:7127:3: (kw= '<' kw= '=' )
                    {
                    // InternalTurn.g:7127:3: (kw= '<' kw= '=' )
                    // InternalTurn.g:7128:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,103,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:7140:3: kw= '>'
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:7146:3: kw= '<'
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalTurn.g:7155:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalTurn.g:7155:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalTurn.g:7156:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalTurn.g:7162:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:7168:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalTurn.g:7169:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalTurn.g:7169:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalTurn.g:7170:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:7178:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop127:
            do {
                int alt127=2;
                alt127 = dfa127.predict(input);
                switch (alt127) {
            	case 1 :
            	    // InternalTurn.g:7179:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalTurn.g:7179:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalTurn.g:7180:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalTurn.g:7190:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalTurn.g:7191:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalTurn.g:7191:6: ()
            	    // InternalTurn.g:7192:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalTurn.g:7198:6: ( ( ruleOpOther ) )
            	    // InternalTurn.g:7199:7: ( ruleOpOther )
            	    {
            	    // InternalTurn.g:7199:7: ( ruleOpOther )
            	    // InternalTurn.g:7200:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:7216:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalTurn.g:7217:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalTurn.g:7217:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalTurn.g:7218:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalTurn.g:7240:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalTurn.g:7240:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalTurn.g:7241:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalTurn.g:7247:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:7253:2: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalTurn.g:7254:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalTurn.g:7254:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt130=9;
            alt130 = dfa130.predict(input);
            switch (alt130) {
                case 1 :
                    // InternalTurn.g:7255:3: kw= '->'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:7261:3: kw= '..<'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:7267:3: (kw= '>' kw= '..' )
                    {
                    // InternalTurn.g:7267:3: (kw= '>' kw= '..' )
                    // InternalTurn.g:7268:4: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,104,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalTurn.g:7280:3: kw= '..'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalTurn.g:7286:3: kw= '=>'
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalTurn.g:7292:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalTurn.g:7292:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalTurn.g:7293:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,104,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalTurn.g:7298:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==104) ) {
                        int LA128_1 = input.LA(2);

                        if ( (LA128_1==EOF||(LA128_1>=RULE_STRING && LA128_1<=RULE_DECIMAL)||LA128_1==15||(LA128_1>=26 && LA128_1<=27)||(LA128_1>=56 && LA128_1<=57)||LA128_1==86||LA128_1==95||LA128_1==103||LA128_1==124||LA128_1==126||(LA128_1>=129 && LA128_1<=131)||(LA128_1>=134 && LA128_1<=146)||LA128_1==148) ) {
                            alt128=2;
                        }
                        else if ( (LA128_1==104) && (synpred8_InternalTurn())) {
                            alt128=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 128, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 128, 0, input);

                        throw nvae;
                    }
                    switch (alt128) {
                        case 1 :
                            // InternalTurn.g:7299:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalTurn.g:7299:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalTurn.g:7300:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalTurn.g:7305:6: (kw= '>' kw= '>' )
                            // InternalTurn.g:7306:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,104,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:7319:5: kw= '>'
                            {
                            kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalTurn.g:7327:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalTurn.g:7327:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalTurn.g:7328:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,103,FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalTurn.g:7333:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt129=3;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==103) ) {
                        int LA129_1 = input.LA(2);

                        if ( (synpred9_InternalTurn()) ) {
                            alt129=1;
                        }
                        else if ( (true) ) {
                            alt129=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 129, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA129_0==114) ) {
                        alt129=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                        throw nvae;
                    }
                    switch (alt129) {
                        case 1 :
                            // InternalTurn.g:7334:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalTurn.g:7334:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalTurn.g:7335:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalTurn.g:7340:6: (kw= '<' kw= '<' )
                            // InternalTurn.g:7341:7: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,103,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:7354:5: kw= '<'
                            {
                            kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalTurn.g:7360:5: kw= '=>'
                            {
                            kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalTurn.g:7368:3: kw= '<>'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalTurn.g:7374:3: kw= '?:'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalTurn.g:7383:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalTurn.g:7383:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalTurn.g:7384:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalTurn.g:7390:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:7396:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalTurn.g:7397:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalTurn.g:7397:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalTurn.g:7398:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_126);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:7406:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==57) ) {
                    int LA131_2 = input.LA(2);

                    if ( (synpred10_InternalTurn()) ) {
                        alt131=1;
                    }


                }
                else if ( (LA131_0==56) ) {
                    int LA131_3 = input.LA(2);

                    if ( (synpred10_InternalTurn()) ) {
                        alt131=1;
                    }


                }


                switch (alt131) {
            	case 1 :
            	    // InternalTurn.g:7407:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalTurn.g:7407:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalTurn.g:7408:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalTurn.g:7418:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalTurn.g:7419:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalTurn.g:7419:6: ()
            	    // InternalTurn.g:7420:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalTurn.g:7426:6: ( ( ruleOpAdd ) )
            	    // InternalTurn.g:7427:7: ( ruleOpAdd )
            	    {
            	    // InternalTurn.g:7427:7: ( ruleOpAdd )
            	    // InternalTurn.g:7428:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:7444:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalTurn.g:7445:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalTurn.g:7445:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalTurn.g:7446:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalTurn.g:7468:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalTurn.g:7468:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalTurn.g:7469:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalTurn.g:7475:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:7481:2: ( (kw= '+' | kw= '-' ) )
            // InternalTurn.g:7482:2: (kw= '+' | kw= '-' )
            {
            // InternalTurn.g:7482:2: (kw= '+' | kw= '-' )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==57) ) {
                alt132=1;
            }
            else if ( (LA132_0==56) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalTurn.g:7483:3: kw= '+'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:7489:3: kw= '-'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalTurn.g:7498:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalTurn.g:7498:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalTurn.g:7499:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalTurn.g:7505:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:7511:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalTurn.g:7512:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalTurn.g:7512:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalTurn.g:7513:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:7521:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop133:
            do {
                int alt133=2;
                switch ( input.LA(1) ) {
                case 84:
                    {
                    int LA133_2 = input.LA(2);

                    if ( (synpred11_InternalTurn()) ) {
                        alt133=1;
                    }


                    }
                    break;
                case 117:
                    {
                    int LA133_3 = input.LA(2);

                    if ( (synpred11_InternalTurn()) ) {
                        alt133=1;
                    }


                    }
                    break;
                case 118:
                    {
                    int LA133_4 = input.LA(2);

                    if ( (synpred11_InternalTurn()) ) {
                        alt133=1;
                    }


                    }
                    break;
                case 96:
                    {
                    int LA133_5 = input.LA(2);

                    if ( (synpred11_InternalTurn()) ) {
                        alt133=1;
                    }


                    }
                    break;

                }

                switch (alt133) {
            	case 1 :
            	    // InternalTurn.g:7522:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalTurn.g:7522:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalTurn.g:7523:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalTurn.g:7533:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalTurn.g:7534:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalTurn.g:7534:6: ()
            	    // InternalTurn.g:7535:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalTurn.g:7541:6: ( ( ruleOpMulti ) )
            	    // InternalTurn.g:7542:7: ( ruleOpMulti )
            	    {
            	    // InternalTurn.g:7542:7: ( ruleOpMulti )
            	    // InternalTurn.g:7543:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalTurn.g:7559:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalTurn.g:7560:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalTurn.g:7560:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalTurn.g:7561:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalTurn.g:7583:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalTurn.g:7583:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalTurn.g:7584:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalTurn.g:7590:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:7596:2: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalTurn.g:7597:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalTurn.g:7597:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt134=4;
            switch ( input.LA(1) ) {
            case 84:
                {
                alt134=1;
                }
                break;
            case 117:
                {
                alt134=2;
                }
                break;
            case 118:
                {
                alt134=3;
                }
                break;
            case 96:
                {
                alt134=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }

            switch (alt134) {
                case 1 :
                    // InternalTurn.g:7598:3: kw= '*'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:7604:3: kw= '**'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:7610:3: kw= '/'
                    {
                    kw=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:7616:3: kw= '%'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalTurn.g:7625:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalTurn.g:7625:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalTurn.g:7626:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalTurn.g:7632:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalTurn.g:7638:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalTurn.g:7639:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalTurn.g:7639:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( ((LA135_0>=56 && LA135_0<=57)||LA135_0==95) ) {
                alt135=1;
            }
            else if ( ((LA135_0>=RULE_STRING && LA135_0<=RULE_DECIMAL)||LA135_0==15||(LA135_0>=26 && LA135_0<=27)||LA135_0==86||LA135_0==103||LA135_0==124||LA135_0==126||(LA135_0>=129 && LA135_0<=131)||(LA135_0>=134 && LA135_0<=146)||LA135_0==148) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalTurn.g:7640:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalTurn.g:7640:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalTurn.g:7641:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalTurn.g:7641:4: ()
                    // InternalTurn.g:7642:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalTurn.g:7648:4: ( ( ruleOpUnary ) )
                    // InternalTurn.g:7649:5: ( ruleOpUnary )
                    {
                    // InternalTurn.g:7649:5: ( ruleOpUnary )
                    // InternalTurn.g:7650:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_113);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:7664:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalTurn.g:7665:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalTurn.g:7665:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalTurn.g:7666:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:7685:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalTurn.g:7697:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalTurn.g:7697:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalTurn.g:7698:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalTurn.g:7704:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:7710:2: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalTurn.g:7711:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalTurn.g:7711:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt136=3;
            switch ( input.LA(1) ) {
            case 95:
                {
                alt136=1;
                }
                break;
            case 56:
                {
                alt136=2;
                }
                break;
            case 57:
                {
                alt136=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }

            switch (alt136) {
                case 1 :
                    // InternalTurn.g:7712:3: kw= '!'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:7718:3: kw= '-'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:7724:3: kw= '+'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalTurn.g:7733:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalTurn.g:7733:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalTurn.g:7734:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalTurn.g:7740:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:7746:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalTurn.g:7747:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalTurn.g:7747:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalTurn.g:7748:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:7756:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==119) ) {
                    int LA137_2 = input.LA(2);

                    if ( (synpred12_InternalTurn()) ) {
                        alt137=1;
                    }


                }


                switch (alt137) {
            	case 1 :
            	    // InternalTurn.g:7757:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalTurn.g:7757:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalTurn.g:7758:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalTurn.g:7764:5: ( () otherlv_2= 'as' )
            	    // InternalTurn.g:7765:6: () otherlv_2= 'as'
            	    {
            	    // InternalTurn.g:7765:6: ()
            	    // InternalTurn.g:7766:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,119,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalTurn.g:7778:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalTurn.g:7779:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalTurn.g:7779:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalTurn.g:7780:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalTurn.g:7802:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalTurn.g:7802:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalTurn.g:7803:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalTurn.g:7809:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:7815:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalTurn.g:7816:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalTurn.g:7816:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalTurn.g:7817:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:7825:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==120) ) {
                int LA138_1 = input.LA(2);

                if ( (synpred13_InternalTurn()) ) {
                    alt138=1;
                }
            }
            else if ( (LA138_0==121) ) {
                int LA138_2 = input.LA(2);

                if ( (synpred13_InternalTurn()) ) {
                    alt138=1;
                }
            }
            switch (alt138) {
                case 1 :
                    // InternalTurn.g:7826:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalTurn.g:7836:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalTurn.g:7837:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalTurn.g:7837:5: ()
                    // InternalTurn.g:7838:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalTurn.g:7844:5: ( ( ruleOpPostfix ) )
                    // InternalTurn.g:7845:6: ( ruleOpPostfix )
                    {
                    // InternalTurn.g:7845:6: ( ruleOpPostfix )
                    // InternalTurn.g:7846:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalTurn.g:7866:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalTurn.g:7866:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalTurn.g:7867:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalTurn.g:7873:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:7879:2: ( (kw= '++' | kw= '--' ) )
            // InternalTurn.g:7880:2: (kw= '++' | kw= '--' )
            {
            // InternalTurn.g:7880:2: (kw= '++' | kw= '--' )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==120) ) {
                alt139=1;
            }
            else if ( (LA139_0==121) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalTurn.g:7881:3: kw= '++'
                    {
                    kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:7887:3: kw= '--'
                    {
                    kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalTurn.g:7896:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalTurn.g:7896:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalTurn.g:7897:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalTurn.g:7903:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:7909:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalTurn.g:7910:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalTurn.g:7910:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalTurn.g:7911:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_130);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:7919:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop148:
            do {
                int alt148=3;
                switch ( input.LA(1) ) {
                case 80:
                    {
                    int LA148_2 = input.LA(2);

                    if ( (synpred14_InternalTurn()) ) {
                        alt148=1;
                    }
                    else if ( (synpred15_InternalTurn()) ) {
                        alt148=2;
                    }


                    }
                    break;
                case 122:
                    {
                    int LA148_3 = input.LA(2);

                    if ( (synpred14_InternalTurn()) ) {
                        alt148=1;
                    }
                    else if ( (synpred15_InternalTurn()) ) {
                        alt148=2;
                    }


                    }
                    break;
                case 123:
                    {
                    int LA148_4 = input.LA(2);

                    if ( (synpred15_InternalTurn()) ) {
                        alt148=2;
                    }


                    }
                    break;

                }

                switch (alt148) {
            	case 1 :
            	    // InternalTurn.g:7920:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalTurn.g:7920:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalTurn.g:7921:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalTurn.g:7921:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalTurn.g:7922:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalTurn.g:7942:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalTurn.g:7943:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalTurn.g:7943:7: ()
            	    // InternalTurn.g:7944:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalTurn.g:7950:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt140=2;
            	    int LA140_0 = input.LA(1);

            	    if ( (LA140_0==80) ) {
            	        alt140=1;
            	    }
            	    else if ( (LA140_0==122) ) {
            	        alt140=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 140, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt140) {
            	        case 1 :
            	            // InternalTurn.g:7951:8: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,80,FOLLOW_131); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalTurn.g:7956:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalTurn.g:7956:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalTurn.g:7957:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalTurn.g:7957:9: (lv_explicitStatic_3_0= '::' )
            	            // InternalTurn.g:7958:10: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,122,FOLLOW_131); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalTurn.g:7971:7: ( ( ruleFeatureCallID ) )
            	    // InternalTurn.g:7972:8: ( ruleFeatureCallID )
            	    {
            	    // InternalTurn.g:7972:8: ( ruleFeatureCallID )
            	    // InternalTurn.g:7973:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_24);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_113);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalTurn.g:7996:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalTurn.g:7997:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalTurn.g:7997:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalTurn.g:7998:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalTurn.g:8017:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalTurn.g:8017:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalTurn.g:8018:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalTurn.g:8018:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalTurn.g:8019:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalTurn.g:8039:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalTurn.g:8040:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalTurn.g:8040:7: ()
            	    // InternalTurn.g:8041:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalTurn.g:8047:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt141=3;
            	    switch ( input.LA(1) ) {
            	    case 80:
            	        {
            	        alt141=1;
            	        }
            	        break;
            	    case 123:
            	        {
            	        alt141=2;
            	        }
            	        break;
            	    case 122:
            	        {
            	        alt141=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 141, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt141) {
            	        case 1 :
            	            // InternalTurn.g:8048:8: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,80,FOLLOW_132); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalTurn.g:8053:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalTurn.g:8053:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalTurn.g:8054:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalTurn.g:8054:9: (lv_nullSafe_9_0= '?.' )
            	            // InternalTurn.g:8055:10: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,123,FOLLOW_132); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", true, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalTurn.g:8068:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalTurn.g:8068:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalTurn.g:8069:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalTurn.g:8069:9: (lv_explicitStatic_10_0= '::' )
            	            // InternalTurn.g:8070:10: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,122,FOLLOW_132); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalTurn.g:8085:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt143=2;
            	    int LA143_0 = input.LA(1);

            	    if ( (LA143_0==103) ) {
            	        alt143=1;
            	    }
            	    switch (alt143) {
            	        case 1 :
            	            // InternalTurn.g:8086:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,103,FOLLOW_133); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalTurn.g:8090:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalTurn.g:8091:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalTurn.g:8091:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalTurn.g:8092:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_134);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalTurn.g:8109:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop142:
            	            do {
            	                int alt142=2;
            	                int LA142_0 = input.LA(1);

            	                if ( (LA142_0==25) ) {
            	                    alt142=1;
            	                }


            	                switch (alt142) {
            	            	case 1 :
            	            	    // InternalTurn.g:8110:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,25,FOLLOW_133); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalTurn.g:8114:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalTurn.g:8115:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalTurn.g:8115:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalTurn.g:8116:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_134);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop142;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,104,FOLLOW_132); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalTurn.g:8139:5: ( ( ruleIdOrSuper ) )
            	    // InternalTurn.g:8140:6: ( ruleIdOrSuper )
            	    {
            	    // InternalTurn.g:8140:6: ( ruleIdOrSuper )
            	    // InternalTurn.g:8141:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_135);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalTurn.g:8155:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt146=2;
            	    alt146 = dfa146.predict(input);
            	    switch (alt146) {
            	        case 1 :
            	            // InternalTurn.g:8156:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalTurn.g:8156:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalTurn.g:8157:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalTurn.g:8161:7: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalTurn.g:8162:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,86,FOLLOW_136); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalTurn.g:8174:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt145=3;
            	            alt145 = dfa145.predict(input);
            	            switch (alt145) {
            	                case 1 :
            	                    // InternalTurn.g:8175:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalTurn.g:8175:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalTurn.g:8176:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalTurn.g:8201:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalTurn.g:8202:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_137);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalTurn.g:8220:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalTurn.g:8220:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalTurn.g:8221:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalTurn.g:8221:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalTurn.g:8222:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalTurn.g:8222:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalTurn.g:8223:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_138);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalTurn.g:8240:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop144:
            	                    do {
            	                        int alt144=2;
            	                        int LA144_0 = input.LA(1);

            	                        if ( (LA144_0==25) ) {
            	                            alt144=1;
            	                        }


            	                        switch (alt144) {
            	                    	case 1 :
            	                    	    // InternalTurn.g:8241:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalTurn.g:8245:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalTurn.g:8246:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalTurn.g:8246:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalTurn.g:8247:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_138);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop144;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,87,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalTurn.g:8272:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt147=2;
            	    alt147 = dfa147.predict(input);
            	    switch (alt147) {
            	        case 1 :
            	            // InternalTurn.g:8273:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalTurn.g:8279:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalTurn.g:8280:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_130);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalTurn.g:8303:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalTurn.g:8303:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalTurn.g:8304:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalTurn.g:8310:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalTurn.g:8316:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalTurn.g:8317:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalTurn.g:8317:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt149=15;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalTurn.g:8318:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:8327:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:8336:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:8345:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalTurn.g:8345:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalTurn.g:8346:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalTurn.g:8363:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalTurn.g:8372:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalTurn.g:8381:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalTurn.g:8390:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalTurn.g:8390:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalTurn.g:8391:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalTurn.g:8414:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalTurn.g:8423:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalTurn.g:8432:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalTurn.g:8441:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalTurn.g:8450:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalTurn.g:8459:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalTurn.g:8468:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalTurn.g:8480:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalTurn.g:8480:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalTurn.g:8481:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalTurn.g:8487:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalTurn.g:8493:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalTurn.g:8494:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalTurn.g:8494:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt150=7;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==26) ) {
                alt150=1;
            }
            else if ( (LA150_0==27) && (synpred21_InternalTurn())) {
                alt150=2;
            }
            else if ( ((LA150_0>=140 && LA150_0<=141)) ) {
                alt150=3;
            }
            else if ( ((LA150_0>=RULE_INT && LA150_0<=RULE_DECIMAL)) ) {
                alt150=4;
            }
            else if ( (LA150_0==142) ) {
                alt150=5;
            }
            else if ( (LA150_0==RULE_STRING) ) {
                alt150=6;
            }
            else if ( (LA150_0==143) ) {
                alt150=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalTurn.g:8495:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:8504:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalTurn.g:8504:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalTurn.g:8505:4: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:8521:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:8530:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalTurn.g:8539:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalTurn.g:8548:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalTurn.g:8557:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalTurn.g:8569:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalTurn.g:8569:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalTurn.g:8570:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalTurn.g:8576:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalTurn.g:8582:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalTurn.g:8583:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalTurn.g:8583:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==26) ) {
                int LA151_1 = input.LA(2);

                if ( (LA151_1==27) ) {
                    alt151=2;
                }
                else if ( (LA151_1==15) ) {
                    alt151=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 151, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalTurn.g:8584:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:8593:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalTurn.g:8605:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalTurn.g:8605:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalTurn.g:8606:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalTurn.g:8612:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:8618:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalTurn.g:8619:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalTurn.g:8619:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalTurn.g:8620:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalTurn.g:8620:3: ()
            // InternalTurn.g:8621:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,26,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,15,FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalTurn.g:8635:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( ((LA153_0>=RULE_STRING && LA153_0<=RULE_DECIMAL)||LA153_0==15||(LA153_0>=26 && LA153_0<=27)||(LA153_0>=56 && LA153_0<=57)||LA153_0==86||LA153_0==95||LA153_0==103||LA153_0==124||LA153_0==126||(LA153_0>=129 && LA153_0<=131)||(LA153_0>=134 && LA153_0<=146)||LA153_0==148) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalTurn.g:8636:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalTurn.g:8636:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalTurn.g:8637:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalTurn.g:8637:5: (lv_elements_3_0= ruleXExpression )
                    // InternalTurn.g:8638:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:8655:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==25) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // InternalTurn.g:8656:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:8660:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalTurn.g:8661:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalTurn.g:8661:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalTurn.g:8662:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_45);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalTurn.g:8689:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalTurn.g:8689:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalTurn.g:8690:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalTurn.g:8696:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:8702:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalTurn.g:8703:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalTurn.g:8703:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalTurn.g:8704:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalTurn.g:8704:3: ()
            // InternalTurn.g:8705:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,26,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,27,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalTurn.g:8719:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( ((LA155_0>=RULE_STRING && LA155_0<=RULE_DECIMAL)||LA155_0==15||(LA155_0>=26 && LA155_0<=27)||(LA155_0>=56 && LA155_0<=57)||LA155_0==86||LA155_0==95||LA155_0==103||LA155_0==124||LA155_0==126||(LA155_0>=129 && LA155_0<=131)||(LA155_0>=134 && LA155_0<=146)||LA155_0==148) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalTurn.g:8720:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalTurn.g:8720:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalTurn.g:8721:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalTurn.g:8721:5: (lv_elements_3_0= ruleXExpression )
                    // InternalTurn.g:8722:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:8739:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop154:
                    do {
                        int alt154=2;
                        int LA154_0 = input.LA(1);

                        if ( (LA154_0==25) ) {
                            alt154=1;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalTurn.g:8740:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:8744:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalTurn.g:8745:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalTurn.g:8745:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalTurn.g:8746:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_142);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop154;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalTurn.g:8773:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalTurn.g:8773:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalTurn.g:8774:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalTurn.g:8780:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:8786:2: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalTurn.g:8787:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalTurn.g:8787:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalTurn.g:8788:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalTurn.g:8788:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalTurn.g:8789:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalTurn.g:8795:4: ( () otherlv_1= '[' )
            // InternalTurn.g:8796:5: () otherlv_1= '['
            {
            // InternalTurn.g:8796:5: ()
            // InternalTurn.g:8797:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,27,FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalTurn.g:8809:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt158=2;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalTurn.g:8810:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalTurn.g:8833:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalTurn.g:8834:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalTurn.g:8834:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==RULE_ID||LA157_0==86||LA157_0==114) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalTurn.g:8835:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalTurn.g:8835:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalTurn.g:8836:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalTurn.g:8836:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalTurn.g:8837:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_144);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalTurn.g:8854:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop156:
                            do {
                                int alt156=2;
                                int LA156_0 = input.LA(1);

                                if ( (LA156_0==25) ) {
                                    alt156=1;
                                }


                                switch (alt156) {
                            	case 1 :
                            	    // InternalTurn.g:8855:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,25,FOLLOW_122); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalTurn.g:8859:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalTurn.g:8860:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalTurn.g:8860:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalTurn.g:8861:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_144);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop156;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalTurn.g:8880:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalTurn.g:8881:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalTurn.g:8881:6: (lv_explicitSyntax_5_0= '|' )
                    // InternalTurn.g:8882:7: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,73,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", true, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:8896:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalTurn.g:8897:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalTurn.g:8897:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalTurn.g:8898:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalTurn.g:8923:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalTurn.g:8923:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalTurn.g:8924:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalTurn.g:8930:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:8936:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalTurn.g:8937:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalTurn.g:8937:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalTurn.g:8938:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalTurn.g:8938:3: ()
            // InternalTurn.g:8939:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:8945:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( ((LA160_0>=RULE_STRING && LA160_0<=RULE_DECIMAL)||LA160_0==15||(LA160_0>=26 && LA160_0<=27)||(LA160_0>=56 && LA160_0<=57)||LA160_0==86||LA160_0==95||LA160_0==103||LA160_0==124||LA160_0==126||(LA160_0>=129 && LA160_0<=146)||LA160_0==148) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalTurn.g:8946:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalTurn.g:8946:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalTurn.g:8947:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalTurn.g:8947:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalTurn.g:8948:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalTurn.g:8965:4: (otherlv_2= ';' )?
            	    int alt159=2;
            	    int LA159_0 = input.LA(1);

            	    if ( (LA159_0==66) ) {
            	        alt159=1;
            	    }
            	    switch (alt159) {
            	        case 1 :
            	            // InternalTurn.g:8966:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,66,FOLLOW_147); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalTurn.g:8976:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalTurn.g:8976:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalTurn.g:8977:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalTurn.g:8983:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:8989:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalTurn.g:8990:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:8990:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalTurn.g:8991:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalTurn.g:8991:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalTurn.g:8992:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalTurn.g:9017:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalTurn.g:9018:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalTurn.g:9018:5: ()
            // InternalTurn.g:9019:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalTurn.g:9025:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_ID||LA162_0==86||LA162_0==114) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalTurn.g:9026:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalTurn.g:9026:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalTurn.g:9027:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalTurn.g:9027:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalTurn.g:9028:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_144);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalTurn.g:9045:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==25) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // InternalTurn.g:9046:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalTurn.g:9050:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalTurn.g:9051:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalTurn.g:9051:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalTurn.g:9052:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_144);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalTurn.g:9071:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalTurn.g:9072:6: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalTurn.g:9072:6: (lv_explicitSyntax_4_0= '|' )
            // InternalTurn.g:9073:7: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,73,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", true, "|");
              						
            }

            }


            }


            }


            }

            // InternalTurn.g:9087:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalTurn.g:9088:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalTurn.g:9088:4: (lv_expression_5_0= ruleXExpression )
            // InternalTurn.g:9089:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalTurn.g:9110:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalTurn.g:9110:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalTurn.g:9111:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalTurn.g:9117:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalTurn.g:9123:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalTurn.g:9124:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalTurn.g:9124:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalTurn.g:9125:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,86,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_137);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalTurn.g:9145:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalTurn.g:9145:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalTurn.g:9146:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalTurn.g:9152:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9158:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalTurn.g:9159:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalTurn.g:9159:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalTurn.g:9160:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalTurn.g:9160:3: ()
            // InternalTurn.g:9161:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,124,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,86,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalTurn.g:9175:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalTurn.g:9176:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalTurn.g:9176:4: (lv_if_3_0= ruleXExpression )
            // InternalTurn.g:9177:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_137);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,87,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalTurn.g:9198:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalTurn.g:9199:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalTurn.g:9199:4: (lv_then_5_0= ruleXExpression )
            // InternalTurn.g:9200:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_149);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:9217:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==125) ) {
                int LA163_1 = input.LA(2);

                if ( (synpred25_InternalTurn()) ) {
                    alt163=1;
                }
            }
            switch (alt163) {
                case 1 :
                    // InternalTurn.g:9218:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalTurn.g:9218:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalTurn.g:9219:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,125,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalTurn.g:9225:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalTurn.g:9226:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalTurn.g:9226:5: (lv_else_7_0= ruleXExpression )
                    // InternalTurn.g:9227:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalTurn.g:9249:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalTurn.g:9249:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalTurn.g:9250:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalTurn.g:9256:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9262:2: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalTurn.g:9263:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalTurn.g:9263:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalTurn.g:9264:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalTurn.g:9264:3: ()
            // InternalTurn.g:9265:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,126,FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalTurn.g:9275:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt165=2;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // InternalTurn.g:9276:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalTurn.g:9276:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalTurn.g:9277:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalTurn.g:9277:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalTurn.g:9278:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalTurn.g:9288:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalTurn.g:9289:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,86,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalTurn.g:9293:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalTurn.g:9294:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalTurn.g:9294:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalTurn.g:9295:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_14);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalTurn.g:9318:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalTurn.g:9319:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalTurn.g:9319:6: (lv_switch_5_0= ruleXExpression )
                    // InternalTurn.g:9320:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_137);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,87,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:9343:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalTurn.g:9343:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalTurn.g:9344:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalTurn.g:9344:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt164=2;
                    alt164 = dfa164.predict(input);
                    switch (alt164) {
                        case 1 :
                            // InternalTurn.g:9345:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalTurn.g:9354:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalTurn.g:9355:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalTurn.g:9355:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalTurn.g:9356:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalTurn.g:9356:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalTurn.g:9357:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_14);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalTurn.g:9380:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalTurn.g:9381:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalTurn.g:9381:6: (lv_switch_9_0= ruleXExpression )
                    // InternalTurn.g:9382:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_26);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,15,FOLLOW_151); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalTurn.g:9405:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==RULE_ID||(LA166_0>=24 && LA166_0<=25)||LA166_0==86||LA166_0==114||LA166_0==128) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalTurn.g:9406:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalTurn.g:9406:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalTurn.g:9407:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            // InternalTurn.g:9424:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==127) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalTurn.g:9425:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,127,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalTurn.g:9433:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalTurn.g:9434:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalTurn.g:9434:5: (lv_default_14_0= ruleXExpression )
                    // InternalTurn.g:9435:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalTurn.g:9461:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalTurn.g:9461:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalTurn.g:9462:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalTurn.g:9468:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9474:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalTurn.g:9475:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalTurn.g:9475:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalTurn.g:9476:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalTurn.g:9476:3: ()
            // InternalTurn.g:9477:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:9483:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==RULE_ID||LA168_0==86||LA168_0==114) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalTurn.g:9484:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalTurn.g:9484:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalTurn.g:9485:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_152);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:9502:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==128) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalTurn.g:9503:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,128,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalTurn.g:9507:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalTurn.g:9508:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalTurn.g:9508:5: (lv_case_3_0= ruleXExpression )
                    // InternalTurn.g:9509:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_153);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:9527:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==24) ) {
                alt170=1;
            }
            else if ( (LA170_0==25) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // InternalTurn.g:9528:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalTurn.g:9528:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalTurn.g:9529:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalTurn.g:9533:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalTurn.g:9534:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalTurn.g:9534:6: (lv_then_5_0= ruleXExpression )
                    // InternalTurn.g:9535:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:9554:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalTurn.g:9554:4: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalTurn.g:9555:5: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalTurn.g:9555:5: (lv_fallThrough_6_0= ',' )
                    // InternalTurn.g:9556:6: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", true, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalTurn.g:9573:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalTurn.g:9573:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalTurn.g:9574:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalTurn.g:9580:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9586:2: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalTurn.g:9587:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:9587:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalTurn.g:9588:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalTurn.g:9588:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalTurn.g:9589:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalTurn.g:9602:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalTurn.g:9603:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalTurn.g:9603:5: ()
            // InternalTurn.g:9604:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,129,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,86,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalTurn.g:9618:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalTurn.g:9619:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalTurn.g:9619:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalTurn.g:9620:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_14);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalTurn.g:9643:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalTurn.g:9644:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalTurn.g:9644:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalTurn.g:9645:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_137);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,87,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalTurn.g:9666:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalTurn.g:9667:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalTurn.g:9667:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalTurn.g:9668:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalTurn.g:9689:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalTurn.g:9689:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalTurn.g:9690:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalTurn.g:9696:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9702:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalTurn.g:9703:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:9703:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalTurn.g:9704:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalTurn.g:9704:3: ()
            // InternalTurn.g:9705:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,129,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,86,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalTurn.g:9719:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( ((LA172_0>=RULE_STRING && LA172_0<=RULE_DECIMAL)||LA172_0==15||(LA172_0>=26 && LA172_0<=27)||(LA172_0>=56 && LA172_0<=57)||LA172_0==86||LA172_0==95||LA172_0==103||LA172_0==124||LA172_0==126||(LA172_0>=129 && LA172_0<=146)||LA172_0==148) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalTurn.g:9720:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalTurn.g:9720:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalTurn.g:9721:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalTurn.g:9721:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalTurn.g:9722:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_155);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:9739:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop171:
                    do {
                        int alt171=2;
                        int LA171_0 = input.LA(1);

                        if ( (LA171_0==25) ) {
                            alt171=1;
                        }


                        switch (alt171) {
                    	case 1 :
                    	    // InternalTurn.g:9740:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_156); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:9744:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalTurn.g:9745:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalTurn.g:9745:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalTurn.g:9746:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_155);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop171;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,66,FOLLOW_157); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalTurn.g:9769:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( ((LA173_0>=RULE_STRING && LA173_0<=RULE_DECIMAL)||LA173_0==15||(LA173_0>=26 && LA173_0<=27)||(LA173_0>=56 && LA173_0<=57)||LA173_0==86||LA173_0==95||LA173_0==103||LA173_0==124||LA173_0==126||(LA173_0>=129 && LA173_0<=131)||(LA173_0>=134 && LA173_0<=146)||LA173_0==148) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalTurn.g:9770:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalTurn.g:9770:4: (lv_expression_7_0= ruleXExpression )
                    // InternalTurn.g:9771:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_71);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,66,FOLLOW_158); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalTurn.g:9792:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( ((LA175_0>=RULE_STRING && LA175_0<=RULE_DECIMAL)||LA175_0==15||(LA175_0>=26 && LA175_0<=27)||(LA175_0>=56 && LA175_0<=57)||LA175_0==86||LA175_0==95||LA175_0==103||LA175_0==124||LA175_0==126||(LA175_0>=129 && LA175_0<=131)||(LA175_0>=134 && LA175_0<=146)||LA175_0==148) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalTurn.g:9793:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalTurn.g:9793:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalTurn.g:9794:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalTurn.g:9794:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalTurn.g:9795:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_138);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:9812:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop174:
                    do {
                        int alt174=2;
                        int LA174_0 = input.LA(1);

                        if ( (LA174_0==25) ) {
                            alt174=1;
                        }


                        switch (alt174) {
                    	case 1 :
                    	    // InternalTurn.g:9813:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:9817:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalTurn.g:9818:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalTurn.g:9818:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalTurn.g:9819:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_138);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop174;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,87,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalTurn.g:9842:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalTurn.g:9843:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalTurn.g:9843:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalTurn.g:9844:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalTurn.g:9865:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalTurn.g:9865:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalTurn.g:9866:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalTurn.g:9872:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9878:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalTurn.g:9879:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:9879:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalTurn.g:9880:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalTurn.g:9880:3: ()
            // InternalTurn.g:9881:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,130,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,86,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalTurn.g:9895:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalTurn.g:9896:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalTurn.g:9896:4: (lv_predicate_3_0= ruleXExpression )
            // InternalTurn.g:9897:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_137);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,87,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalTurn.g:9918:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalTurn.g:9919:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalTurn.g:9919:4: (lv_body_5_0= ruleXExpression )
            // InternalTurn.g:9920:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalTurn.g:9941:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalTurn.g:9941:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalTurn.g:9942:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalTurn.g:9948:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:9954:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalTurn.g:9955:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalTurn.g:9955:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalTurn.g:9956:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalTurn.g:9956:3: ()
            // InternalTurn.g:9957:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,131,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalTurn.g:9967:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalTurn.g:9968:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalTurn.g:9968:4: (lv_body_2_0= ruleXExpression )
            // InternalTurn.g:9969:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_159);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,130,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,86,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalTurn.g:9994:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalTurn.g:9995:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalTurn.g:9995:4: (lv_predicate_5_0= ruleXExpression )
            // InternalTurn.g:9996:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_137);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalTurn.g:10021:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalTurn.g:10021:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalTurn.g:10022:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalTurn.g:10028:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10034:2: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalTurn.g:10035:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalTurn.g:10035:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalTurn.g:10036:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalTurn.g:10036:3: ()
            // InternalTurn.g:10037:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,15,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalTurn.g:10047:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( ((LA177_0>=RULE_STRING && LA177_0<=RULE_DECIMAL)||LA177_0==15||(LA177_0>=26 && LA177_0<=27)||(LA177_0>=56 && LA177_0<=57)||LA177_0==86||LA177_0==95||LA177_0==103||LA177_0==124||LA177_0==126||(LA177_0>=129 && LA177_0<=146)||LA177_0==148) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalTurn.g:10048:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalTurn.g:10048:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalTurn.g:10049:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalTurn.g:10049:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalTurn.g:10050:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalTurn.g:10067:4: (otherlv_3= ';' )?
            	    int alt176=2;
            	    int LA176_0 = input.LA(1);

            	    if ( (LA176_0==66) ) {
            	        alt176=1;
            	    }
            	    switch (alt176) {
            	        case 1 :
            	            // InternalTurn.g:10068:5: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,66,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            otherlv_4=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalTurn.g:10082:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalTurn.g:10082:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalTurn.g:10083:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalTurn.g:10089:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalTurn.g:10095:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalTurn.g:10096:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalTurn.g:10096:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( ((LA178_0>=132 && LA178_0<=133)) ) {
                alt178=1;
            }
            else if ( ((LA178_0>=RULE_STRING && LA178_0<=RULE_DECIMAL)||LA178_0==15||(LA178_0>=26 && LA178_0<=27)||(LA178_0>=56 && LA178_0<=57)||LA178_0==86||LA178_0==95||LA178_0==103||LA178_0==124||LA178_0==126||(LA178_0>=129 && LA178_0<=131)||(LA178_0>=134 && LA178_0<=146)||LA178_0==148) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // InternalTurn.g:10097:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:10106:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalTurn.g:10118:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalTurn.g:10118:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalTurn.g:10119:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalTurn.g:10125:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10131:2: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalTurn.g:10132:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalTurn.g:10132:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalTurn.g:10133:3: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalTurn.g:10133:3: ()
            // InternalTurn.g:10134:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:10140:3: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==132) ) {
                alt179=1;
            }
            else if ( (LA179_0==133) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalTurn.g:10141:4: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalTurn.g:10141:4: ( (lv_writeable_1_0= 'var' ) )
                    // InternalTurn.g:10142:5: (lv_writeable_1_0= 'var' )
                    {
                    // InternalTurn.g:10142:5: (lv_writeable_1_0= 'var' )
                    // InternalTurn.g:10143:6: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,132,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", true, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:10156:4: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,133,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:10161:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==RULE_ID) ) {
                int LA180_1 = input.LA(2);

                if ( (synpred29_InternalTurn()) ) {
                    alt180=1;
                }
                else if ( (true) ) {
                    alt180=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 180, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA180_0==86) && (synpred29_InternalTurn())) {
                alt180=1;
            }
            else if ( (LA180_0==114) && (synpred29_InternalTurn())) {
                alt180=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    // InternalTurn.g:10162:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalTurn.g:10162:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalTurn.g:10163:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalTurn.g:10176:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalTurn.g:10177:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalTurn.g:10177:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalTurn.g:10178:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalTurn.g:10178:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalTurn.g:10179:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalTurn.g:10196:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalTurn.g:10197:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalTurn.g:10197:7: (lv_name_4_0= ruleValidID )
                    // InternalTurn.g:10198:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_162);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:10218:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalTurn.g:10218:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalTurn.g:10219:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalTurn.g:10219:5: (lv_name_5_0= ruleValidID )
                    // InternalTurn.g:10220:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_162);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:10238:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==33) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalTurn.g:10239:4: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,33,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalTurn.g:10243:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalTurn.g:10244:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalTurn.g:10244:5: (lv_right_7_0= ruleXExpression )
                    // InternalTurn.g:10245:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalTurn.g:10267:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalTurn.g:10267:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalTurn.g:10268:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalTurn.g:10274:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10280:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalTurn.g:10281:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalTurn.g:10281:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalTurn.g:10282:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalTurn.g:10282:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==RULE_ID) ) {
                int LA182_1 = input.LA(2);

                if ( (LA182_1==RULE_ID||LA182_1==27||LA182_1==80||LA182_1==103) ) {
                    alt182=1;
                }
            }
            else if ( (LA182_0==86||LA182_0==114) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalTurn.g:10283:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalTurn.g:10283:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalTurn.g:10284:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalTurn.g:10301:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalTurn.g:10302:4: (lv_name_1_0= ruleValidID )
            {
            // InternalTurn.g:10302:4: (lv_name_1_0= ruleValidID )
            // InternalTurn.g:10303:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalTurn.g:10324:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalTurn.g:10324:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalTurn.g:10325:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalTurn.g:10331:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10337:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalTurn.g:10338:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalTurn.g:10338:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalTurn.g:10339:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalTurn.g:10339:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalTurn.g:10340:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalTurn.g:10340:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalTurn.g:10341:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:10358:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalTurn.g:10359:4: (lv_name_1_0= ruleValidID )
            {
            // InternalTurn.g:10359:4: (lv_name_1_0= ruleValidID )
            // InternalTurn.g:10360:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalTurn.g:10381:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalTurn.g:10381:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalTurn.g:10382:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalTurn.g:10388:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10394:2: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalTurn.g:10395:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalTurn.g:10395:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalTurn.g:10396:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalTurn.g:10396:3: ()
            // InternalTurn.g:10397:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:10403:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==103) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalTurn.g:10404:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,103,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalTurn.g:10408:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalTurn.g:10409:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalTurn.g:10409:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalTurn.g:10410:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:10427:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop183:
                    do {
                        int alt183=2;
                        int LA183_0 = input.LA(1);

                        if ( (LA183_0==25) ) {
                            alt183=1;
                        }


                        switch (alt183) {
                    	case 1 :
                    	    // InternalTurn.g:10428:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_133); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:10432:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalTurn.g:10433:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalTurn.g:10433:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalTurn.g:10434:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_134);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop183;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,104,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:10457:3: ( ( ruleIdOrSuper ) )
            // InternalTurn.g:10458:4: ( ruleIdOrSuper )
            {
            // InternalTurn.g:10458:4: ( ruleIdOrSuper )
            // InternalTurn.g:10459:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_163);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:10473:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt187=2;
            alt187 = dfa187.predict(input);
            switch (alt187) {
                case 1 :
                    // InternalTurn.g:10474:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalTurn.g:10474:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalTurn.g:10475:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalTurn.g:10479:5: (lv_explicitOperationCall_7_0= '(' )
                    // InternalTurn.g:10480:6: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,86,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalTurn.g:10492:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt186=3;
                    alt186 = dfa186.predict(input);
                    switch (alt186) {
                        case 1 :
                            // InternalTurn.g:10493:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalTurn.g:10493:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalTurn.g:10494:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalTurn.g:10519:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalTurn.g:10520:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_137);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:10538:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalTurn.g:10538:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalTurn.g:10539:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalTurn.g:10539:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalTurn.g:10540:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalTurn.g:10540:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalTurn.g:10541:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_138);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalTurn.g:10558:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop185:
                            do {
                                int alt185=2;
                                int LA185_0 = input.LA(1);

                                if ( (LA185_0==25) ) {
                                    alt185=1;
                                }


                                switch (alt185) {
                            	case 1 :
                            	    // InternalTurn.g:10559:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalTurn.g:10563:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalTurn.g:10564:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalTurn.g:10564:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalTurn.g:10565:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_138);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop185;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,87,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:10590:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt188=2;
            alt188 = dfa188.predict(input);
            switch (alt188) {
                case 1 :
                    // InternalTurn.g:10591:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalTurn.g:10597:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalTurn.g:10598:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalTurn.g:10619:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalTurn.g:10619:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalTurn.g:10620:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalTurn.g:10626:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10632:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalTurn.g:10633:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalTurn.g:10633:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt189=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt189=1;
                }
                break;
            case 134:
                {
                alt189=2;
                }
                break;
            case 135:
                {
                alt189=3;
                }
                break;
            case 136:
                {
                alt189=4;
                }
                break;
            case 137:
                {
                alt189=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }

            switch (alt189) {
                case 1 :
                    // InternalTurn.g:10634:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:10645:3: kw= 'extends'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalTurn.g:10651:3: kw= 'static'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalTurn.g:10657:3: kw= 'import'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalTurn.g:10663:3: kw= 'extension'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalTurn.g:10672:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalTurn.g:10672:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalTurn.g:10673:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalTurn.g:10679:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10685:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalTurn.g:10686:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalTurn.g:10686:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==RULE_ID||(LA190_0>=134 && LA190_0<=137)) ) {
                alt190=1;
            }
            else if ( (LA190_0==138) ) {
                alt190=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }
            switch (alt190) {
                case 1 :
                    // InternalTurn.g:10687:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:10698:3: kw= 'super'
                    {
                    kw=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalTurn.g:10707:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalTurn.g:10707:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalTurn.g:10708:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalTurn.g:10714:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:10720:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalTurn.g:10721:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalTurn.g:10721:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalTurn.g:10722:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalTurn.g:10722:3: ()
            // InternalTurn.g:10723:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,139,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalTurn.g:10733:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:10734:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:10734:4: ( ruleQualifiedName )
            // InternalTurn.g:10735:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_164);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:10749:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt192=2;
            alt192 = dfa192.predict(input);
            switch (alt192) {
                case 1 :
                    // InternalTurn.g:10750:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalTurn.g:10750:4: ( ( '<' )=>otherlv_3= '<' )
                    // InternalTurn.g:10751:5: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,103,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalTurn.g:10757:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalTurn.g:10758:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalTurn.g:10758:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalTurn.g:10759:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:10776:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop191:
                    do {
                        int alt191=2;
                        int LA191_0 = input.LA(1);

                        if ( (LA191_0==25) ) {
                            alt191=1;
                        }


                        switch (alt191) {
                    	case 1 :
                    	    // InternalTurn.g:10777:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,25,FOLLOW_133); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:10781:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalTurn.g:10782:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalTurn.g:10782:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalTurn.g:10783:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_134);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop191;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,104,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:10806:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt195=2;
            alt195 = dfa195.predict(input);
            switch (alt195) {
                case 1 :
                    // InternalTurn.g:10807:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalTurn.g:10807:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalTurn.g:10808:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalTurn.g:10812:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalTurn.g:10813:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,86,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalTurn.g:10825:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt194=3;
                    alt194 = dfa194.predict(input);
                    switch (alt194) {
                        case 1 :
                            // InternalTurn.g:10826:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalTurn.g:10826:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalTurn.g:10827:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalTurn.g:10852:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalTurn.g:10853:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_137);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:10871:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalTurn.g:10871:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalTurn.g:10872:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalTurn.g:10872:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalTurn.g:10873:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalTurn.g:10873:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalTurn.g:10874:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_138);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalTurn.g:10891:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop193:
                            do {
                                int alt193=2;
                                int LA193_0 = input.LA(1);

                                if ( (LA193_0==25) ) {
                                    alt193=1;
                                }


                                switch (alt193) {
                            	case 1 :
                            	    // InternalTurn.g:10892:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,25,FOLLOW_113); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalTurn.g:10896:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalTurn.g:10897:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalTurn.g:10897:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalTurn.g:10898:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_138);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop193;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,87,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalTurn.g:10923:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt196=2;
            alt196 = dfa196.predict(input);
            switch (alt196) {
                case 1 :
                    // InternalTurn.g:10924:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalTurn.g:10930:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalTurn.g:10931:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalTurn.g:10952:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalTurn.g:10952:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalTurn.g:10953:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalTurn.g:10959:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalTurn.g:10965:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalTurn.g:10966:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalTurn.g:10966:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalTurn.g:10967:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalTurn.g:10967:3: ()
            // InternalTurn.g:10968:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:10974:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==140) ) {
                alt197=1;
            }
            else if ( (LA197_0==141) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }
            switch (alt197) {
                case 1 :
                    // InternalTurn.g:10975:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:10980:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalTurn.g:10980:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalTurn.g:10981:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalTurn.g:10981:5: (lv_isTrue_2_0= 'true' )
                    // InternalTurn.g:10982:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalTurn.g:10999:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalTurn.g:10999:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalTurn.g:11000:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalTurn.g:11006:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalTurn.g:11012:2: ( ( () otherlv_1= 'null' ) )
            // InternalTurn.g:11013:2: ( () otherlv_1= 'null' )
            {
            // InternalTurn.g:11013:2: ( () otherlv_1= 'null' )
            // InternalTurn.g:11014:3: () otherlv_1= 'null'
            {
            // InternalTurn.g:11014:3: ()
            // InternalTurn.g:11015:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalTurn.g:11029:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalTurn.g:11029:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalTurn.g:11030:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalTurn.g:11036:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11042:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalTurn.g:11043:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalTurn.g:11043:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalTurn.g:11044:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalTurn.g:11044:3: ()
            // InternalTurn.g:11045:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:11051:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalTurn.g:11052:4: (lv_value_1_0= ruleNumber )
            {
            // InternalTurn.g:11052:4: (lv_value_1_0= ruleNumber )
            // InternalTurn.g:11053:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalTurn.g:11074:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalTurn.g:11074:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalTurn.g:11075:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalTurn.g:11081:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalTurn.g:11087:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalTurn.g:11088:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalTurn.g:11088:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalTurn.g:11089:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalTurn.g:11089:3: ()
            // InternalTurn.g:11090:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalTurn.g:11096:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalTurn.g:11097:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalTurn.g:11097:4: (lv_value_1_0= RULE_STRING )
            // InternalTurn.g:11098:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalTurn.g:11118:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalTurn.g:11118:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalTurn.g:11119:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalTurn.g:11125:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11131:2: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalTurn.g:11132:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalTurn.g:11132:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalTurn.g:11133:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalTurn.g:11133:3: ()
            // InternalTurn.g:11134:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,143,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalTurn.g:11148:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:11149:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:11149:4: ( ruleQualifiedName )
            // InternalTurn.g:11150:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_165);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:11164:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop198:
            do {
                int alt198=2;
                int LA198_0 = input.LA(1);

                if ( (LA198_0==27) ) {
                    alt198=1;
                }


                switch (alt198) {
            	case 1 :
            	    // InternalTurn.g:11165:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalTurn.g:11165:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalTurn.g:11166:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop198;
                }
            } while (true);

            otherlv_5=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalTurn.g:11191:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalTurn.g:11191:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalTurn.g:11192:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalTurn.g:11198:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11204:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalTurn.g:11205:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:11205:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalTurn.g:11206:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalTurn.g:11206:3: ()
            // InternalTurn.g:11207:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,144,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalTurn.g:11217:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalTurn.g:11218:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalTurn.g:11218:4: (lv_expression_2_0= ruleXExpression )
            // InternalTurn.g:11219:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalTurn.g:11240:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalTurn.g:11240:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalTurn.g:11241:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalTurn.g:11247:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11253:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalTurn.g:11254:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalTurn.g:11254:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalTurn.g:11255:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalTurn.g:11255:3: ()
            // InternalTurn.g:11256:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,145,FOLLOW_166); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalTurn.g:11266:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt199=2;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // InternalTurn.g:11267:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalTurn.g:11268:4: (lv_expression_2_0= ruleXExpression )
                    // InternalTurn.g:11269:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalTurn.g:11290:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalTurn.g:11290:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalTurn.g:11291:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalTurn.g:11297:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11303:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalTurn.g:11304:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalTurn.g:11304:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalTurn.g:11305:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalTurn.g:11305:3: ()
            // InternalTurn.g:11306:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,146,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalTurn.g:11316:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalTurn.g:11317:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalTurn.g:11317:4: (lv_expression_2_0= ruleXExpression )
            // InternalTurn.g:11318:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_167);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:11335:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==149) ) {
                alt202=1;
            }
            else if ( (LA202_0==147) ) {
                alt202=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }
            switch (alt202) {
                case 1 :
                    // InternalTurn.g:11336:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalTurn.g:11336:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalTurn.g:11337:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalTurn.g:11337:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt200=0;
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

                        if ( (LA200_0==149) ) {
                            int LA200_2 = input.LA(2);

                            if ( (synpred38_InternalTurn()) ) {
                                alt200=1;
                            }


                        }


                        switch (alt200) {
                    	case 1 :
                    	    // InternalTurn.g:11338:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalTurn.g:11339:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalTurn.g:11340:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_168);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt200 >= 1 ) break loop200;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(200, input);
                                throw eee;
                        }
                        cnt200++;
                    } while (true);

                    // InternalTurn.g:11357:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( (LA201_0==147) ) {
                        int LA201_1 = input.LA(2);

                        if ( (synpred39_InternalTurn()) ) {
                            alt201=1;
                        }
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalTurn.g:11358:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalTurn.g:11358:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalTurn.g:11359:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,147,FOLLOW_113); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalTurn.g:11365:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalTurn.g:11366:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalTurn.g:11366:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalTurn.g:11367:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:11387:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalTurn.g:11387:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalTurn.g:11388:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,147,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalTurn.g:11392:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalTurn.g:11393:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalTurn.g:11393:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalTurn.g:11394:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalTurn.g:11417:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalTurn.g:11417:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalTurn.g:11418:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalTurn.g:11424:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11430:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalTurn.g:11431:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:11431:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalTurn.g:11432:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalTurn.g:11432:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalTurn.g:11433:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalTurn.g:11440:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalTurn.g:11441:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalTurn.g:11441:5: ()
            // InternalTurn.g:11442:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,148,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,86,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalTurn.g:11458:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalTurn.g:11459:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalTurn.g:11459:4: (lv_param_3_0= ruleXExpression )
            // InternalTurn.g:11460:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_137);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,87,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalTurn.g:11481:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalTurn.g:11482:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalTurn.g:11482:4: (lv_expression_5_0= ruleXExpression )
            // InternalTurn.g:11483:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalTurn.g:11504:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalTurn.g:11504:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalTurn.g:11505:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalTurn.g:11511:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11517:2: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalTurn.g:11518:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalTurn.g:11518:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalTurn.g:11519:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalTurn.g:11519:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalTurn.g:11520:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,149,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,86,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalTurn.g:11530:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalTurn.g:11531:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalTurn.g:11531:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalTurn.g:11532:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_137);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,87,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalTurn.g:11553:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalTurn.g:11554:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalTurn.g:11554:4: (lv_expression_4_0= ruleXExpression )
            // InternalTurn.g:11555:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalTurn.g:11576:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalTurn.g:11576:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalTurn.g:11577:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalTurn.g:11583:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalTurn.g:11589:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalTurn.g:11590:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalTurn.g:11590:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalTurn.g:11591:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_169);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalTurn.g:11601:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==80) ) {
                    int LA203_2 = input.LA(2);

                    if ( (LA203_2==RULE_ID) ) {
                        int LA203_3 = input.LA(3);

                        if ( (synpred42_InternalTurn()) ) {
                            alt203=1;
                        }


                    }


                }


                switch (alt203) {
            	case 1 :
            	    // InternalTurn.g:11602:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalTurn.g:11602:4: ( ( '.' )=>kw= '.' )
            	    // InternalTurn.g:11603:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,80,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_169);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalTurn.g:11625:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalTurn.g:11627:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalTurn.g:11628:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalTurn.g:11637:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalTurn.g:11644:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalTurn.g:11645:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalTurn.g:11645:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==RULE_HEX) ) {
                alt207=1;
            }
            else if ( (LA207_0==RULE_INT||LA207_0==RULE_DECIMAL) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }
            switch (alt207) {
                case 1 :
                    // InternalTurn.g:11646:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:11654:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalTurn.g:11654:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalTurn.g:11655:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalTurn.g:11655:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==RULE_INT) ) {
                        alt204=1;
                    }
                    else if ( (LA204_0==RULE_DECIMAL) ) {
                        alt204=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 204, 0, input);

                        throw nvae;
                    }
                    switch (alt204) {
                        case 1 :
                            // InternalTurn.g:11656:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_169); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalTurn.g:11664:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_169); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalTurn.g:11672:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt206=2;
                    int LA206_0 = input.LA(1);

                    if ( (LA206_0==80) ) {
                        int LA206_1 = input.LA(2);

                        if ( (LA206_1==RULE_INT||LA206_1==RULE_DECIMAL) ) {
                            alt206=1;
                        }
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalTurn.g:11673:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,80,FOLLOW_170); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalTurn.g:11678:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt205=2;
                            int LA205_0 = input.LA(1);

                            if ( (LA205_0==RULE_INT) ) {
                                alt205=1;
                            }
                            else if ( (LA205_0==RULE_DECIMAL) ) {
                                alt205=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 205, 0, input);

                                throw nvae;
                            }
                            switch (alt205) {
                                case 1 :
                                    // InternalTurn.g:11679:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalTurn.g:11687:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalTurn.g:11704:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalTurn.g:11704:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalTurn.g:11705:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalTurn.g:11711:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalTurn.g:11717:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalTurn.g:11718:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalTurn.g:11718:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==RULE_ID) ) {
                alt209=1;
            }
            else if ( (LA209_0==86||LA209_0==114) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // InternalTurn.g:11719:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalTurn.g:11719:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalTurn.g:11720:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_64);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalTurn.g:11728:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop208:
                    do {
                        int alt208=2;
                        int LA208_0 = input.LA(1);

                        if ( (LA208_0==27) ) {
                            int LA208_2 = input.LA(2);

                            if ( (LA208_2==28) ) {
                                int LA208_3 = input.LA(3);

                                if ( (synpred43_InternalTurn()) ) {
                                    alt208=1;
                                }


                            }


                        }


                        switch (alt208) {
                    	case 1 :
                    	    // InternalTurn.g:11729:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalTurn.g:11735:5: ( () ruleArrayBrackets )
                    	    // InternalTurn.g:11736:6: () ruleArrayBrackets
                    	    {
                    	    // InternalTurn.g:11736:6: ()
                    	    // InternalTurn.g:11737:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_64);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop208;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:11754:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalTurn.g:11766:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalTurn.g:11766:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalTurn.g:11767:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalTurn.g:11773:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalTurn.g:11779:2: ( (kw= '[' kw= ']' ) )
            // InternalTurn.g:11780:2: (kw= '[' kw= ']' )
            {
            // InternalTurn.g:11780:2: (kw= '[' kw= ']' )
            // InternalTurn.g:11781:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalTurn.g:11795:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalTurn.g:11795:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalTurn.g:11796:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalTurn.g:11802:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11808:2: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalTurn.g:11809:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalTurn.g:11809:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalTurn.g:11810:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalTurn.g:11810:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==86) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalTurn.g:11811:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,86,FOLLOW_171); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalTurn.g:11815:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt211=2;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==RULE_ID||LA211_0==86||LA211_0==114) ) {
                        alt211=1;
                    }
                    switch (alt211) {
                        case 1 :
                            // InternalTurn.g:11816:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalTurn.g:11816:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalTurn.g:11817:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalTurn.g:11817:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalTurn.g:11818:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_138);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalTurn.g:11835:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop210:
                            do {
                                int alt210=2;
                                int LA210_0 = input.LA(1);

                                if ( (LA210_0==25) ) {
                                    alt210=1;
                                }


                                switch (alt210) {
                            	case 1 :
                            	    // InternalTurn.g:11836:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,25,FOLLOW_122); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalTurn.g:11840:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalTurn.g:11841:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalTurn.g:11841:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalTurn.g:11842:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_138);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop210;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,87,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,114,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalTurn.g:11870:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalTurn.g:11871:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalTurn.g:11871:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalTurn.g:11872:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalTurn.g:11893:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalTurn.g:11893:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalTurn.g:11894:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalTurn.g:11900:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:11906:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalTurn.g:11907:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalTurn.g:11907:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalTurn.g:11908:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalTurn.g:11908:3: ( ( ruleQualifiedName ) )
            // InternalTurn.g:11909:4: ( ruleQualifiedName )
            {
            // InternalTurn.g:11909:4: ( ruleQualifiedName )
            // InternalTurn.g:11910:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_173);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalTurn.g:11924:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt217=2;
            alt217 = dfa217.predict(input);
            switch (alt217) {
                case 1 :
                    // InternalTurn.g:11925:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalTurn.g:11925:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalTurn.g:11926:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,103,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalTurn.g:11932:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalTurn.g:11933:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalTurn.g:11933:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalTurn.g:11934:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalTurn.g:11951:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==25) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // InternalTurn.g:11952:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_133); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalTurn.g:11956:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalTurn.g:11957:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalTurn.g:11957:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalTurn.g:11958:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_134);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop213;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,104,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalTurn.g:11980:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop216:
                    do {
                        int alt216=2;
                        int LA216_0 = input.LA(1);

                        if ( (LA216_0==80) ) {
                            int LA216_2 = input.LA(2);

                            if ( (LA216_2==RULE_ID) ) {
                                int LA216_3 = input.LA(3);

                                if ( (synpred45_InternalTurn()) ) {
                                    alt216=1;
                                }


                            }


                        }


                        switch (alt216) {
                    	case 1 :
                    	    // InternalTurn.g:11981:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalTurn.g:11981:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalTurn.g:11982:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalTurn.g:11988:6: ( () otherlv_7= '.' )
                    	    // InternalTurn.g:11989:7: () otherlv_7= '.'
                    	    {
                    	    // InternalTurn.g:11989:7: ()
                    	    // InternalTurn.g:11990:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,80,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalTurn.g:12002:5: ( ( ruleValidID ) )
                    	    // InternalTurn.g:12003:6: ( ruleValidID )
                    	    {
                    	    // InternalTurn.g:12003:6: ( ruleValidID )
                    	    // InternalTurn.g:12004:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_174);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalTurn.g:12018:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt215=2;
                    	    alt215 = dfa215.predict(input);
                    	    switch (alt215) {
                    	        case 1 :
                    	            // InternalTurn.g:12019:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalTurn.g:12019:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalTurn.g:12020:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,103,FOLLOW_133); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalTurn.g:12026:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalTurn.g:12027:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalTurn.g:12027:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalTurn.g:12028:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_134);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalTurn.g:12045:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop214:
                    	            do {
                    	                int alt214=2;
                    	                int LA214_0 = input.LA(1);

                    	                if ( (LA214_0==25) ) {
                    	                    alt214=1;
                    	                }


                    	                switch (alt214) {
                    	            	case 1 :
                    	            	    // InternalTurn.g:12046:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,25,FOLLOW_133); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalTurn.g:12050:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalTurn.g:12051:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalTurn.g:12051:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalTurn.g:12052:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_134);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop214;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,104,FOLLOW_169); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop216;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalTurn.g:12081:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalTurn.g:12081:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalTurn.g:12082:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalTurn.g:12088:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalTurn.g:12094:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalTurn.g:12095:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalTurn.g:12095:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==RULE_ID||LA218_0==86||LA218_0==114) ) {
                alt218=1;
            }
            else if ( (LA218_0==150) ) {
                alt218=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;
            }
            switch (alt218) {
                case 1 :
                    // InternalTurn.g:12096:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalTurn.g:12105:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalTurn.g:12117:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalTurn.g:12117:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalTurn.g:12118:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalTurn.g:12124:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12130:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalTurn.g:12131:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalTurn.g:12131:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalTurn.g:12132:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalTurn.g:12132:3: ()
            // InternalTurn.g:12133:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,150,FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalTurn.g:12143:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt221=3;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==134) ) {
                alt221=1;
            }
            else if ( (LA221_0==138) ) {
                alt221=2;
            }
            switch (alt221) {
                case 1 :
                    // InternalTurn.g:12144:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalTurn.g:12144:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalTurn.g:12145:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalTurn.g:12145:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalTurn.g:12146:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalTurn.g:12146:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalTurn.g:12147:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_176);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalTurn.g:12164:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==97) ) {
                            alt219=1;
                        }


                        switch (alt219) {
                    	case 1 :
                    	    // InternalTurn.g:12165:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalTurn.g:12165:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalTurn.g:12166:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_176);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop219;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12185:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalTurn.g:12185:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalTurn.g:12186:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalTurn.g:12186:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalTurn.g:12187:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalTurn.g:12187:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalTurn.g:12188:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_176);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalTurn.g:12205:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==97) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // InternalTurn.g:12206:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalTurn.g:12206:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalTurn.g:12207:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_176);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalTurn.g:12230:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalTurn.g:12230:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalTurn.g:12231:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalTurn.g:12237:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12243:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalTurn.g:12244:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalTurn.g:12244:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalTurn.g:12245:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,134,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalTurn.g:12249:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalTurn.g:12250:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalTurn.g:12250:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalTurn.g:12251:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalTurn.g:12272:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalTurn.g:12272:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalTurn.g:12273:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalTurn.g:12279:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12285:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalTurn.g:12286:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalTurn.g:12286:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalTurn.g:12287:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,97,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalTurn.g:12291:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalTurn.g:12292:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalTurn.g:12292:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalTurn.g:12293:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalTurn.g:12314:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalTurn.g:12314:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalTurn.g:12315:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalTurn.g:12321:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12327:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalTurn.g:12328:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalTurn.g:12328:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalTurn.g:12329:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,138,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalTurn.g:12333:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalTurn.g:12334:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalTurn.g:12334:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalTurn.g:12335:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalTurn.g:12356:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalTurn.g:12356:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalTurn.g:12357:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalTurn.g:12363:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12369:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalTurn.g:12370:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalTurn.g:12370:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalTurn.g:12371:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,97,FOLLOW_122); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalTurn.g:12375:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalTurn.g:12376:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalTurn.g:12376:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalTurn.g:12377:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalTurn.g:12398:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalTurn.g:12398:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalTurn.g:12399:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalTurn.g:12405:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12411:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalTurn.g:12412:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalTurn.g:12412:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalTurn.g:12413:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_92);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,80,FOLLOW_177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalTurn.g:12437:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalTurn.g:12437:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalTurn.g:12438:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalTurn.g:12444:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalTurn.g:12450:2: (this_ID_0= RULE_ID )
            // InternalTurn.g:12451:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalTurn.g:12461:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalTurn.g:12461:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalTurn.g:12462:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalTurn.g:12468:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12474:2: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalTurn.g:12475:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalTurn.g:12475:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalTurn.g:12476:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,136,FOLLOW_178); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalTurn.g:12480:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt224=3;
            alt224 = dfa224.predict(input);
            switch (alt224) {
                case 1 :
                    // InternalTurn.g:12481:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalTurn.g:12481:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalTurn.g:12482:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalTurn.g:12482:5: ( (lv_static_1_0= 'static' ) )
                    // InternalTurn.g:12483:6: (lv_static_1_0= 'static' )
                    {
                    // InternalTurn.g:12483:6: (lv_static_1_0= 'static' )
                    // InternalTurn.g:12484:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,135,FOLLOW_179); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalTurn.g:12496:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt222=2;
                    int LA222_0 = input.LA(1);

                    if ( (LA222_0==137) ) {
                        alt222=1;
                    }
                    switch (alt222) {
                        case 1 :
                            // InternalTurn.g:12497:6: (lv_extension_2_0= 'extension' )
                            {
                            // InternalTurn.g:12497:6: (lv_extension_2_0= 'extension' )
                            // InternalTurn.g:12498:7: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,137,FOLLOW_179); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", true, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalTurn.g:12510:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalTurn.g:12511:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalTurn.g:12511:6: ( ruleQualifiedNameInStaticImport )
                    // InternalTurn.g:12512:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_180);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalTurn.g:12526:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==84) ) {
                        alt223=1;
                    }
                    else if ( (LA223_0==RULE_ID) ) {
                        alt223=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 223, 0, input);

                        throw nvae;
                    }
                    switch (alt223) {
                        case 1 :
                            // InternalTurn.g:12527:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalTurn.g:12527:6: ( (lv_wildcard_4_0= '*' ) )
                            // InternalTurn.g:12528:7: (lv_wildcard_4_0= '*' )
                            {
                            // InternalTurn.g:12528:7: (lv_wildcard_4_0= '*' )
                            // InternalTurn.g:12529:8: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,84,FOLLOW_181); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalTurn.g:12542:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalTurn.g:12542:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalTurn.g:12543:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalTurn.g:12543:7: (lv_memberName_5_0= ruleValidID )
                            // InternalTurn.g:12544:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_181);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12564:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalTurn.g:12564:4: ( ( ruleQualifiedName ) )
                    // InternalTurn.g:12565:5: ( ruleQualifiedName )
                    {
                    // InternalTurn.g:12565:5: ( ruleQualifiedName )
                    // InternalTurn.g:12566:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_181);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12581:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalTurn.g:12581:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalTurn.g:12582:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalTurn.g:12582:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalTurn.g:12583:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_181);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalTurn.g:12601:3: (otherlv_8= ';' )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==66) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalTurn.g:12602:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalTurn.g:12611:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalTurn.g:12611:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalTurn.g:12612:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalTurn.g:12618:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalTurn.g:12624:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalTurn.g:12625:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalTurn.g:12625:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt226=0;
            loop226:
            do {
                int alt226=2;
                int LA226_0 = input.LA(1);

                if ( (LA226_0==RULE_ID) ) {
                    int LA226_2 = input.LA(2);

                    if ( (LA226_2==80) ) {
                        alt226=1;
                    }


                }


                switch (alt226) {
            	case 1 :
            	    // InternalTurn.g:12626:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_92);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,80,FOLLOW_182); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt226 >= 1 ) break loop226;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(226, input);
                        throw eee;
                }
                cnt226++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualitativeLabel"
    // InternalTurn.g:12645:1: ruleQualitativeLabel returns [Enumerator current=null] : ( (enumLiteral_0= 'denied' ) | (enumLiteral_1= 'weaklyDenied' ) | (enumLiteral_2= 'weaklySatisfied' ) | (enumLiteral_3= 'satisfied' ) | (enumLiteral_4= 'conflict' ) | (enumLiteral_5= 'unknown' ) | (enumLiteral_6= 'none' ) ) ;
    public final Enumerator ruleQualitativeLabel() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;


        	enterRule();

        try {
            // InternalTurn.g:12651:2: ( ( (enumLiteral_0= 'denied' ) | (enumLiteral_1= 'weaklyDenied' ) | (enumLiteral_2= 'weaklySatisfied' ) | (enumLiteral_3= 'satisfied' ) | (enumLiteral_4= 'conflict' ) | (enumLiteral_5= 'unknown' ) | (enumLiteral_6= 'none' ) ) )
            // InternalTurn.g:12652:2: ( (enumLiteral_0= 'denied' ) | (enumLiteral_1= 'weaklyDenied' ) | (enumLiteral_2= 'weaklySatisfied' ) | (enumLiteral_3= 'satisfied' ) | (enumLiteral_4= 'conflict' ) | (enumLiteral_5= 'unknown' ) | (enumLiteral_6= 'none' ) )
            {
            // InternalTurn.g:12652:2: ( (enumLiteral_0= 'denied' ) | (enumLiteral_1= 'weaklyDenied' ) | (enumLiteral_2= 'weaklySatisfied' ) | (enumLiteral_3= 'satisfied' ) | (enumLiteral_4= 'conflict' ) | (enumLiteral_5= 'unknown' ) | (enumLiteral_6= 'none' ) )
            int alt227=7;
            switch ( input.LA(1) ) {
            case 151:
                {
                alt227=1;
                }
                break;
            case 152:
                {
                alt227=2;
                }
                break;
            case 153:
                {
                alt227=3;
                }
                break;
            case 154:
                {
                alt227=4;
                }
                break;
            case 155:
                {
                alt227=5;
                }
                break;
            case 156:
                {
                alt227=6;
                }
                break;
            case 157:
                {
                alt227=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;
            }

            switch (alt227) {
                case 1 :
                    // InternalTurn.g:12653:3: (enumLiteral_0= 'denied' )
                    {
                    // InternalTurn.g:12653:3: (enumLiteral_0= 'denied' )
                    // InternalTurn.g:12654:4: enumLiteral_0= 'denied'
                    {
                    enumLiteral_0=(Token)match(input,151,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getDeniedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getQualitativeLabelAccess().getDeniedEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12661:3: (enumLiteral_1= 'weaklyDenied' )
                    {
                    // InternalTurn.g:12661:3: (enumLiteral_1= 'weaklyDenied' )
                    // InternalTurn.g:12662:4: enumLiteral_1= 'weaklyDenied'
                    {
                    enumLiteral_1=(Token)match(input,152,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getWeaklyDeniedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getQualitativeLabelAccess().getWeaklyDeniedEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12669:3: (enumLiteral_2= 'weaklySatisfied' )
                    {
                    // InternalTurn.g:12669:3: (enumLiteral_2= 'weaklySatisfied' )
                    // InternalTurn.g:12670:4: enumLiteral_2= 'weaklySatisfied'
                    {
                    enumLiteral_2=(Token)match(input,153,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getWeaklySatisfiedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getQualitativeLabelAccess().getWeaklySatisfiedEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalTurn.g:12677:3: (enumLiteral_3= 'satisfied' )
                    {
                    // InternalTurn.g:12677:3: (enumLiteral_3= 'satisfied' )
                    // InternalTurn.g:12678:4: enumLiteral_3= 'satisfied'
                    {
                    enumLiteral_3=(Token)match(input,154,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getSatisfiedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getQualitativeLabelAccess().getSatisfiedEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalTurn.g:12685:3: (enumLiteral_4= 'conflict' )
                    {
                    // InternalTurn.g:12685:3: (enumLiteral_4= 'conflict' )
                    // InternalTurn.g:12686:4: enumLiteral_4= 'conflict'
                    {
                    enumLiteral_4=(Token)match(input,155,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getConflictEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getQualitativeLabelAccess().getConflictEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalTurn.g:12693:3: (enumLiteral_5= 'unknown' )
                    {
                    // InternalTurn.g:12693:3: (enumLiteral_5= 'unknown' )
                    // InternalTurn.g:12694:4: enumLiteral_5= 'unknown'
                    {
                    enumLiteral_5=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getUnknownEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getQualitativeLabelAccess().getUnknownEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalTurn.g:12701:3: (enumLiteral_6= 'none' )
                    {
                    // InternalTurn.g:12701:3: (enumLiteral_6= 'none' )
                    // InternalTurn.g:12702:4: enumLiteral_6= 'none'
                    {
                    enumLiteral_6=(Token)match(input,157,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getQualitativeLabelAccess().getNoneEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getQualitativeLabelAccess().getNoneEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualitativeLabel"


    // $ANTLR start "ruleIntentionalElementType"
    // InternalTurn.g:12712:1: ruleIntentionalElementType returns [Enumerator current=null] : ( (enumLiteral_0= 'softgoal' ) | (enumLiteral_1= 'goal' ) | (enumLiteral_2= 'task' ) | (enumLiteral_3= 'resource' ) | (enumLiteral_4= 'belief' ) | (enumLiteral_5= 'indicator' ) ) ;
    public final Enumerator ruleIntentionalElementType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalTurn.g:12718:2: ( ( (enumLiteral_0= 'softgoal' ) | (enumLiteral_1= 'goal' ) | (enumLiteral_2= 'task' ) | (enumLiteral_3= 'resource' ) | (enumLiteral_4= 'belief' ) | (enumLiteral_5= 'indicator' ) ) )
            // InternalTurn.g:12719:2: ( (enumLiteral_0= 'softgoal' ) | (enumLiteral_1= 'goal' ) | (enumLiteral_2= 'task' ) | (enumLiteral_3= 'resource' ) | (enumLiteral_4= 'belief' ) | (enumLiteral_5= 'indicator' ) )
            {
            // InternalTurn.g:12719:2: ( (enumLiteral_0= 'softgoal' ) | (enumLiteral_1= 'goal' ) | (enumLiteral_2= 'task' ) | (enumLiteral_3= 'resource' ) | (enumLiteral_4= 'belief' ) | (enumLiteral_5= 'indicator' ) )
            int alt228=6;
            switch ( input.LA(1) ) {
            case 158:
                {
                alt228=1;
                }
                break;
            case 159:
                {
                alt228=2;
                }
                break;
            case 160:
                {
                alt228=3;
                }
                break;
            case 161:
                {
                alt228=4;
                }
                break;
            case 162:
                {
                alt228=5;
                }
                break;
            case 163:
                {
                alt228=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }

            switch (alt228) {
                case 1 :
                    // InternalTurn.g:12720:3: (enumLiteral_0= 'softgoal' )
                    {
                    // InternalTurn.g:12720:3: (enumLiteral_0= 'softgoal' )
                    // InternalTurn.g:12721:4: enumLiteral_0= 'softgoal'
                    {
                    enumLiteral_0=(Token)match(input,158,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getIntentionalElementTypeAccess().getSoftgoalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getIntentionalElementTypeAccess().getSoftgoalEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12728:3: (enumLiteral_1= 'goal' )
                    {
                    // InternalTurn.g:12728:3: (enumLiteral_1= 'goal' )
                    // InternalTurn.g:12729:4: enumLiteral_1= 'goal'
                    {
                    enumLiteral_1=(Token)match(input,159,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getIntentionalElementTypeAccess().getGoalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getIntentionalElementTypeAccess().getGoalEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12736:3: (enumLiteral_2= 'task' )
                    {
                    // InternalTurn.g:12736:3: (enumLiteral_2= 'task' )
                    // InternalTurn.g:12737:4: enumLiteral_2= 'task'
                    {
                    enumLiteral_2=(Token)match(input,160,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getIntentionalElementTypeAccess().getTaskEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getIntentionalElementTypeAccess().getTaskEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalTurn.g:12744:3: (enumLiteral_3= 'resource' )
                    {
                    // InternalTurn.g:12744:3: (enumLiteral_3= 'resource' )
                    // InternalTurn.g:12745:4: enumLiteral_3= 'resource'
                    {
                    enumLiteral_3=(Token)match(input,161,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getIntentionalElementTypeAccess().getResourceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getIntentionalElementTypeAccess().getResourceEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalTurn.g:12752:3: (enumLiteral_4= 'belief' )
                    {
                    // InternalTurn.g:12752:3: (enumLiteral_4= 'belief' )
                    // InternalTurn.g:12753:4: enumLiteral_4= 'belief'
                    {
                    enumLiteral_4=(Token)match(input,162,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getIntentionalElementTypeAccess().getBeliefEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getIntentionalElementTypeAccess().getBeliefEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalTurn.g:12760:3: (enumLiteral_5= 'indicator' )
                    {
                    // InternalTurn.g:12760:3: (enumLiteral_5= 'indicator' )
                    // InternalTurn.g:12761:4: enumLiteral_5= 'indicator'
                    {
                    enumLiteral_5=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getIntentionalElementTypeAccess().getIndicatorEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getIntentionalElementTypeAccess().getIndicatorEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntentionalElementType"


    // $ANTLR start "ruleContributionType"
    // InternalTurn.g:12771:1: ruleContributionType returns [Enumerator current=null] : ( (enumLiteral_0= 'make' ) | (enumLiteral_1= 'help' ) | (enumLiteral_2= 'somePositive' ) | (enumLiteral_3= 'unknown' ) | (enumLiteral_4= 'someNegative' ) | (enumLiteral_5= 'hurt' ) | (enumLiteral_6= 'break' ) ) ;
    public final Enumerator ruleContributionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;


        	enterRule();

        try {
            // InternalTurn.g:12777:2: ( ( (enumLiteral_0= 'make' ) | (enumLiteral_1= 'help' ) | (enumLiteral_2= 'somePositive' ) | (enumLiteral_3= 'unknown' ) | (enumLiteral_4= 'someNegative' ) | (enumLiteral_5= 'hurt' ) | (enumLiteral_6= 'break' ) ) )
            // InternalTurn.g:12778:2: ( (enumLiteral_0= 'make' ) | (enumLiteral_1= 'help' ) | (enumLiteral_2= 'somePositive' ) | (enumLiteral_3= 'unknown' ) | (enumLiteral_4= 'someNegative' ) | (enumLiteral_5= 'hurt' ) | (enumLiteral_6= 'break' ) )
            {
            // InternalTurn.g:12778:2: ( (enumLiteral_0= 'make' ) | (enumLiteral_1= 'help' ) | (enumLiteral_2= 'somePositive' ) | (enumLiteral_3= 'unknown' ) | (enumLiteral_4= 'someNegative' ) | (enumLiteral_5= 'hurt' ) | (enumLiteral_6= 'break' ) )
            int alt229=7;
            switch ( input.LA(1) ) {
            case 164:
                {
                alt229=1;
                }
                break;
            case 165:
                {
                alt229=2;
                }
                break;
            case 166:
                {
                alt229=3;
                }
                break;
            case 156:
                {
                alt229=4;
                }
                break;
            case 167:
                {
                alt229=5;
                }
                break;
            case 168:
                {
                alt229=6;
                }
                break;
            case 169:
                {
                alt229=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }

            switch (alt229) {
                case 1 :
                    // InternalTurn.g:12779:3: (enumLiteral_0= 'make' )
                    {
                    // InternalTurn.g:12779:3: (enumLiteral_0= 'make' )
                    // InternalTurn.g:12780:4: enumLiteral_0= 'make'
                    {
                    enumLiteral_0=(Token)match(input,164,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getMakeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getContributionTypeAccess().getMakeEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12787:3: (enumLiteral_1= 'help' )
                    {
                    // InternalTurn.g:12787:3: (enumLiteral_1= 'help' )
                    // InternalTurn.g:12788:4: enumLiteral_1= 'help'
                    {
                    enumLiteral_1=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getHelpEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getContributionTypeAccess().getHelpEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12795:3: (enumLiteral_2= 'somePositive' )
                    {
                    // InternalTurn.g:12795:3: (enumLiteral_2= 'somePositive' )
                    // InternalTurn.g:12796:4: enumLiteral_2= 'somePositive'
                    {
                    enumLiteral_2=(Token)match(input,166,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getSomePositiveEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getContributionTypeAccess().getSomePositiveEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalTurn.g:12803:3: (enumLiteral_3= 'unknown' )
                    {
                    // InternalTurn.g:12803:3: (enumLiteral_3= 'unknown' )
                    // InternalTurn.g:12804:4: enumLiteral_3= 'unknown'
                    {
                    enumLiteral_3=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getUnknownEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getContributionTypeAccess().getUnknownEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalTurn.g:12811:3: (enumLiteral_4= 'someNegative' )
                    {
                    // InternalTurn.g:12811:3: (enumLiteral_4= 'someNegative' )
                    // InternalTurn.g:12812:4: enumLiteral_4= 'someNegative'
                    {
                    enumLiteral_4=(Token)match(input,167,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getSomeNegativeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getContributionTypeAccess().getSomeNegativeEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalTurn.g:12819:3: (enumLiteral_5= 'hurt' )
                    {
                    // InternalTurn.g:12819:3: (enumLiteral_5= 'hurt' )
                    // InternalTurn.g:12820:4: enumLiteral_5= 'hurt'
                    {
                    enumLiteral_5=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getHurtEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getContributionTypeAccess().getHurtEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalTurn.g:12827:3: (enumLiteral_6= 'break' )
                    {
                    // InternalTurn.g:12827:3: (enumLiteral_6= 'break' )
                    // InternalTurn.g:12828:4: enumLiteral_6= 'break'
                    {
                    enumLiteral_6=(Token)match(input,169,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getContributionTypeAccess().getBreakEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getContributionTypeAccess().getBreakEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContributionType"


    // $ANTLR start "ruleImportanceType"
    // InternalTurn.g:12838:1: ruleImportanceType returns [Enumerator current=null] : ( (enumLiteral_0= 'high' ) | (enumLiteral_1= 'medium' ) | (enumLiteral_2= 'low' ) | (enumLiteral_3= 'none' ) ) ;
    public final Enumerator ruleImportanceType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalTurn.g:12844:2: ( ( (enumLiteral_0= 'high' ) | (enumLiteral_1= 'medium' ) | (enumLiteral_2= 'low' ) | (enumLiteral_3= 'none' ) ) )
            // InternalTurn.g:12845:2: ( (enumLiteral_0= 'high' ) | (enumLiteral_1= 'medium' ) | (enumLiteral_2= 'low' ) | (enumLiteral_3= 'none' ) )
            {
            // InternalTurn.g:12845:2: ( (enumLiteral_0= 'high' ) | (enumLiteral_1= 'medium' ) | (enumLiteral_2= 'low' ) | (enumLiteral_3= 'none' ) )
            int alt230=4;
            switch ( input.LA(1) ) {
            case 170:
                {
                alt230=1;
                }
                break;
            case 171:
                {
                alt230=2;
                }
                break;
            case 172:
                {
                alt230=3;
                }
                break;
            case 157:
                {
                alt230=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;
            }

            switch (alt230) {
                case 1 :
                    // InternalTurn.g:12846:3: (enumLiteral_0= 'high' )
                    {
                    // InternalTurn.g:12846:3: (enumLiteral_0= 'high' )
                    // InternalTurn.g:12847:4: enumLiteral_0= 'high'
                    {
                    enumLiteral_0=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportanceTypeAccess().getHighEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getImportanceTypeAccess().getHighEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12854:3: (enumLiteral_1= 'medium' )
                    {
                    // InternalTurn.g:12854:3: (enumLiteral_1= 'medium' )
                    // InternalTurn.g:12855:4: enumLiteral_1= 'medium'
                    {
                    enumLiteral_1=(Token)match(input,171,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportanceTypeAccess().getMediumEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getImportanceTypeAccess().getMediumEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12862:3: (enumLiteral_2= 'low' )
                    {
                    // InternalTurn.g:12862:3: (enumLiteral_2= 'low' )
                    // InternalTurn.g:12863:4: enumLiteral_2= 'low'
                    {
                    enumLiteral_2=(Token)match(input,172,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportanceTypeAccess().getLowEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getImportanceTypeAccess().getLowEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalTurn.g:12870:3: (enumLiteral_3= 'none' )
                    {
                    // InternalTurn.g:12870:3: (enumLiteral_3= 'none' )
                    // InternalTurn.g:12871:4: enumLiteral_3= 'none'
                    {
                    enumLiteral_3=(Token)match(input,157,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getImportanceTypeAccess().getNoneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getImportanceTypeAccess().getNoneEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportanceType"


    // $ANTLR start "ruleDecompositionType"
    // InternalTurn.g:12881:1: ruleDecompositionType returns [Enumerator current=null] : ( (enumLiteral_0= 'and' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'xor' ) ) ;
    public final Enumerator ruleDecompositionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalTurn.g:12887:2: ( ( (enumLiteral_0= 'and' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'xor' ) ) )
            // InternalTurn.g:12888:2: ( (enumLiteral_0= 'and' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'xor' ) )
            {
            // InternalTurn.g:12888:2: ( (enumLiteral_0= 'and' ) | (enumLiteral_1= 'or' ) | (enumLiteral_2= 'xor' ) )
            int alt231=3;
            switch ( input.LA(1) ) {
            case 83:
                {
                alt231=1;
                }
                break;
            case 81:
                {
                alt231=2;
                }
                break;
            case 173:
                {
                alt231=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }

            switch (alt231) {
                case 1 :
                    // InternalTurn.g:12889:3: (enumLiteral_0= 'and' )
                    {
                    // InternalTurn.g:12889:3: (enumLiteral_0= 'and' )
                    // InternalTurn.g:12890:4: enumLiteral_0= 'and'
                    {
                    enumLiteral_0=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDecompositionTypeAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDecompositionTypeAccess().getAndEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12897:3: (enumLiteral_1= 'or' )
                    {
                    // InternalTurn.g:12897:3: (enumLiteral_1= 'or' )
                    // InternalTurn.g:12898:4: enumLiteral_1= 'or'
                    {
                    enumLiteral_1=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDecompositionTypeAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDecompositionTypeAccess().getOrEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12905:3: (enumLiteral_2= 'xor' )
                    {
                    // InternalTurn.g:12905:3: (enumLiteral_2= 'xor' )
                    // InternalTurn.g:12906:4: enumLiteral_2= 'xor'
                    {
                    enumLiteral_2=(Token)match(input,173,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDecompositionTypeAccess().getXorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDecompositionTypeAccess().getXorEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecompositionType"


    // $ANTLR start "ruleWAITKIND"
    // InternalTurn.g:12916:1: ruleWAITKIND returns [Enumerator current=null] : ( (enumLiteral_0= 'persistent' ) | (enumLiteral_1= 'transient' ) ) ;
    public final Enumerator ruleWAITKIND() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalTurn.g:12922:2: ( ( (enumLiteral_0= 'persistent' ) | (enumLiteral_1= 'transient' ) ) )
            // InternalTurn.g:12923:2: ( (enumLiteral_0= 'persistent' ) | (enumLiteral_1= 'transient' ) )
            {
            // InternalTurn.g:12923:2: ( (enumLiteral_0= 'persistent' ) | (enumLiteral_1= 'transient' ) )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==174) ) {
                alt232=1;
            }
            else if ( (LA232_0==175) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }
            switch (alt232) {
                case 1 :
                    // InternalTurn.g:12924:3: (enumLiteral_0= 'persistent' )
                    {
                    // InternalTurn.g:12924:3: (enumLiteral_0= 'persistent' )
                    // InternalTurn.g:12925:4: enumLiteral_0= 'persistent'
                    {
                    enumLiteral_0=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getWAITKINDAccess().getPersistentEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getWAITKINDAccess().getPersistentEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12932:3: (enumLiteral_1= 'transient' )
                    {
                    // InternalTurn.g:12932:3: (enumLiteral_1= 'transient' )
                    // InternalTurn.g:12933:4: enumLiteral_1= 'transient'
                    {
                    enumLiteral_1=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getWAITKINDAccess().getTransientEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getWAITKINDAccess().getTransientEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWAITKIND"


    // $ANTLR start "ruleCOMPONENTKIND"
    // InternalTurn.g:12943:1: ruleCOMPONENTKIND returns [Enumerator current=null] : ( (enumLiteral_0= 'team' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'process' ) | (enumLiteral_3= 'agent' ) | (enumLiteral_4= 'actor' ) | (enumLiteral_5= 'parent' ) ) ;
    public final Enumerator ruleCOMPONENTKIND() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalTurn.g:12949:2: ( ( (enumLiteral_0= 'team' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'process' ) | (enumLiteral_3= 'agent' ) | (enumLiteral_4= 'actor' ) | (enumLiteral_5= 'parent' ) ) )
            // InternalTurn.g:12950:2: ( (enumLiteral_0= 'team' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'process' ) | (enumLiteral_3= 'agent' ) | (enumLiteral_4= 'actor' ) | (enumLiteral_5= 'parent' ) )
            {
            // InternalTurn.g:12950:2: ( (enumLiteral_0= 'team' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'process' ) | (enumLiteral_3= 'agent' ) | (enumLiteral_4= 'actor' ) | (enumLiteral_5= 'parent' ) )
            int alt233=6;
            switch ( input.LA(1) ) {
            case 176:
                {
                alt233=1;
                }
                break;
            case 177:
                {
                alt233=2;
                }
                break;
            case 178:
                {
                alt233=3;
                }
                break;
            case 179:
                {
                alt233=4;
                }
                break;
            case 34:
                {
                alt233=5;
                }
                break;
            case 180:
                {
                alt233=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }

            switch (alt233) {
                case 1 :
                    // InternalTurn.g:12951:3: (enumLiteral_0= 'team' )
                    {
                    // InternalTurn.g:12951:3: (enumLiteral_0= 'team' )
                    // InternalTurn.g:12952:4: enumLiteral_0= 'team'
                    {
                    enumLiteral_0=(Token)match(input,176,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCOMPONENTKINDAccess().getTeamEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCOMPONENTKINDAccess().getTeamEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalTurn.g:12959:3: (enumLiteral_1= 'object' )
                    {
                    // InternalTurn.g:12959:3: (enumLiteral_1= 'object' )
                    // InternalTurn.g:12960:4: enumLiteral_1= 'object'
                    {
                    enumLiteral_1=(Token)match(input,177,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCOMPONENTKINDAccess().getObjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCOMPONENTKINDAccess().getObjectEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalTurn.g:12967:3: (enumLiteral_2= 'process' )
                    {
                    // InternalTurn.g:12967:3: (enumLiteral_2= 'process' )
                    // InternalTurn.g:12968:4: enumLiteral_2= 'process'
                    {
                    enumLiteral_2=(Token)match(input,178,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCOMPONENTKINDAccess().getProcessEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCOMPONENTKINDAccess().getProcessEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalTurn.g:12975:3: (enumLiteral_3= 'agent' )
                    {
                    // InternalTurn.g:12975:3: (enumLiteral_3= 'agent' )
                    // InternalTurn.g:12976:4: enumLiteral_3= 'agent'
                    {
                    enumLiteral_3=(Token)match(input,179,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCOMPONENTKINDAccess().getAgentEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCOMPONENTKINDAccess().getAgentEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalTurn.g:12983:3: (enumLiteral_4= 'actor' )
                    {
                    // InternalTurn.g:12983:3: (enumLiteral_4= 'actor' )
                    // InternalTurn.g:12984:4: enumLiteral_4= 'actor'
                    {
                    enumLiteral_4=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCOMPONENTKINDAccess().getActorEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCOMPONENTKINDAccess().getActorEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalTurn.g:12991:3: (enumLiteral_5= 'parent' )
                    {
                    // InternalTurn.g:12991:3: (enumLiteral_5= 'parent' )
                    // InternalTurn.g:12992:4: enumLiteral_5= 'parent'
                    {
                    enumLiteral_5=(Token)match(input,180,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCOMPONENTKINDAccess().getParentEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCOMPONENTKINDAccess().getParentEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCOMPONENTKIND"

    // $ANTLR start synpred1_InternalTurn
    public final void synpred1_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:6466:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalTurn.g:6466:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalTurn.g:6466:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalTurn.g:6467:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalTurn.g:6467:7: ()
        // InternalTurn.g:6468:7: 
        {
        }

        // InternalTurn.g:6469:7: ( ( ruleOpMultiAssign ) )
        // InternalTurn.g:6470:8: ( ruleOpMultiAssign )
        {
        // InternalTurn.g:6470:8: ( ruleOpMultiAssign )
        // InternalTurn.g:6471:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalTurn

    // $ANTLR start synpred2_InternalTurn
    public final void synpred2_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:6660:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalTurn.g:6660:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalTurn.g:6660:6: ( () ( ( ruleOpOr ) ) )
        // InternalTurn.g:6661:6: () ( ( ruleOpOr ) )
        {
        // InternalTurn.g:6661:6: ()
        // InternalTurn.g:6662:6: 
        {
        }

        // InternalTurn.g:6663:6: ( ( ruleOpOr ) )
        // InternalTurn.g:6664:7: ( ruleOpOr )
        {
        // InternalTurn.g:6664:7: ( ruleOpOr )
        // InternalTurn.g:6665:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalTurn

    // $ANTLR start synpred3_InternalTurn
    public final void synpred3_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:6767:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalTurn.g:6767:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalTurn.g:6767:6: ( () ( ( ruleOpAnd ) ) )
        // InternalTurn.g:6768:6: () ( ( ruleOpAnd ) )
        {
        // InternalTurn.g:6768:6: ()
        // InternalTurn.g:6769:6: 
        {
        }

        // InternalTurn.g:6770:6: ( ( ruleOpAnd ) )
        // InternalTurn.g:6771:7: ( ruleOpAnd )
        {
        // InternalTurn.g:6771:7: ( ruleOpAnd )
        // InternalTurn.g:6772:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalTurn

    // $ANTLR start synpred4_InternalTurn
    public final void synpred4_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:6874:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalTurn.g:6874:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalTurn.g:6874:6: ( () ( ( ruleOpEquality ) ) )
        // InternalTurn.g:6875:6: () ( ( ruleOpEquality ) )
        {
        // InternalTurn.g:6875:6: ()
        // InternalTurn.g:6876:6: 
        {
        }

        // InternalTurn.g:6877:6: ( ( ruleOpEquality ) )
        // InternalTurn.g:6878:7: ( ruleOpEquality )
        {
        // InternalTurn.g:6878:7: ( ruleOpEquality )
        // InternalTurn.g:6879:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalTurn

    // $ANTLR start synpred5_InternalTurn
    public final void synpred5_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7002:6: ( ( () 'instanceof' ) )
        // InternalTurn.g:7002:7: ( () 'instanceof' )
        {
        // InternalTurn.g:7002:7: ( () 'instanceof' )
        // InternalTurn.g:7003:7: () 'instanceof'
        {
        // InternalTurn.g:7003:7: ()
        // InternalTurn.g:7004:7: 
        {
        }

        match(input,112,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalTurn

    // $ANTLR start synpred6_InternalTurn
    public final void synpred6_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7045:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalTurn.g:7045:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalTurn.g:7045:7: ( () ( ( ruleOpCompare ) ) )
        // InternalTurn.g:7046:7: () ( ( ruleOpCompare ) )
        {
        // InternalTurn.g:7046:7: ()
        // InternalTurn.g:7047:7: 
        {
        }

        // InternalTurn.g:7048:7: ( ( ruleOpCompare ) )
        // InternalTurn.g:7049:8: ( ruleOpCompare )
        {
        // InternalTurn.g:7049:8: ( ruleOpCompare )
        // InternalTurn.g:7050:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalTurn

    // $ANTLR start synpred7_InternalTurn
    public final void synpred7_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7180:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalTurn.g:7180:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalTurn.g:7180:6: ( () ( ( ruleOpOther ) ) )
        // InternalTurn.g:7181:6: () ( ( ruleOpOther ) )
        {
        // InternalTurn.g:7181:6: ()
        // InternalTurn.g:7182:6: 
        {
        }

        // InternalTurn.g:7183:6: ( ( ruleOpOther ) )
        // InternalTurn.g:7184:7: ( ruleOpOther )
        {
        // InternalTurn.g:7184:7: ( ruleOpOther )
        // InternalTurn.g:7185:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalTurn

    // $ANTLR start synpred8_InternalTurn
    public final void synpred8_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7300:6: ( ( '>' '>' ) )
        // InternalTurn.g:7300:7: ( '>' '>' )
        {
        // InternalTurn.g:7300:7: ( '>' '>' )
        // InternalTurn.g:7301:7: '>' '>'
        {
        match(input,104,FOLLOW_124); if (state.failed) return ;
        match(input,104,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalTurn

    // $ANTLR start synpred9_InternalTurn
    public final void synpred9_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7335:6: ( ( '<' '<' ) )
        // InternalTurn.g:7335:7: ( '<' '<' )
        {
        // InternalTurn.g:7335:7: ( '<' '<' )
        // InternalTurn.g:7336:7: '<' '<'
        {
        match(input,103,FOLLOW_115); if (state.failed) return ;
        match(input,103,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalTurn

    // $ANTLR start synpred10_InternalTurn
    public final void synpred10_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7408:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalTurn.g:7408:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalTurn.g:7408:6: ( () ( ( ruleOpAdd ) ) )
        // InternalTurn.g:7409:6: () ( ( ruleOpAdd ) )
        {
        // InternalTurn.g:7409:6: ()
        // InternalTurn.g:7410:6: 
        {
        }

        // InternalTurn.g:7411:6: ( ( ruleOpAdd ) )
        // InternalTurn.g:7412:7: ( ruleOpAdd )
        {
        // InternalTurn.g:7412:7: ( ruleOpAdd )
        // InternalTurn.g:7413:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalTurn

    // $ANTLR start synpred11_InternalTurn
    public final void synpred11_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7523:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalTurn.g:7523:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalTurn.g:7523:6: ( () ( ( ruleOpMulti ) ) )
        // InternalTurn.g:7524:6: () ( ( ruleOpMulti ) )
        {
        // InternalTurn.g:7524:6: ()
        // InternalTurn.g:7525:6: 
        {
        }

        // InternalTurn.g:7526:6: ( ( ruleOpMulti ) )
        // InternalTurn.g:7527:7: ( ruleOpMulti )
        {
        // InternalTurn.g:7527:7: ( ruleOpMulti )
        // InternalTurn.g:7528:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalTurn

    // $ANTLR start synpred12_InternalTurn
    public final void synpred12_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7758:5: ( ( () 'as' ) )
        // InternalTurn.g:7758:6: ( () 'as' )
        {
        // InternalTurn.g:7758:6: ( () 'as' )
        // InternalTurn.g:7759:6: () 'as'
        {
        // InternalTurn.g:7759:6: ()
        // InternalTurn.g:7760:6: 
        {
        }

        match(input,119,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalTurn

    // $ANTLR start synpred13_InternalTurn
    public final void synpred13_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7826:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalTurn.g:7826:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalTurn.g:7826:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalTurn.g:7827:5: () ( ( ruleOpPostfix ) )
        {
        // InternalTurn.g:7827:5: ()
        // InternalTurn.g:7828:5: 
        {
        }

        // InternalTurn.g:7829:5: ( ( ruleOpPostfix ) )
        // InternalTurn.g:7830:6: ( ruleOpPostfix )
        {
        // InternalTurn.g:7830:6: ( ruleOpPostfix )
        // InternalTurn.g:7831:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalTurn

    // $ANTLR start synpred14_InternalTurn
    public final void synpred14_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:7922:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalTurn.g:7922:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalTurn.g:7922:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalTurn.g:7923:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalTurn.g:7923:7: ()
        // InternalTurn.g:7924:7: 
        {
        }

        // InternalTurn.g:7925:7: ( '.' | ( ( '::' ) ) )
        int alt234=2;
        int LA234_0 = input.LA(1);

        if ( (LA234_0==80) ) {
            alt234=1;
        }
        else if ( (LA234_0==122) ) {
            alt234=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 234, 0, input);

            throw nvae;
        }
        switch (alt234) {
            case 1 :
                // InternalTurn.g:7926:8: '.'
                {
                match(input,80,FOLLOW_131); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalTurn.g:7928:8: ( ( '::' ) )
                {
                // InternalTurn.g:7928:8: ( ( '::' ) )
                // InternalTurn.g:7929:9: ( '::' )
                {
                // InternalTurn.g:7929:9: ( '::' )
                // InternalTurn.g:7930:10: '::'
                {
                match(input,122,FOLLOW_131); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalTurn.g:7934:7: ( ( ruleFeatureCallID ) )
        // InternalTurn.g:7935:8: ( ruleFeatureCallID )
        {
        // InternalTurn.g:7935:8: ( ruleFeatureCallID )
        // InternalTurn.g:7936:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_24);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalTurn

    // $ANTLR start synpred15_InternalTurn
    public final void synpred15_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8019:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalTurn.g:8019:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalTurn.g:8019:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalTurn.g:8020:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalTurn.g:8020:7: ()
        // InternalTurn.g:8021:7: 
        {
        }

        // InternalTurn.g:8022:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt235=3;
        switch ( input.LA(1) ) {
        case 80:
            {
            alt235=1;
            }
            break;
        case 123:
            {
            alt235=2;
            }
            break;
        case 122:
            {
            alt235=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 235, 0, input);

            throw nvae;
        }

        switch (alt235) {
            case 1 :
                // InternalTurn.g:8023:8: '.'
                {
                match(input,80,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalTurn.g:8025:8: ( ( '?.' ) )
                {
                // InternalTurn.g:8025:8: ( ( '?.' ) )
                // InternalTurn.g:8026:9: ( '?.' )
                {
                // InternalTurn.g:8026:9: ( '?.' )
                // InternalTurn.g:8027:10: '?.'
                {
                match(input,123,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalTurn.g:8031:8: ( ( '::' ) )
                {
                // InternalTurn.g:8031:8: ( ( '::' ) )
                // InternalTurn.g:8032:9: ( '::' )
                {
                // InternalTurn.g:8032:9: ( '::' )
                // InternalTurn.g:8033:10: '::'
                {
                match(input,122,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalTurn

    // $ANTLR start synpred16_InternalTurn
    public final void synpred16_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8157:7: ( ( '(' ) )
        // InternalTurn.g:8157:8: ( '(' )
        {
        // InternalTurn.g:8157:8: ( '(' )
        // InternalTurn.g:8158:8: '('
        {
        match(input,86,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalTurn

    // $ANTLR start synpred17_InternalTurn
    public final void synpred17_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8176:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalTurn.g:8176:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalTurn.g:8176:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalTurn.g:8177:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalTurn.g:8177:9: ()
        // InternalTurn.g:8178:9: 
        {
        }

        // InternalTurn.g:8179:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt237=2;
        int LA237_0 = input.LA(1);

        if ( (LA237_0==RULE_ID||LA237_0==86||LA237_0==114) ) {
            alt237=1;
        }
        switch (alt237) {
            case 1 :
                // InternalTurn.g:8180:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalTurn.g:8180:10: ( ( ruleJvmFormalParameter ) )
                // InternalTurn.g:8181:11: ( ruleJvmFormalParameter )
                {
                // InternalTurn.g:8181:11: ( ruleJvmFormalParameter )
                // InternalTurn.g:8182:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_144);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalTurn.g:8185:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop236:
                do {
                    int alt236=2;
                    int LA236_0 = input.LA(1);

                    if ( (LA236_0==25) ) {
                        alt236=1;
                    }


                    switch (alt236) {
                	case 1 :
                	    // InternalTurn.g:8186:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_122); if (state.failed) return ;
                	    // InternalTurn.g:8187:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalTurn.g:8188:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalTurn.g:8188:12: ( ruleJvmFormalParameter )
                	    // InternalTurn.g:8189:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_144);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop236;
                    }
                } while (true);


                }
                break;

        }

        // InternalTurn.g:8194:9: ( ( '|' ) )
        // InternalTurn.g:8195:10: ( '|' )
        {
        // InternalTurn.g:8195:10: ( '|' )
        // InternalTurn.g:8196:11: '|'
        {
        match(input,73,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalTurn

    // $ANTLR start synpred18_InternalTurn
    public final void synpred18_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8273:6: ( ( () '[' ) )
        // InternalTurn.g:8273:7: ( () '[' )
        {
        // InternalTurn.g:8273:7: ( () '[' )
        // InternalTurn.g:8274:7: () '['
        {
        // InternalTurn.g:8274:7: ()
        // InternalTurn.g:8275:7: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalTurn

    // $ANTLR start synpred19_InternalTurn
    public final void synpred19_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8346:4: ( ( () 'synchronized' '(' ) )
        // InternalTurn.g:8346:5: ( () 'synchronized' '(' )
        {
        // InternalTurn.g:8346:5: ( () 'synchronized' '(' )
        // InternalTurn.g:8347:5: () 'synchronized' '('
        {
        // InternalTurn.g:8347:5: ()
        // InternalTurn.g:8348:5: 
        {
        }

        match(input,148,FOLLOW_148); if (state.failed) return ;
        match(input,86,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalTurn

    // $ANTLR start synpred20_InternalTurn
    public final void synpred20_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8391:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalTurn.g:8391:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalTurn.g:8391:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalTurn.g:8392:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalTurn.g:8392:5: ()
        // InternalTurn.g:8393:5: 
        {
        }

        match(input,129,FOLLOW_148); if (state.failed) return ;
        match(input,86,FOLLOW_122); if (state.failed) return ;
        // InternalTurn.g:8396:5: ( ( ruleJvmFormalParameter ) )
        // InternalTurn.g:8397:6: ( ruleJvmFormalParameter )
        {
        // InternalTurn.g:8397:6: ( ruleJvmFormalParameter )
        // InternalTurn.g:8398:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,24,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalTurn

    // $ANTLR start synpred21_InternalTurn
    public final void synpred21_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8505:4: ( ( () '[' ) )
        // InternalTurn.g:8505:5: ( () '[' )
        {
        // InternalTurn.g:8505:5: ( () '[' )
        // InternalTurn.g:8506:5: () '['
        {
        // InternalTurn.g:8506:5: ()
        // InternalTurn.g:8507:5: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalTurn

    // $ANTLR start synpred23_InternalTurn
    public final void synpred23_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:8810:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalTurn.g:8810:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalTurn.g:8810:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalTurn.g:8811:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalTurn.g:8811:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt239=2;
        int LA239_0 = input.LA(1);

        if ( (LA239_0==RULE_ID||LA239_0==86||LA239_0==114) ) {
            alt239=1;
        }
        switch (alt239) {
            case 1 :
                // InternalTurn.g:8812:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalTurn.g:8812:6: ( ( ruleJvmFormalParameter ) )
                // InternalTurn.g:8813:7: ( ruleJvmFormalParameter )
                {
                // InternalTurn.g:8813:7: ( ruleJvmFormalParameter )
                // InternalTurn.g:8814:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_144);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalTurn.g:8817:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop238:
                do {
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==25) ) {
                        alt238=1;
                    }


                    switch (alt238) {
                	case 1 :
                	    // InternalTurn.g:8818:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_122); if (state.failed) return ;
                	    // InternalTurn.g:8819:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalTurn.g:8820:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalTurn.g:8820:8: ( ruleJvmFormalParameter )
                	    // InternalTurn.g:8821:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_144);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop238;
                    }
                } while (true);


                }
                break;

        }

        // InternalTurn.g:8826:5: ( ( '|' ) )
        // InternalTurn.g:8827:6: ( '|' )
        {
        // InternalTurn.g:8827:6: ( '|' )
        // InternalTurn.g:8828:7: '|'
        {
        match(input,73,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalTurn

    // $ANTLR start synpred25_InternalTurn
    public final void synpred25_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:9219:5: ( 'else' )
        // InternalTurn.g:9219:6: 'else'
        {
        match(input,125,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalTurn

    // $ANTLR start synpred26_InternalTurn
    public final void synpred26_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:9278:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalTurn.g:9278:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalTurn.g:9278:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalTurn.g:9279:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,86,FOLLOW_122); if (state.failed) return ;
        // InternalTurn.g:9280:7: ( ( ruleJvmFormalParameter ) )
        // InternalTurn.g:9281:8: ( ruleJvmFormalParameter )
        {
        // InternalTurn.g:9281:8: ( ruleJvmFormalParameter )
        // InternalTurn.g:9282:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,24,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalTurn

    // $ANTLR start synpred27_InternalTurn
    public final void synpred27_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:9345:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalTurn.g:9345:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalTurn.g:9345:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalTurn.g:9346:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalTurn.g:9346:7: ( ( ruleJvmFormalParameter ) )
        // InternalTurn.g:9347:8: ( ruleJvmFormalParameter )
        {
        // InternalTurn.g:9347:8: ( ruleJvmFormalParameter )
        // InternalTurn.g:9348:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,24,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalTurn

    // $ANTLR start synpred29_InternalTurn
    public final void synpred29_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10163:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalTurn.g:10163:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalTurn.g:10163:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalTurn.g:10164:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalTurn.g:10164:6: ( ( ruleJvmTypeReference ) )
        // InternalTurn.g:10165:7: ( ruleJvmTypeReference )
        {
        // InternalTurn.g:10165:7: ( ruleJvmTypeReference )
        // InternalTurn.g:10166:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_3);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalTurn.g:10169:6: ( ( ruleValidID ) )
        // InternalTurn.g:10170:7: ( ruleValidID )
        {
        // InternalTurn.g:10170:7: ( ruleValidID )
        // InternalTurn.g:10171:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalTurn

    // $ANTLR start synpred30_InternalTurn
    public final void synpred30_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10475:5: ( ( '(' ) )
        // InternalTurn.g:10475:6: ( '(' )
        {
        // InternalTurn.g:10475:6: ( '(' )
        // InternalTurn.g:10476:6: '('
        {
        match(input,86,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalTurn

    // $ANTLR start synpred31_InternalTurn
    public final void synpred31_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10494:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalTurn.g:10494:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalTurn.g:10494:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalTurn.g:10495:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalTurn.g:10495:7: ()
        // InternalTurn.g:10496:7: 
        {
        }

        // InternalTurn.g:10497:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt243=2;
        int LA243_0 = input.LA(1);

        if ( (LA243_0==RULE_ID||LA243_0==86||LA243_0==114) ) {
            alt243=1;
        }
        switch (alt243) {
            case 1 :
                // InternalTurn.g:10498:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalTurn.g:10498:8: ( ( ruleJvmFormalParameter ) )
                // InternalTurn.g:10499:9: ( ruleJvmFormalParameter )
                {
                // InternalTurn.g:10499:9: ( ruleJvmFormalParameter )
                // InternalTurn.g:10500:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_144);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalTurn.g:10503:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop242:
                do {
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==25) ) {
                        alt242=1;
                    }


                    switch (alt242) {
                	case 1 :
                	    // InternalTurn.g:10504:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_122); if (state.failed) return ;
                	    // InternalTurn.g:10505:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalTurn.g:10506:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalTurn.g:10506:10: ( ruleJvmFormalParameter )
                	    // InternalTurn.g:10507:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_144);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop242;
                    }
                } while (true);


                }
                break;

        }

        // InternalTurn.g:10512:7: ( ( '|' ) )
        // InternalTurn.g:10513:8: ( '|' )
        {
        // InternalTurn.g:10513:8: ( '|' )
        // InternalTurn.g:10514:9: '|'
        {
        match(input,73,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalTurn

    // $ANTLR start synpred32_InternalTurn
    public final void synpred32_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10591:4: ( ( () '[' ) )
        // InternalTurn.g:10591:5: ( () '[' )
        {
        // InternalTurn.g:10591:5: ( () '[' )
        // InternalTurn.g:10592:5: () '['
        {
        // InternalTurn.g:10592:5: ()
        // InternalTurn.g:10593:5: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalTurn

    // $ANTLR start synpred33_InternalTurn
    public final void synpred33_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10751:5: ( '<' )
        // InternalTurn.g:10751:6: '<'
        {
        match(input,103,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalTurn

    // $ANTLR start synpred34_InternalTurn
    public final void synpred34_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10808:5: ( ( '(' ) )
        // InternalTurn.g:10808:6: ( '(' )
        {
        // InternalTurn.g:10808:6: ( '(' )
        // InternalTurn.g:10809:6: '('
        {
        match(input,86,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalTurn

    // $ANTLR start synpred35_InternalTurn
    public final void synpred35_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10827:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalTurn.g:10827:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalTurn.g:10827:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalTurn.g:10828:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalTurn.g:10828:7: ()
        // InternalTurn.g:10829:7: 
        {
        }

        // InternalTurn.g:10830:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt245=2;
        int LA245_0 = input.LA(1);

        if ( (LA245_0==RULE_ID||LA245_0==86||LA245_0==114) ) {
            alt245=1;
        }
        switch (alt245) {
            case 1 :
                // InternalTurn.g:10831:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalTurn.g:10831:8: ( ( ruleJvmFormalParameter ) )
                // InternalTurn.g:10832:9: ( ruleJvmFormalParameter )
                {
                // InternalTurn.g:10832:9: ( ruleJvmFormalParameter )
                // InternalTurn.g:10833:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_144);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalTurn.g:10836:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop244:
                do {
                    int alt244=2;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==25) ) {
                        alt244=1;
                    }


                    switch (alt244) {
                	case 1 :
                	    // InternalTurn.g:10837:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_122); if (state.failed) return ;
                	    // InternalTurn.g:10838:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalTurn.g:10839:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalTurn.g:10839:10: ( ruleJvmFormalParameter )
                	    // InternalTurn.g:10840:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_144);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop244;
                    }
                } while (true);


                }
                break;

        }

        // InternalTurn.g:10845:7: ( ( '|' ) )
        // InternalTurn.g:10846:8: ( '|' )
        {
        // InternalTurn.g:10846:8: ( '|' )
        // InternalTurn.g:10847:9: '|'
        {
        match(input,73,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalTurn

    // $ANTLR start synpred36_InternalTurn
    public final void synpred36_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:10924:4: ( ( () '[' ) )
        // InternalTurn.g:10924:5: ( () '[' )
        {
        // InternalTurn.g:10924:5: ( () '[' )
        // InternalTurn.g:10925:5: () '['
        {
        // InternalTurn.g:10925:5: ()
        // InternalTurn.g:10926:5: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalTurn

    // $ANTLR start synpred37_InternalTurn
    public final void synpred37_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11267:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalTurn.g:
        {
        if ( (input.LA(1)>=RULE_STRING && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==15||(input.LA(1)>=26 && input.LA(1)<=27)||(input.LA(1)>=56 && input.LA(1)<=57)||input.LA(1)==86||input.LA(1)==95||input.LA(1)==103||input.LA(1)==124||input.LA(1)==126||(input.LA(1)>=129 && input.LA(1)<=131)||(input.LA(1)>=134 && input.LA(1)<=146)||input.LA(1)==148 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalTurn

    // $ANTLR start synpred38_InternalTurn
    public final void synpred38_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11338:6: ( 'catch' )
        // InternalTurn.g:11338:7: 'catch'
        {
        match(input,149,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalTurn

    // $ANTLR start synpred39_InternalTurn
    public final void synpred39_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11359:7: ( 'finally' )
        // InternalTurn.g:11359:8: 'finally'
        {
        match(input,147,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalTurn

    // $ANTLR start synpred42_InternalTurn
    public final void synpred42_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11603:5: ( '.' )
        // InternalTurn.g:11603:6: '.'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalTurn

    // $ANTLR start synpred43_InternalTurn
    public final void synpred43_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11729:5: ( ( () ruleArrayBrackets ) )
        // InternalTurn.g:11729:6: ( () ruleArrayBrackets )
        {
        // InternalTurn.g:11729:6: ( () ruleArrayBrackets )
        // InternalTurn.g:11730:6: () ruleArrayBrackets
        {
        // InternalTurn.g:11730:6: ()
        // InternalTurn.g:11731:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalTurn

    // $ANTLR start synpred44_InternalTurn
    public final void synpred44_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11926:5: ( '<' )
        // InternalTurn.g:11926:6: '<'
        {
        match(input,103,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalTurn

    // $ANTLR start synpred45_InternalTurn
    public final void synpred45_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:11982:6: ( ( () '.' ) )
        // InternalTurn.g:11982:7: ( () '.' )
        {
        // InternalTurn.g:11982:7: ( () '.' )
        // InternalTurn.g:11983:7: () '.'
        {
        // InternalTurn.g:11983:7: ()
        // InternalTurn.g:11984:7: 
        {
        }

        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalTurn

    // $ANTLR start synpred46_InternalTurn
    public final void synpred46_InternalTurn_fragment() throws RecognitionException {   
        // InternalTurn.g:12020:7: ( '<' )
        // InternalTurn.g:12020:8: '<'
        {
        match(input,103,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalTurn

    // Delegated rules

    public final boolean synpred37_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalTurn() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalTurn_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA12 dfa12 = new DFA12(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA188 dfa188 = new DFA188(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA196 dfa196 = new DFA196(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA215 dfa215 = new DFA215(this);
    protected DFA224 dfa224 = new DFA224(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\1\15\uffff";
    static final String dfa_3s = "\1\15\15\uffff";
    static final String dfa_4s = "\1\73\15\uffff";
    static final String dfa_5s = "\1\uffff\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14";
    static final String dfa_6s = "\1\0\15\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\1\4\10\uffff\1\13\5\uffff\1\14\2\uffff\1\15\1\uffff\1\3\7\uffff\1\5\1\6\5\uffff\1\7\3\uffff\1\7\1\10\1\11\2\uffff\2\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()+ loopback of 85:5: ( ({...}? => ( ({...}? => (otherlv_1= 'urnModel' ( (lv_name_2_0= ruleQualifiedName ) ) ( (lv_info_3_0= ruleConcreteURNspec ) )? ) ) ) ) | ({...}? => ( ({...}? => ( (lv_actors_4_0= ruleActor ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_showAsMeansEnd_5_0= 'showAsMeansEnd' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_stratGroups_6_0= ruleStrategiesGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_strategies_7_0= ruleEvaluationStrategy ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_indConversions_8_0= ruleIndicatorConversion ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContextGroups_9_0= ruleContributionContextGroup ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_contribContexts_10_0= ruleContributionContext ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ucmMaps_11_0= ruleUCMmap ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_concerns_12_0= ruleConcern ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_urnlinks_13_0= ruleURNlink ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_metadata_14_0= ruleMetadata ) ) )+ ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_0 = input.LA(1);

                         
                        int index12_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA12_0==EOF) ) {s = 1;}

                        else if ( LA12_0 == 13 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0) ) {s = 2;}

                        else if ( LA12_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1) ) {s = 3;}

                        else if ( LA12_0 == 14 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2) ) {s = 4;}

                        else if ( LA12_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3) ) {s = 5;}

                        else if ( LA12_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4) ) {s = 6;}

                        else if ( ( LA12_0 == 49 || LA12_0 == 53 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5) ) {s = 7;}

                        else if ( LA12_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6) ) {s = 8;}

                        else if ( LA12_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7) ) {s = 9;}

                        else if ( LA12_0 >= 58 && LA12_0 <= 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8) ) {s = 10;}

                        else if ( LA12_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9) ) {s = 11;}

                        else if ( LA12_0 == 29 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10) ) {s = 12;}

                        else if ( LA12_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11) ) {s = 13;}

                         
                        input.seek(index12_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\1\5\1\32\3\uffff\1\5\1\4\1\32\2\45";
    static final String dfa_10s = "\2\u00ad\3\uffff\2\5\3\u00ad";
    static final String dfa_11s = "\2\uffff\1\1\1\2\1\3\5\uffff";
    static final String dfa_12s = "\12\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\37\uffff\1\2\3\uffff\1\4\47\uffff\1\3\1\uffff\1\3\131\uffff\1\3",
            "\1\6\12\uffff\1\2\3\uffff\1\4\46\uffff\1\5\1\3\1\uffff\1\3\131\uffff\1\3",
            "",
            "",
            "",
            "\1\7",
            "\1\11\1\10",
            "\1\6\12\uffff\1\2\3\uffff\1\4\46\uffff\1\5\1\3\1\uffff\1\3\131\uffff\1\3",
            "\1\2\3\uffff\1\4\47\uffff\1\3\1\uffff\1\3\131\uffff\1\3",
            "\1\2\3\uffff\1\4\47\uffff\1\3\1\uffff\1\3\131\uffff\1\3"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1456:2: (this_Contribution_0= ruleContribution | this_Decomposition_1= ruleDecomposition | this_Dependency_2= ruleDependency )";
        }
    }
    static final String dfa_14s = "\11\uffff";
    static final String dfa_15s = "\1\5\1\uffff\2\5\1\4\1\uffff\3\5";
    static final String dfa_16s = "\1\u00b4\1\uffff\1\u00b4\2\5\1\uffff\3\u00b4";
    static final String dfa_17s = "\1\uffff\1\2\3\uffff\1\1\3\uffff";
    static final String dfa_18s = "\11\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\20\uffff\1\1\13\uffff\1\1\31\uffff\1\1\3\uffff\2\1\30\uffff\1\1\125\uffff\5\1",
            "",
            "\1\1\20\uffff\1\1\1\uffff\1\1\1\uffff\1\4\6\uffff\1\5\1\1\55\uffff\1\3\11\uffff\1\1\125\uffff\5\1",
            "\1\6",
            "\1\10\1\7",
            "",
            "\1\1\20\uffff\1\1\1\uffff\1\1\1\uffff\1\4\6\uffff\1\5\1\1\55\uffff\1\3\11\uffff\1\1\125\uffff\5\1",
            "\1\1\20\uffff\1\1\1\uffff\1\1\10\uffff\1\5\1\1\67\uffff\1\1\125\uffff\5\1",
            "\1\1\20\uffff\1\1\1\uffff\1\1\10\uffff\1\5\1\1\67\uffff\1\1\125\uffff\5\1"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 3139:3: ( (lv_stubs_5_0= ruleStubDeclaration ) )*";
        }
    }
    static final String dfa_20s = "\1\105\3\uffff\2\112\4\uffff";
    static final String dfa_21s = "\1\u00af\3\uffff\2\113\4\uffff";
    static final String dfa_22s = "\1\uffff\1\1\1\2\1\3\2\uffff\1\4\1\5\1\6\1\7";
    static final String[] dfa_23s = {
            "\1\2\1\3\3\1\1\6\1\10\1\uffff\1\11\1\7\137\uffff\1\4\1\5",
            "",
            "",
            "",
            "\1\6\1\10",
            "\1\6\1\10",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_12;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "3750:2: (this_AndJoin_0= ruleAndJoin | this_RespRef_1= ruleRespRef | this_OrJoin_2= ruleOrJoin | this_WaitingPlace_3= ruleWaitingPlace | this_FailurePoint_4= ruleFailurePoint | this_Timer_5= ruleTimer | this_Connect_6= ruleConnect )";
        }
    }
    static final String dfa_24s = "\6\uffff";
    static final String dfa_25s = "\1\uffff\1\4\3\uffff\1\4";
    static final String dfa_26s = "\2\5\1\uffff\1\5\1\uffff\1\5";
    static final String dfa_27s = "\1\126\1\u00b4\1\uffff\1\5\1\uffff\1\u00b4";
    static final String dfa_28s = "\2\uffff\1\1\1\uffff\1\2\1\uffff";
    static final String dfa_29s = "\6\uffff}>";
    static final String[] dfa_30s = {
            "\1\1\120\uffff\1\2",
            "\1\4\11\uffff\1\4\6\uffff\1\4\3\uffff\1\2\1\4\6\uffff\1\4\31\uffff\1\4\3\uffff\2\4\2\uffff\1\4\13\uffff\1\3\1\uffff\1\4\1\uffff\1\4\1\uffff\1\2\1\uffff\1\4\1\uffff\1\4\125\uffff\5\4",
            "",
            "\1\5",
            "",
            "\1\4\11\uffff\1\4\6\uffff\1\4\3\uffff\1\2\1\4\6\uffff\1\4\31\uffff\1\4\3\uffff\2\4\2\uffff\1\4\13\uffff\1\3\1\uffff\1\4\1\uffff\1\4\1\uffff\1\2\1\uffff\1\4\1\uffff\1\4\125\uffff\5\4"
    };

    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_24;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "5173:3: ( ( ( ( (lv_name_4_0= ruleQualifiedName ) ) ( (lv_longName_5_0= ruleLongName ) ) )? ( (lv_params_6_0= ruleStubParameters ) ) ) | ( ( ruleQualifiedName ) ) )";
        }
    }
    static final String dfa_31s = "\3\5\2\uffff\1\5";
    static final String dfa_32s = "\1\5\1\u00b4\1\5\2\uffff\1\u00b4";
    static final String dfa_33s = "\3\uffff\1\2\1\1\1\uffff";
    static final String[] dfa_34s = {
            "\1\1",
            "\1\4\20\uffff\1\4\2\uffff\1\4\10\uffff\1\4\55\uffff\1\2\11\uffff\1\4\1\3\124\uffff\5\4",
            "\1\5",
            "",
            "",
            "\1\4\20\uffff\1\4\2\uffff\1\4\10\uffff\1\4\55\uffff\1\2\11\uffff\1\4\1\3\124\uffff\5\4"
    };
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_24;
            this.eof = dfa_25;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_29;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "5814:2: (this_BoundElement_0= ruleBoundElement | this_LongBoundElement_1= ruleLongBoundElement )";
        }
    }
    static final String dfa_35s = "\10\uffff";
    static final String dfa_36s = "\1\5\1\41\2\5\1\41\3\uffff";
    static final String dfa_37s = "\1\5\1\120\1\5\1\130\1\120\3\uffff";
    static final String dfa_38s = "\5\uffff\1\1\1\2\1\3";
    static final String dfa_39s = "\10\uffff}>";
    static final String[] dfa_40s = {
            "\1\1",
            "\1\3\56\uffff\1\2",
            "\1\4",
            "\1\7\75\uffff\1\5\24\uffff\1\6",
            "\1\3\56\uffff\1\2",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "5944:2: (this_InBinding_0= ruleInBinding | this_OutBinding_1= ruleOutBinding | this_ComponentBinding_2= ruleComponentBinding )";
        }
    }
    static final String dfa_41s = "\1\10\11\uffff";
    static final String dfa_42s = "\1\4\7\0\2\uffff";
    static final String dfa_43s = "\1\u0095\7\0\2\uffff";
    static final String dfa_44s = "\10\uffff\1\2\1\1";
    static final String dfa_45s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\0\1\6\2\uffff}>";
    static final String[] dfa_46s = {
            "\5\10\6\uffff\1\10\6\uffff\1\10\1\uffff\5\10\33\uffff\2\10\10\uffff\1\10\1\uffff\1\10\13\uffff\1\10\3\uffff\1\10\1\uffff\2\10\3\uffff\1\10\3\uffff\2\10\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\55\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_8;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6464:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_6 = input.LA(1);

                         
                        int index117_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA117_1 = input.LA(1);

                         
                        int index117_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA117_2 = input.LA(1);

                         
                        int index117_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA117_3 = input.LA(1);

                         
                        int index117_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA117_4 = input.LA(1);

                         
                        int index117_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA117_5 = input.LA(1);

                         
                        int index117_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA117_7 = input.LA(1);

                         
                        int index117_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalTurn()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index117_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\13\uffff";
    static final String dfa_48s = "\1\1\12\uffff";
    static final String dfa_49s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_50s = "\1\u0095\1\uffff\10\0\1\uffff";
    static final String dfa_51s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_52s = "\2\uffff\1\0\1\1\1\6\1\7\1\5\1\2\1\3\1\4\1\uffff}>";
    static final String[] dfa_53s = {
            "\5\1\6\uffff\1\1\6\uffff\1\1\1\uffff\5\1\33\uffff\2\1\10\uffff\1\1\1\uffff\1\4\13\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\6\3\uffff\2\1\1\uffff\5\1\1\2\1\3\10\1\1\5\1\7\1\10\1\11\41\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "()* loopback of 7178:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_7 = input.LA(1);

                         
                        int index127_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA127_8 = input.LA(1);

                         
                        int index127_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA127_9 = input.LA(1);

                         
                        int index127_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA127_6 = input.LA(1);

                         
                        int index127_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA127_4 = input.LA(1);

                         
                        int index127_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA127_5 = input.LA(1);

                         
                        int index127_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalTurn()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\1\104\2\uffff\1\133\7\uffff";
    static final String dfa_55s = "\1\164\2\uffff\1\150\7\uffff";
    static final String dfa_56s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_57s = "\13\uffff}>";
    static final String[] dfa_58s = {
            "\1\1\26\uffff\1\4\13\uffff\1\6\1\3\10\uffff\1\2\1\5\1\7\1\10",
            "",
            "",
            "\1\11\14\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "7254:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_59s = "\116\uffff";
    static final String dfa_60s = "\1\2\115\uffff";
    static final String dfa_61s = "\1\4\1\0\114\uffff";
    static final String dfa_62s = "\1\u0095\1\0\114\uffff";
    static final String dfa_63s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_64s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_65s = {
            "\5\2\6\uffff\1\2\6\uffff\1\2\1\uffff\5\2\33\uffff\2\2\10\uffff\1\2\1\uffff\1\2\13\uffff\1\2\3\uffff\1\2\1\uffff\1\1\1\2\3\uffff\1\2\3\uffff\2\2\1\uffff\64\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "8155:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\44\uffff";
    static final String dfa_67s = "\1\4\2\0\41\uffff";
    static final String dfa_68s = "\1\u0094\2\0\41\uffff";
    static final String dfa_69s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_70s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_71s = {
            "\1\5\1\1\3\5\6\uffff\1\5\12\uffff\2\5\34\uffff\2\5\17\uffff\1\4\14\uffff\1\2\1\43\7\uffff\1\5\7\uffff\1\5\12\uffff\1\3\11\uffff\1\5\1\uffff\1\5\2\uffff\3\5\2\uffff\15\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "8174:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==RULE_ID) ) {s = 1;}

                        else if ( (LA145_0==86) ) {s = 2;}

                        else if ( (LA145_0==114) && (synpred17_InternalTurn())) {s = 3;}

                        else if ( (LA145_0==73) && (synpred17_InternalTurn())) {s = 4;}

                        else if ( (LA145_0==RULE_STRING||(LA145_0>=RULE_INT && LA145_0<=RULE_DECIMAL)||LA145_0==15||(LA145_0>=26 && LA145_0<=27)||(LA145_0>=56 && LA145_0<=57)||LA145_0==95||LA145_0==103||LA145_0==124||LA145_0==126||(LA145_0>=129 && LA145_0<=131)||(LA145_0>=134 && LA145_0<=146)||LA145_0==148) ) {s = 5;}

                        else if ( (LA145_0==87) ) {s = 35;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA145_2 = input.LA(1);

                         
                        int index145_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index145_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_72s = {
            "\5\2\6\uffff\1\2\6\uffff\1\2\1\uffff\3\2\1\1\1\2\33\uffff\2\2\10\uffff\1\2\1\uffff\1\2\13\uffff\1\2\3\uffff\1\2\1\uffff\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\64\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "8272:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\40\uffff";
    static final String dfa_74s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_75s = "\1\u0094\26\uffff\1\0\10\uffff";
    static final String dfa_76s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_77s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_78s = {
            "\1\14\1\5\3\14\6\uffff\1\2\12\uffff\2\14\72\uffff\1\35\20\uffff\1\5\24\uffff\1\26\1\uffff\1\3\2\uffff\1\27\1\30\1\31\2\uffff\5\5\1\1\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "8317:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_0 = input.LA(1);

                         
                        int index149_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA149_0==139) ) {s = 1;}

                        else if ( (LA149_0==15) ) {s = 2;}

                        else if ( (LA149_0==126) ) {s = 3;}

                        else if ( (LA149_0==148) && (synpred19_InternalTurn())) {s = 4;}

                        else if ( (LA149_0==RULE_ID||LA149_0==103||(LA149_0>=134 && LA149_0<=138)) ) {s = 5;}

                        else if ( (LA149_0==RULE_STRING||(LA149_0>=RULE_INT && LA149_0<=RULE_DECIMAL)||(LA149_0>=26 && LA149_0<=27)||(LA149_0>=140 && LA149_0<=143)) ) {s = 12;}

                        else if ( (LA149_0==124) ) {s = 22;}

                        else if ( (LA149_0==129) ) {s = 23;}

                        else if ( (LA149_0==130) ) {s = 24;}

                        else if ( (LA149_0==131) ) {s = 25;}

                        else if ( (LA149_0==144) ) {s = 26;}

                        else if ( (LA149_0==145) ) {s = 27;}

                        else if ( (LA149_0==146) ) {s = 28;}

                        else if ( (LA149_0==86) ) {s = 29;}

                         
                        input.seek(index149_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_23 = input.LA(1);

                         
                        int index149_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalTurn()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index149_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\46\uffff";
    static final String dfa_80s = "\1\4\2\0\43\uffff";
    static final String dfa_81s = "\1\u0094\2\0\43\uffff";
    static final String dfa_82s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_83s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_84s = {
            "\1\5\1\1\3\5\6\uffff\1\5\12\uffff\3\5\33\uffff\2\5\17\uffff\1\4\14\uffff\1\2\10\uffff\1\5\7\uffff\1\5\12\uffff\1\3\11\uffff\1\5\1\uffff\1\5\2\uffff\22\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "8809:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_0 = input.LA(1);

                         
                        int index158_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA158_0==RULE_ID) ) {s = 1;}

                        else if ( (LA158_0==86) ) {s = 2;}

                        else if ( (LA158_0==114) && (synpred23_InternalTurn())) {s = 3;}

                        else if ( (LA158_0==73) && (synpred23_InternalTurn())) {s = 4;}

                        else if ( (LA158_0==RULE_STRING||(LA158_0>=RULE_INT && LA158_0<=RULE_DECIMAL)||LA158_0==15||(LA158_0>=26 && LA158_0<=28)||(LA158_0>=56 && LA158_0<=57)||LA158_0==95||LA158_0==103||LA158_0==124||LA158_0==126||(LA158_0>=129 && LA158_0<=146)||LA158_0==148) ) {s = 5;}

                         
                        input.seek(index158_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA158_1 = input.LA(1);

                         
                        int index158_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index158_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA158_2 = input.LA(1);

                         
                        int index158_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index158_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_85s = "\43\uffff";
    static final String dfa_86s = "\1\4\1\0\41\uffff";
    static final String dfa_87s = "\1\u0094\1\0\41\uffff";
    static final String dfa_88s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_89s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_90s = {
            "\5\2\6\uffff\1\2\12\uffff\2\2\34\uffff\2\2\34\uffff\1\1\10\uffff\1\2\7\uffff\1\2\12\uffff\1\2\11\uffff\1\2\1\uffff\1\2\2\uffff\3\2\2\uffff\15\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_85;
            this.eof = dfa_85;
            this.min = dfa_86;
            this.max = dfa_87;
            this.accept = dfa_88;
            this.special = dfa_89;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "9275:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_1 = input.LA(1);

                         
                        int index165_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalTurn()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index165_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_91s = "\42\uffff";
    static final String dfa_92s = "\1\4\2\0\37\uffff";
    static final String dfa_93s = "\1\u0094\2\0\37\uffff";
    static final String dfa_94s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_95s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_96s = {
            "\1\4\1\1\3\4\6\uffff\1\4\12\uffff\2\4\34\uffff\2\4\34\uffff\1\2\10\uffff\1\4\7\uffff\1\4\12\uffff\1\3\11\uffff\1\4\1\uffff\1\4\2\uffff\3\4\2\uffff\15\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_95;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "9344:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_0 = input.LA(1);

                         
                        int index164_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA164_0==RULE_ID) ) {s = 1;}

                        else if ( (LA164_0==86) ) {s = 2;}

                        else if ( (LA164_0==114) && (synpred27_InternalTurn())) {s = 3;}

                        else if ( (LA164_0==RULE_STRING||(LA164_0>=RULE_INT && LA164_0<=RULE_DECIMAL)||LA164_0==15||(LA164_0>=26 && LA164_0<=27)||(LA164_0>=56 && LA164_0<=57)||LA164_0==95||LA164_0==103||LA164_0==124||LA164_0==126||(LA164_0>=129 && LA164_0<=131)||(LA164_0>=134 && LA164_0<=146)||LA164_0==148) ) {s = 4;}

                         
                        input.seek(index164_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA164_1 = input.LA(1);

                         
                        int index164_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalTurn()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index164_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA164_2 = input.LA(1);

                         
                        int index164_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalTurn()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index164_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "10473:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA187_1 = input.LA(1);

                         
                        int index187_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index187_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 187, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "10492:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA186_0 = input.LA(1);

                         
                        int index186_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA186_0==RULE_ID) ) {s = 1;}

                        else if ( (LA186_0==86) ) {s = 2;}

                        else if ( (LA186_0==114) && (synpred31_InternalTurn())) {s = 3;}

                        else if ( (LA186_0==73) && (synpred31_InternalTurn())) {s = 4;}

                        else if ( (LA186_0==RULE_STRING||(LA186_0>=RULE_INT && LA186_0<=RULE_DECIMAL)||LA186_0==15||(LA186_0>=26 && LA186_0<=27)||(LA186_0>=56 && LA186_0<=57)||LA186_0==95||LA186_0==103||LA186_0==124||LA186_0==126||(LA186_0>=129 && LA186_0<=131)||(LA186_0>=134 && LA186_0<=146)||LA186_0==148) ) {s = 5;}

                        else if ( (LA186_0==87) ) {s = 35;}

                         
                        input.seek(index186_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA186_1 = input.LA(1);

                         
                        int index186_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index186_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA186_2 = input.LA(1);

                         
                        int index186_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index186_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "10590:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA188_1 = input.LA(1);

                         
                        int index188_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index188_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 188, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_97s = {
            "\5\2\6\uffff\1\2\6\uffff\1\2\1\uffff\5\2\33\uffff\2\2\10\uffff\1\2\1\uffff\1\2\13\uffff\1\2\3\uffff\1\2\1\uffff\2\2\3\uffff\1\2\3\uffff\2\2\1\uffff\5\2\1\1\56\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "10749:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA192_1 = input.LA(1);

                         
                        int index192_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index192_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "10806:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA195_1 = input.LA(1);

                         
                        int index195_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index195_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 195, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "10825:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA194_0 = input.LA(1);

                         
                        int index194_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA194_0==RULE_ID) ) {s = 1;}

                        else if ( (LA194_0==86) ) {s = 2;}

                        else if ( (LA194_0==114) && (synpred35_InternalTurn())) {s = 3;}

                        else if ( (LA194_0==73) && (synpred35_InternalTurn())) {s = 4;}

                        else if ( (LA194_0==RULE_STRING||(LA194_0>=RULE_INT && LA194_0<=RULE_DECIMAL)||LA194_0==15||(LA194_0>=26 && LA194_0<=27)||(LA194_0>=56 && LA194_0<=57)||LA194_0==95||LA194_0==103||LA194_0==124||LA194_0==126||(LA194_0>=129 && LA194_0<=131)||(LA194_0>=134 && LA194_0<=146)||LA194_0==148) ) {s = 5;}

                        else if ( (LA194_0==87) ) {s = 35;}

                         
                        input.seek(index194_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA194_1 = input.LA(1);

                         
                        int index194_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index194_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA194_2 = input.LA(1);

                         
                        int index194_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalTurn()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index194_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 194, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA196 extends DFA {

        public DFA196(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 196;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "10923:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA196_1 = input.LA(1);

                         
                        int index196_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index196_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 196, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\1\41\115\uffff";
    static final String dfa_99s = "\1\4\40\0\55\uffff";
    static final String dfa_100s = "\1\u0095\40\0\55\uffff";
    static final String dfa_101s = "\41\uffff\1\2\53\uffff\1\1";
    static final String dfa_102s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\55\uffff}>";
    static final String[] dfa_103s = {
            "\1\27\1\1\1\24\1\23\1\25\6\uffff\1\12\6\uffff\1\41\1\uffff\2\41\1\17\1\20\1\41\33\uffff\1\7\1\10\10\uffff\1\41\1\uffff\1\41\13\uffff\1\41\3\uffff\1\41\1\uffff\1\40\1\41\3\uffff\1\41\3\uffff\1\6\1\41\1\uffff\5\41\1\15\24\41\1\31\1\41\1\13\2\41\1\32\1\33\1\34\2\41\1\2\1\3\1\4\1\5\1\16\1\11\1\21\1\22\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_59;
            this.eof = dfa_98;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "11266:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_1 = input.LA(1);

                         
                        int index199_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA199_2 = input.LA(1);

                         
                        int index199_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA199_3 = input.LA(1);

                         
                        int index199_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA199_4 = input.LA(1);

                         
                        int index199_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA199_5 = input.LA(1);

                         
                        int index199_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA199_6 = input.LA(1);

                         
                        int index199_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA199_7 = input.LA(1);

                         
                        int index199_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA199_8 = input.LA(1);

                         
                        int index199_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA199_9 = input.LA(1);

                         
                        int index199_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA199_10 = input.LA(1);

                         
                        int index199_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA199_11 = input.LA(1);

                         
                        int index199_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA199_12 = input.LA(1);

                         
                        int index199_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA199_13 = input.LA(1);

                         
                        int index199_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA199_14 = input.LA(1);

                         
                        int index199_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA199_15 = input.LA(1);

                         
                        int index199_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA199_16 = input.LA(1);

                         
                        int index199_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA199_17 = input.LA(1);

                         
                        int index199_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA199_18 = input.LA(1);

                         
                        int index199_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA199_19 = input.LA(1);

                         
                        int index199_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA199_20 = input.LA(1);

                         
                        int index199_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA199_21 = input.LA(1);

                         
                        int index199_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA199_22 = input.LA(1);

                         
                        int index199_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA199_23 = input.LA(1);

                         
                        int index199_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA199_24 = input.LA(1);

                         
                        int index199_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA199_25 = input.LA(1);

                         
                        int index199_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA199_26 = input.LA(1);

                         
                        int index199_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA199_27 = input.LA(1);

                         
                        int index199_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA199_28 = input.LA(1);

                         
                        int index199_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA199_29 = input.LA(1);

                         
                        int index199_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA199_30 = input.LA(1);

                         
                        int index199_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA199_31 = input.LA(1);

                         
                        int index199_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA199_32 = input.LA(1);

                         
                        int index199_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTurn()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index199_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_104s = "\117\uffff";
    static final String dfa_105s = "\1\2\116\uffff";
    static final String dfa_106s = "\1\4\1\0\115\uffff";
    static final String dfa_107s = "\1\u0095\1\0\115\uffff";
    static final String dfa_108s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_109s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_110s = {
            "\5\2\6\uffff\1\2\6\uffff\1\2\1\uffff\5\2\33\uffff\2\2\10\uffff\1\2\1\uffff\1\2\13\uffff\1\2\3\uffff\1\2\1\uffff\2\2\3\uffff\1\2\3\uffff\10\2\1\1\56\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_104;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "11924:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_1 = input.LA(1);

                         
                        int index217_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalTurn()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index217_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA215 extends DFA {

        public DFA215(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 215;
            this.eot = dfa_104;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "12018:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA215_1 = input.LA(1);

                         
                        int index215_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTurn()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index215_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 215, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_111s = "\7\uffff";
    static final String dfa_112s = "\2\uffff\1\4\3\uffff\1\4";
    static final String dfa_113s = "\1\5\1\uffff\1\102\1\5\2\uffff\1\102";
    static final String dfa_114s = "\1\u0087\1\uffff\1\120\1\124\2\uffff\1\120";
    static final String dfa_115s = "\1\uffff\1\1\2\uffff\1\2\1\3\1\uffff";
    static final String dfa_116s = "\7\uffff}>";
    static final String[] dfa_117s = {
            "\1\2\u0081\uffff\1\1",
            "",
            "\1\4\15\uffff\1\3",
            "\1\6\116\uffff\1\5",
            "",
            "",
            "\1\4\15\uffff\1\3"
    };

    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);

    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = dfa_111;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "12480:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0CE20C052080E002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000005000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000008000020L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000004000060L,0x00000003C0100000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000400010L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000020L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000004008000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000800400000L,0x0000000000000000L,0x0000000FC0000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0300000000000040L,0x0000000000000000L,0x00001C0020000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000000L,0x0000000FC0000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000023800400020L,0x00000000000A0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000023000400020L,0x00000000000A0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000022000400020L,0x00000000000A0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000002004000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x000000C000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0300000000000040L,0x0000000000000000L,0x00001FF030000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000004000020L,0x00000000000A0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000020L,0x00000000000A0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000020004000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000100000420020L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000100000400020L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000002400000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0001600000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0300000000000040L,0x0000000000000000L,0x00001C003F800000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0001200000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0001200000400000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x1000000400400020L,0x0000000004000003L,0x001F000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000400400020L,0x0000000004000000L,0x001F000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000008000022L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x000000000C000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x2000000004000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x00000000302A8000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000022L,0x0000000000000004L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000006FE0L,0x0000C00000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000006FE0L,0x0000C00000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000008008022L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x000000000C008000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000008008002L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000008400000L,0x0000000000001010L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000008400000L,0x0000000000000010L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000010L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x4000000008000022L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x400000000C000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x4000000008000002L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000008000020L,0x0000000000010000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x000000000C000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000008000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000008008020L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000008020L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000400000L,0x0000000000100000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000020L,0x0000000000400008L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000020L,0x0000000000400000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000004000020L,0x0000000000400000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000008002L,0x0000000000000010L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000400000L,0x0000000001000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000008000020L,0x0000000002800000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000204000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000020L,0x0000000002000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000400000020L,0x0000000000000000L,0x001F000000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000004000062L,0x00000003C0100000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x030000000C0081F0L,0x5000008080400000L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x000001FC00000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000F00000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0001038000000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000020L,0x0004000000400000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x001E018008000010L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000000L,0x0004008000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0300000000000002L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0060000100100000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0300000000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000010000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x00000000000003C0L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000020L,0x0000008000000000L,0x00000000000007C0L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000020L,0x0004000000400000L,0x0000000000400000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000002000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000008000002L,0x0C00000000410000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x030000000C0081F0L,0x5004008080C00200L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000002000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000008000002L,0x0C00000000010000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x030000000C4081F0L,0x5000008080400000L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x030000001C0081F0L,0x5000008080400000L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x030000001C0081F0L,0x5004008080400200L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x030000001C0081F0L,0x5000008080400000L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x030000000C0081F2L,0x5000008080400004L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x030000000C0081F2L,0x5000008080400000L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x030000000C0081F0L,0x5004008080400000L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000003400020L,0x8004000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000003000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000003000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x030000000C0081F0L,0x5000008080400004L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x030000000C0081F0L,0x5000008080400000L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x030000000C0081F0L,0x5000008080400004L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x030000000C0081F0L,0x5000008080C00000L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x030000000C4081F0L,0x5000008080400000L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x030000000C4081F0L,0x5000008080400004L,0x000000000017FFFEL});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000008000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000008000002L,0x0000008000400000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000008000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x030000000C0081F2L,0x5000008080400000L,0x000000000017FFCEL});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000280000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000280000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000140L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000020L,0x0004000000C00000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000002L,0x0000008000010000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000440L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000020L,0x0000000000100000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000022L});

}
