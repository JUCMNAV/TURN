/*
 * generated by Xtext 2.16.0-SNAPSHOT
 */
grammar InternalTurn;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.project.turn.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.project.turn.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.project.turn.services.TurnGrammarAccess;

}
@parser::members {
	private TurnGrammarAccess grammarAccess;

	public void setGrammarAccess(TurnGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleURNspec
entryRuleURNspec
:
{ before(grammarAccess.getURNspecRule()); }
	 ruleURNspec
{ after(grammarAccess.getURNspecRule()); } 
	 EOF 
;

// Rule URNspec
ruleURNspec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURNspecAccess().getUnorderedGroup()); }
		(rule__URNspec__UnorderedGroup)
		{ after(grammarAccess.getURNspecAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcreteURNspec
entryRuleConcreteURNspec
:
{ before(grammarAccess.getConcreteURNspecRule()); }
	 ruleConcreteURNspec
{ after(grammarAccess.getConcreteURNspecRule()); } 
	 EOF 
;

// Rule ConcreteURNspec
ruleConcreteURNspec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getGroup()); }
		(rule__ConcreteURNspec__Group__0)
		{ after(grammarAccess.getConcreteURNspecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcern
entryRuleConcern
:
{ before(grammarAccess.getConcernRule()); }
	 ruleConcern
{ after(grammarAccess.getConcernRule()); } 
	 EOF 
;

// Rule Concern
ruleConcern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcernAccess().getGroup()); }
		(rule__Concern__Group__0)
		{ after(grammarAccess.getConcernAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLongName
entryRuleLongName
:
{ before(grammarAccess.getLongNameRule()); }
	 ruleLongName
{ after(grammarAccess.getLongNameRule()); } 
	 EOF 
;

// Rule LongName
ruleLongName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLongNameAccess().getGroup()); }
		(rule__LongName__Group__0)
		{ after(grammarAccess.getLongNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcreteCondition
entryRuleConcreteCondition
:
{ before(grammarAccess.getConcreteConditionRule()); }
	 ruleConcreteCondition
{ after(grammarAccess.getConcreteConditionRule()); } 
	 EOF 
;

// Rule ConcreteCondition
ruleConcreteCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcreteConditionAccess().getGroup()); }
		(rule__ConcreteCondition__Group__0)
		{ after(grammarAccess.getConcreteConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURNlink
entryRuleURNlink
:
{ before(grammarAccess.getURNlinkRule()); }
	 ruleURNlink
{ after(grammarAccess.getURNlinkRule()); } 
	 EOF 
;

// Rule URNlink
ruleURNlink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURNlinkAccess().getGroup()); }
		(rule__URNlink__Group__0)
		{ after(grammarAccess.getURNlinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetadata
entryRuleMetadata
:
{ before(grammarAccess.getMetadataRule()); }
	 ruleMetadata
{ after(grammarAccess.getMetadataRule()); } 
	 EOF 
;

// Rule Metadata
ruleMetadata 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetadataAccess().getGroup()); }
		(rule__Metadata__Group__0)
		{ after(grammarAccess.getMetadataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntentionalElement
entryRuleIntentionalElement
:
{ before(grammarAccess.getIntentionalElementRule()); }
	 ruleIntentionalElement
{ after(grammarAccess.getIntentionalElementRule()); } 
	 EOF 
;

// Rule IntentionalElement
ruleIntentionalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getGroup()); }
		(rule__IntentionalElement__Group__0)
		{ after(grammarAccess.getIntentionalElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementLink
entryRuleElementLink
:
{ before(grammarAccess.getElementLinkRule()); }
	 ruleElementLink
{ after(grammarAccess.getElementLinkRule()); } 
	 EOF 
;

// Rule ElementLink
ruleElementLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementLinkAccess().getAlternatives()); }
		(rule__ElementLink__Alternatives)
		{ after(grammarAccess.getElementLinkAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContribution
entryRuleContribution
:
{ before(grammarAccess.getContributionRule()); }
	 ruleContribution
{ after(grammarAccess.getContributionRule()); } 
	 EOF 
;

// Rule Contribution
ruleContribution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContributionAccess().getGroup()); }
		(rule__Contribution__Group__0)
		{ after(grammarAccess.getContributionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecomposition
entryRuleDecomposition
:
{ before(grammarAccess.getDecompositionRule()); }
	 ruleDecomposition
{ after(grammarAccess.getDecompositionRule()); } 
	 EOF 
;

// Rule Decomposition
ruleDecomposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecompositionAccess().getGroup()); }
		(rule__Decomposition__Group__0)
		{ after(grammarAccess.getDecompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArtificialRule
entryRuleArtificialRule
:
{ before(grammarAccess.getArtificialRuleRule()); }
	 ruleArtificialRule
{ after(grammarAccess.getArtificialRuleRule()); } 
	 EOF 
;

// Rule ArtificialRule
ruleArtificialRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArtificialRuleAccess().getLongNameAssignment()); }
		(rule__ArtificialRule__LongNameAssignment)?
		{ after(grammarAccess.getArtificialRuleAccess().getLongNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrategiesGroup
entryRuleStrategiesGroup
:
{ before(grammarAccess.getStrategiesGroupRule()); }
	 ruleStrategiesGroup
{ after(grammarAccess.getStrategiesGroupRule()); } 
	 EOF 
;

// Rule StrategiesGroup
ruleStrategiesGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStrategiesGroupAccess().getGroup()); }
		(rule__StrategiesGroup__Group__0)
		{ after(grammarAccess.getStrategiesGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvaluationStrategy
entryRuleEvaluationStrategy
:
{ before(grammarAccess.getEvaluationStrategyRule()); }
	 ruleEvaluationStrategy
{ after(grammarAccess.getEvaluationStrategyRule()); } 
	 EOF 
;

// Rule EvaluationStrategy
ruleEvaluationStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getGroup()); }
		(rule__EvaluationStrategy__Group__0)
		{ after(grammarAccess.getEvaluationStrategyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcreteStrategy
entryRuleConcreteStrategy
:
{ before(grammarAccess.getConcreteStrategyRule()); }
	 ruleConcreteStrategy
{ after(grammarAccess.getConcreteStrategyRule()); } 
	 EOF 
;

// Rule ConcreteStrategy
ruleConcreteStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcreteStrategyAccess().getGroup()); }
		(rule__ConcreteStrategy__Group__0)
		{ after(grammarAccess.getConcreteStrategyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvaluation
entryRuleEvaluation
:
{ before(grammarAccess.getEvaluationRule()); }
	 ruleEvaluation
{ after(grammarAccess.getEvaluationRule()); } 
	 EOF 
;

// Rule Evaluation
ruleEvaluation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvaluationAccess().getGroup()); }
		(rule__Evaluation__Group__0)
		{ after(grammarAccess.getEvaluationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndicatorEvaluation
entryRuleIndicatorEvaluation
:
{ before(grammarAccess.getIndicatorEvaluationRule()); }
	 ruleIndicatorEvaluation
{ after(grammarAccess.getIndicatorEvaluationRule()); } 
	 EOF 
;

// Rule IndicatorEvaluation
ruleIndicatorEvaluation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndicatorEvaluationAccess().getGroup()); }
		(rule__IndicatorEvaluation__Group__0)
		{ after(grammarAccess.getIndicatorEvaluationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndicatorConversion
entryRuleIndicatorConversion
:
{ before(grammarAccess.getIndicatorConversionRule()); }
	 ruleIndicatorConversion
{ after(grammarAccess.getIndicatorConversionRule()); } 
	 EOF 
;

// Rule IndicatorConversion
ruleIndicatorConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndicatorConversionAccess().getAlternatives()); }
		(rule__IndicatorConversion__Alternatives)
		{ after(grammarAccess.getIndicatorConversionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinearConversion
entryRuleLinearConversion
:
{ before(grammarAccess.getLinearConversionRule()); }
	 ruleLinearConversion
{ after(grammarAccess.getLinearConversionRule()); } 
	 EOF 
;

// Rule LinearConversion
ruleLinearConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinearConversionAccess().getGroup()); }
		(rule__LinearConversion__Group__0)
		{ after(grammarAccess.getLinearConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualToQMappings
entryRuleQualToQMappings
:
{ before(grammarAccess.getQualToQMappingsRule()); }
	 ruleQualToQMappings
{ after(grammarAccess.getQualToQMappingsRule()); } 
	 EOF 
;

// Rule QualToQMappings
ruleQualToQMappings 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getGroup()); }
		(rule__QualToQMappings__Group__0)
		{ after(grammarAccess.getQualToQMappingsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualToQMapping
entryRuleQualToQMapping
:
{ before(grammarAccess.getQualToQMappingRule()); }
	 ruleQualToQMapping
{ after(grammarAccess.getQualToQMappingRule()); } 
	 EOF 
;

// Rule QualToQMapping
ruleQualToQMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualToQMappingAccess().getGroup()); }
		(rule__QualToQMapping__Group__0)
		{ after(grammarAccess.getQualToQMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContributionContextGroup
entryRuleContributionContextGroup
:
{ before(grammarAccess.getContributionContextGroupRule()); }
	 ruleContributionContextGroup
{ after(grammarAccess.getContributionContextGroupRule()); } 
	 EOF 
;

// Rule ContributionContextGroup
ruleContributionContextGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContributionContextGroupAccess().getGroup()); }
		(rule__ContributionContextGroup__Group__0)
		{ after(grammarAccess.getContributionContextGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContributionContext
entryRuleContributionContext
:
{ before(grammarAccess.getContributionContextRule()); }
	 ruleContributionContext
{ after(grammarAccess.getContributionContextRule()); } 
	 EOF 
;

// Rule ContributionContext
ruleContributionContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContributionContextAccess().getGroup()); }
		(rule__ContributionContext__Group__0)
		{ after(grammarAccess.getContributionContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContributionChange
entryRuleContributionChange
:
{ before(grammarAccess.getContributionChangeRule()); }
	 ruleContributionChange
{ after(grammarAccess.getContributionChangeRule()); } 
	 EOF 
;

// Rule ContributionChange
ruleContributionChange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContributionChangeAccess().getGroup()); }
		(rule__ContributionChange__Group__0)
		{ after(grammarAccess.getContributionChangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantitativeValue
entryRuleQuantitativeValue
:
{ before(grammarAccess.getQuantitativeValueRule()); }
	 ruleQuantitativeValue
{ after(grammarAccess.getQuantitativeValueRule()); } 
	 EOF 
;

// Rule QuantitativeValue
ruleQuantitativeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantitativeValueAccess().getGroup()); }
		(rule__QuantitativeValue__Group__0)
		{ after(grammarAccess.getQuantitativeValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUCMmap
entryRuleUCMmap
:
{ before(grammarAccess.getUCMmapRule()); }
	 ruleUCMmap
{ after(grammarAccess.getUCMmapRule()); } 
	 EOF 
;

// Rule UCMmap
ruleUCMmap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUCMmapAccess().getGroup()); }
		(rule__UCMmap__Group__0)
		{ after(grammarAccess.getUCMmapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartPoint
entryRuleStartPoint
:
{ before(grammarAccess.getStartPointRule()); }
	 ruleStartPoint
{ after(grammarAccess.getStartPointRule()); } 
	 EOF 
;

// Rule StartPoint
ruleStartPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartPointAccess().getAlternatives()); }
		(rule__StartPoint__Alternatives)
		{ after(grammarAccess.getStartPointAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailureKind
entryRuleFailureKind
:
{ before(grammarAccess.getFailureKindRule()); }
	 ruleFailureKind
{ after(grammarAccess.getFailureKindRule()); } 
	 EOF 
;

// Rule FailureKind
ruleFailureKind 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailureKindAccess().getAlternatives()); }
		(rule__FailureKind__Alternatives)
		{ after(grammarAccess.getFailureKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathBody
entryRulePathBody
:
{ before(grammarAccess.getPathBodyRule()); }
	 rulePathBody
{ after(grammarAccess.getPathBodyRule()); } 
	 EOF 
;

// Rule PathBody
rulePathBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathBodyAccess().getPathWithRegularEndParserRuleCall()); }
		rulePathWithRegularEnd
		{ after(grammarAccess.getPathBodyAccess().getPathWithRegularEndParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathWithRegularEnd
entryRulePathWithRegularEnd
:
{ before(grammarAccess.getPathWithRegularEndRule()); }
	 rulePathWithRegularEnd
{ after(grammarAccess.getPathWithRegularEndRule()); } 
	 EOF 
;

// Rule PathWithRegularEnd
rulePathWithRegularEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathWithRegularEndAccess().getGroup()); }
		(rule__PathWithRegularEnd__Group__0)
		{ after(grammarAccess.getPathWithRegularEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathWithReferencedEnd
entryRulePathWithReferencedEnd
:
{ before(grammarAccess.getPathWithReferencedEndRule()); }
	 rulePathWithReferencedEnd
{ after(grammarAccess.getPathWithReferencedEndRule()); } 
	 EOF 
;

// Rule PathWithReferencedEnd
rulePathWithReferencedEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathWithReferencedEndAccess().getGroup()); }
		(rule__PathWithReferencedEnd__Group__0)
		{ after(grammarAccess.getPathWithReferencedEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathWithReferencedStub
entryRulePathWithReferencedStub
:
{ before(grammarAccess.getPathWithReferencedStubRule()); }
	 rulePathWithReferencedStub
{ after(grammarAccess.getPathWithReferencedStubRule()); } 
	 EOF 
;

// Rule PathWithReferencedStub
rulePathWithReferencedStub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathWithReferencedStubAccess().getGroup()); }
		(rule__PathWithReferencedStub__Group__0)
		{ after(grammarAccess.getPathWithReferencedStubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathBodyNodes
entryRulePathBodyNodes
:
{ before(grammarAccess.getPathBodyNodesRule()); }
	 rulePathBodyNodes
{ after(grammarAccess.getPathBodyNodesRule()); } 
	 EOF 
;

// Rule PathBodyNodes
rulePathBodyNodes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathBodyNodesAccess().getGroup()); }
		(rule__PathBodyNodes__Group__0)
		{ after(grammarAccess.getPathBodyNodesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrow
entryRuleArrow
:
{ before(grammarAccess.getArrowRule()); }
	 ruleArrow
{ after(grammarAccess.getArrowRule()); } 
	 EOF 
;

// Rule Arrow
ruleArrow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword()); }
		'->'
		{ after(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathBodyNode
entryRulePathBodyNode
:
{ before(grammarAccess.getPathBodyNodeRule()); }
	 rulePathBodyNode
{ after(grammarAccess.getPathBodyNodeRule()); } 
	 EOF 
;

// Rule PathBodyNode
rulePathBodyNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getAlternatives()); }
		(rule__PathBodyNode__Alternatives)
		{ after(grammarAccess.getPathBodyNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularEnd
entryRuleRegularEnd
:
{ before(grammarAccess.getRegularEndRule()); }
	 ruleRegularEnd
{ after(grammarAccess.getRegularEndRule()); } 
	 EOF 
;

// Rule RegularEnd
ruleRegularEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularEndAccess().getAlternatives()); }
		(rule__RegularEnd__Alternatives)
		{ after(grammarAccess.getRegularEndAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndpointWithConnect
entryRuleEndpointWithConnect
:
{ before(grammarAccess.getEndpointWithConnectRule()); }
	 ruleEndpointWithConnect
{ after(grammarAccess.getEndpointWithConnectRule()); } 
	 EOF 
;

// Rule EndpointWithConnect
ruleEndpointWithConnect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndpointWithConnectAccess().getGroup()); }
		(rule__EndpointWithConnect__Group__0)
		{ after(grammarAccess.getEndpointWithConnectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRespRef
entryRuleRespRef
:
{ before(grammarAccess.getRespRefRule()); }
	 ruleRespRef
{ after(grammarAccess.getRespRefRule()); } 
	 EOF 
;

// Rule RespRef
ruleRespRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRespRefAccess().getGroup()); }
		(rule__RespRef__Group__0)
		{ after(grammarAccess.getRespRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrJoin
entryRuleOrJoin
:
{ before(grammarAccess.getOrJoinRule()); }
	 ruleOrJoin
{ after(grammarAccess.getOrJoinRule()); } 
	 EOF 
;

// Rule OrJoin
ruleOrJoin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrJoinAccess().getGroup()); }
		(rule__OrJoin__Group__0)
		{ after(grammarAccess.getOrJoinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndJoin
entryRuleAndJoin
:
{ before(grammarAccess.getAndJoinRule()); }
	 ruleAndJoin
{ after(grammarAccess.getAndJoinRule()); } 
	 EOF 
;

// Rule AndJoin
ruleAndJoin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndJoinAccess().getGroup()); }
		(rule__AndJoin__Group__0)
		{ after(grammarAccess.getAndJoinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWaitingPlace
entryRuleWaitingPlace
:
{ before(grammarAccess.getWaitingPlaceRule()); }
	 ruleWaitingPlace
{ after(grammarAccess.getWaitingPlaceRule()); } 
	 EOF 
;

// Rule WaitingPlace
ruleWaitingPlace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWaitingPlaceAccess().getGroup()); }
		(rule__WaitingPlace__Group__0)
		{ after(grammarAccess.getWaitingPlaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimer
entryRuleTimer
:
{ before(grammarAccess.getTimerRule()); }
	 ruleTimer
{ after(grammarAccess.getTimerRule()); } 
	 EOF 
;

// Rule Timer
ruleTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimerAccess().getGroup()); }
		(rule__Timer__Group__0)
		{ after(grammarAccess.getTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnect
entryRuleConnect
:
{ before(grammarAccess.getConnectRule()); }
	 ruleConnect
{ after(grammarAccess.getConnectRule()); } 
	 EOF 
;

// Rule Connect
ruleConnect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectAccess().getGroup()); }
		(rule__Connect__Group__0)
		{ after(grammarAccess.getConnectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailurePoint
entryRuleFailurePoint
:
{ before(grammarAccess.getFailurePointRule()); }
	 ruleFailurePoint
{ after(grammarAccess.getFailurePointRule()); } 
	 EOF 
;

// Rule FailurePoint
ruleFailurePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailurePointAccess().getGroup()); }
		(rule__FailurePoint__Group__0)
		{ after(grammarAccess.getFailurePointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndPoint
entryRuleEndPoint
:
{ before(grammarAccess.getEndPointRule()); }
	 ruleEndPoint
{ after(grammarAccess.getEndPointRule()); } 
	 EOF 
;

// Rule EndPoint
ruleEndPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndPointAccess().getGroup()); }
		(rule__EndPoint__Group__0)
		{ after(grammarAccess.getEndPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrFork
entryRuleOrFork
:
{ before(grammarAccess.getOrForkRule()); }
	 ruleOrFork
{ after(grammarAccess.getOrForkRule()); } 
	 EOF 
;

// Rule OrFork
ruleOrFork 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrForkAccess().getGroup()); }
		(rule__OrFork__Group__0)
		{ after(grammarAccess.getOrForkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrBody
entryRuleOrBody
:
{ before(grammarAccess.getOrBodyRule()); }
	 ruleOrBody
{ after(grammarAccess.getOrBodyRule()); } 
	 EOF 
;

// Rule OrBody
ruleOrBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrBodyAccess().getElseOrForkBodyParserRuleCall()); }
		ruleElseOrForkBody
		{ after(grammarAccess.getOrBodyAccess().getElseOrForkBodyParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseOrForkBody
entryRuleElseOrForkBody
:
{ before(grammarAccess.getElseOrForkBodyRule()); }
	 ruleElseOrForkBody
{ after(grammarAccess.getElseOrForkBodyRule()); } 
	 EOF 
;

// Rule ElseOrForkBody
ruleElseOrForkBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseOrForkBodyAccess().getGroup()); }
		(rule__ElseOrForkBody__Group__0)
		{ after(grammarAccess.getElseOrForkBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrForkBody
entryRuleOrForkBody
:
{ before(grammarAccess.getOrForkBodyRule()); }
	 ruleOrForkBody
{ after(grammarAccess.getOrForkBodyRule()); } 
	 EOF 
;

// Rule OrForkBody
ruleOrForkBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getOrForkBodyAccess().getRegularBodyAssignment()); }
			(rule__OrForkBody__RegularBodyAssignment)
			{ after(grammarAccess.getOrForkBodyAccess().getRegularBodyAssignment()); }
		)
		(
			{ before(grammarAccess.getOrForkBodyAccess().getRegularBodyAssignment()); }
			(rule__OrForkBody__RegularBodyAssignment)*
			{ after(grammarAccess.getOrForkBodyAccess().getRegularBodyAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularOrFork
entryRuleRegularOrFork
:
{ before(grammarAccess.getRegularOrForkRule()); }
	 ruleRegularOrFork
{ after(grammarAccess.getRegularOrForkRule()); } 
	 EOF 
;

// Rule RegularOrFork
ruleRegularOrFork 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularOrForkAccess().getGroup()); }
		(rule__RegularOrFork__Group__0)
		{ after(grammarAccess.getRegularOrForkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndFork
entryRuleAndFork
:
{ before(grammarAccess.getAndForkRule()); }
	 ruleAndFork
{ after(grammarAccess.getAndForkRule()); } 
	 EOF 
;

// Rule AndFork
ruleAndFork 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndForkAccess().getGroup()); }
		(rule__AndFork__Group__0)
		{ after(grammarAccess.getAndForkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStub
entryRuleStub
:
{ before(grammarAccess.getStubRule()); }
	 ruleStub
{ after(grammarAccess.getStubRule()); } 
	 EOF 
;

// Rule Stub
ruleStub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStubAccess().getGroup()); }
		(rule__Stub__Group__0)
		{ after(grammarAccess.getStubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStubType
entryRuleStubType
:
{ before(grammarAccess.getStubTypeRule()); }
	 ruleStubType
{ after(grammarAccess.getStubTypeRule()); } 
	 EOF 
;

// Rule StubType
ruleStubType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStubTypeAccess().getAlternatives()); }
		(rule__StubType__Alternatives)
		{ after(grammarAccess.getStubTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStubParameters
entryRuleStubParameters
:
{ before(grammarAccess.getStubParametersRule()); }
	 ruleStubParameters
{ after(grammarAccess.getStubParametersRule()); } 
	 EOF 
;

// Rule StubParameters
ruleStubParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStubParametersAccess().getGroup()); }
		(rule__StubParameters__Group__0)
		{ after(grammarAccess.getStubParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStubDeclaration
entryRuleStubDeclaration
:
{ before(grammarAccess.getStubDeclarationRule()); }
	 ruleStubDeclaration
{ after(grammarAccess.getStubDeclarationRule()); } 
	 EOF 
;

// Rule StubDeclaration
ruleStubDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStubDeclarationAccess().getGroup()); }
		(rule__StubDeclaration__Group__0)
		{ after(grammarAccess.getStubDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStubOutPath
entryRuleStubOutPath
:
{ before(grammarAccess.getStubOutPathRule()); }
	 ruleStubOutPath
{ after(grammarAccess.getStubOutPathRule()); } 
	 EOF 
;

// Rule StubOutPath
ruleStubOutPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStubOutPathAccess().getGroup()); }
		(rule__StubOutPath__Group__0)
		{ after(grammarAccess.getStubOutPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePluginBinding
entryRulePluginBinding
:
{ before(grammarAccess.getPluginBindingRule()); }
	 rulePluginBinding
{ after(grammarAccess.getPluginBindingRule()); } 
	 EOF 
;

// Rule PluginBinding
rulePluginBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPluginBindingAccess().getGroup()); }
		(rule__PluginBinding__Group__0)
		{ after(grammarAccess.getPluginBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentRef
entryRuleComponentRef
:
{ before(grammarAccess.getComponentRefRule()); }
	 ruleComponentRef
{ after(grammarAccess.getComponentRefRule()); } 
	 EOF 
;

// Rule ComponentRef
ruleComponentRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentRefAccess().getGroup()); }
		(rule__ComponentRef__Group__0)
		{ after(grammarAccess.getComponentRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundOption
entryRuleBoundOption
:
{ before(grammarAccess.getBoundOptionRule()); }
	 ruleBoundOption
{ after(grammarAccess.getBoundOptionRule()); } 
	 EOF 
;

// Rule BoundOption
ruleBoundOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundOptionAccess().getAlternatives()); }
		(rule__BoundOption__Alternatives)
		{ after(grammarAccess.getBoundOptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundElement
entryRuleBoundElement
:
{ before(grammarAccess.getBoundElementRule()); }
	 ruleBoundElement
{ after(grammarAccess.getBoundElementRule()); } 
	 EOF 
;

// Rule BoundElement
ruleBoundElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundElementAccess().getElemAssignment()); }
		(rule__BoundElement__ElemAssignment)
		{ after(grammarAccess.getBoundElementAccess().getElemAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLongBoundElement
entryRuleLongBoundElement
:
{ before(grammarAccess.getLongBoundElementRule()); }
	 ruleLongBoundElement
{ after(grammarAccess.getLongBoundElementRule()); } 
	 EOF 
;

// Rule LongBoundElement
ruleLongBoundElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLongBoundElementAccess().getGroup()); }
		(rule__LongBoundElement__Group__0)
		{ after(grammarAccess.getLongBoundElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinding
entryRuleBinding
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingAccess().getAlternatives()); }
		(rule__Binding__Alternatives)
		{ after(grammarAccess.getBindingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInBinding
entryRuleInBinding
:
{ before(grammarAccess.getInBindingRule()); }
	 ruleInBinding
{ after(grammarAccess.getInBindingRule()); } 
	 EOF 
;

// Rule InBinding
ruleInBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInBindingAccess().getGroup()); }
		(rule__InBinding__Group__0)
		{ after(grammarAccess.getInBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutBinding
entryRuleOutBinding
:
{ before(grammarAccess.getOutBindingRule()); }
	 ruleOutBinding
{ after(grammarAccess.getOutBindingRule()); } 
	 EOF 
;

// Rule OutBinding
ruleOutBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutBindingAccess().getGroup()); }
		(rule__OutBinding__Group__0)
		{ after(grammarAccess.getOutBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentBinding
entryRuleComponentBinding
:
{ before(grammarAccess.getComponentBindingRule()); }
	 ruleComponentBinding
{ after(grammarAccess.getComponentBindingRule()); } 
	 EOF 
;

// Rule ComponentBinding
ruleComponentBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentBindingAccess().getGroup()); }
		(rule__ComponentBinding__Group__0)
		{ after(grammarAccess.getComponentBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailureLabel
entryRuleFailureLabel
:
{ before(grammarAccess.getFailureLabelRule()); }
	 ruleFailureLabel
{ after(grammarAccess.getFailureLabelRule()); } 
	 EOF 
;

// Rule FailureLabel
ruleFailureLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailureLabelAccess().getGroup()); }
		(rule__FailureLabel__Group__0)
		{ after(grammarAccess.getFailureLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenarioGroup
entryRuleScenarioGroup
:
{ before(grammarAccess.getScenarioGroupRule()); }
	 ruleScenarioGroup
{ after(grammarAccess.getScenarioGroupRule()); } 
	 EOF 
;

// Rule ScenarioGroup
ruleScenarioGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioGroupAccess().getGroup()); }
		(rule__ScenarioGroup__Group__0)
		{ after(grammarAccess.getScenarioGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenarioDef
entryRuleScenarioDef
:
{ before(grammarAccess.getScenarioDefRule()); }
	 ruleScenarioDef
{ after(grammarAccess.getScenarioDefRule()); } 
	 EOF 
;

// Rule ScenarioDef
ruleScenarioDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioDefAccess().getGroup()); }
		(rule__ScenarioDef__Group__0)
		{ after(grammarAccess.getScenarioDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialization
entryRuleInitialization
:
{ before(grammarAccess.getInitializationRule()); }
	 ruleInitialization
{ after(grammarAccess.getInitializationRule()); } 
	 EOF 
;

// Rule Initialization
ruleInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializationAccess().getAlternatives()); }
		(rule__Initialization__Alternatives)
		{ after(grammarAccess.getInitializationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationType
entryRuleEnumerationType
:
{ before(grammarAccess.getEnumerationTypeRule()); }
	 ruleEnumerationType
{ after(grammarAccess.getEnumerationTypeRule()); } 
	 EOF 
;

// Rule EnumerationType
ruleEnumerationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getGroup()); }
		(rule__EnumerationType__Group__0)
		{ after(grammarAccess.getEnumerationTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceToScenarioDef
entryRuleReferenceToScenarioDef
:
{ before(grammarAccess.getReferenceToScenarioDefRule()); }
	 ruleReferenceToScenarioDef
{ after(grammarAccess.getReferenceToScenarioDefRule()); } 
	 EOF 
;

// Rule ReferenceToScenarioDef
ruleReferenceToScenarioDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceToScenarioDefAccess().getGroup()); }
		(rule__ReferenceToScenarioDef__Group__0)
		{ after(grammarAccess.getReferenceToScenarioDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceToVariable
entryRuleReferenceToVariable
:
{ before(grammarAccess.getReferenceToVariableRule()); }
	 ruleReferenceToVariable
{ after(grammarAccess.getReferenceToVariableRule()); } 
	 EOF 
;

// Rule ReferenceToVariable
ruleReferenceToVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceToVariableAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getReferenceToVariableAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceToEnumVariable
entryRuleReferenceToEnumVariable
:
{ before(grammarAccess.getReferenceToEnumVariableRule()); }
	 ruleReferenceToEnumVariable
{ after(grammarAccess.getReferenceToEnumVariableRule()); } 
	 EOF 
;

// Rule ReferenceToEnumVariable
ruleReferenceToEnumVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceToEnumVariableAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getReferenceToEnumVariableAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceToEnumerationType
entryRuleReferenceToEnumerationType
:
{ before(grammarAccess.getReferenceToEnumerationTypeRule()); }
	 ruleReferenceToEnumerationType
{ after(grammarAccess.getReferenceToEnumerationTypeRule()); } 
	 EOF 
;

// Rule ReferenceToEnumerationType
ruleReferenceToEnumerationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceToEnumerationTypeAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getReferenceToEnumerationTypeAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedReferenceToStartPoint
entryRuleQualifiedReferenceToStartPoint
:
{ before(grammarAccess.getQualifiedReferenceToStartPointRule()); }
	 ruleQualifiedReferenceToStartPoint
{ after(grammarAccess.getQualifiedReferenceToStartPointRule()); } 
	 EOF 
;

// Rule QualifiedReferenceToStartPoint
ruleQualifiedReferenceToStartPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedReferenceToStartPointAccess().getQualifiedNameParserRuleCall()); }
		ruleQualifiedName
		{ after(grammarAccess.getQualifiedReferenceToStartPointAccess().getQualifiedNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedReferenceToEndPoint
entryRuleQualifiedReferenceToEndPoint
:
{ before(grammarAccess.getQualifiedReferenceToEndPointRule()); }
	 ruleQualifiedReferenceToEndPoint
{ after(grammarAccess.getQualifiedReferenceToEndPointRule()); } 
	 EOF 
;

// Rule QualifiedReferenceToEndPoint
ruleQualifiedReferenceToEndPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedReferenceToEndPointAccess().getQualifiedNameParserRuleCall()); }
		ruleQualifiedName
		{ after(grammarAccess.getQualifiedReferenceToEndPointAccess().getQualifiedNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral
:
{ before(grammarAccess.getEnumLiteralRule()); }
	 ruleEnumLiteral
{ after(grammarAccess.getEnumLiteralRule()); } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getEnumLiteralAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePositiveInteger
entryRulePositiveInteger
:
{ before(grammarAccess.getPositiveIntegerRule()); }
	 rulePositiveInteger
{ after(grammarAccess.getPositiveIntegerRule()); } 
	 EOF 
;

// Rule PositiveInteger
rulePositiveInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositiveIntegerAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getPositiveIntegerAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTextAccess().getContentAssignment()); }
			(rule__Text__ContentAssignment)
			{ after(grammarAccess.getTextAccess().getContentAssignment()); }
		)
		(
			{ before(grammarAccess.getTextAccess().getContentAssignment()); }
			(rule__Text__ContentAssignment)*
			{ after(grammarAccess.getTextAccess().getContentAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextContent
entryRuleTextContent
:
{ before(grammarAccess.getTextContentRule()); }
	 ruleTextContent
{ after(grammarAccess.getTextContentRule()); } 
	 EOF 
;

// Rule TextContent
ruleTextContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextContentAccess().getAlternatives()); }
		(rule__TextContent__Alternatives)
		{ after(grammarAccess.getTextContentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule QualitativeLabel
ruleQualitativeLabel
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getAlternatives()); }
		(rule__QualitativeLabel__Alternatives)
		{ after(grammarAccess.getQualitativeLabelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule IntentionalElementType
ruleIntentionalElementType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getAlternatives()); }
		(rule__IntentionalElementType__Alternatives)
		{ after(grammarAccess.getIntentionalElementTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ContributionType
ruleContributionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionTypeAccess().getAlternatives()); }
		(rule__ContributionType__Alternatives)
		{ after(grammarAccess.getContributionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ImportanceType
ruleImportanceType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportanceTypeAccess().getAlternatives()); }
		(rule__ImportanceType__Alternatives)
		{ after(grammarAccess.getImportanceTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DecompositionType
ruleDecompositionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionTypeAccess().getAlternatives()); }
		(rule__DecompositionType__Alternatives)
		{ after(grammarAccess.getDecompositionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WAITKIND
ruleWAITKIND
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWAITKINDAccess().getAlternatives()); }
		(rule__WAITKIND__Alternatives)
		{ after(grammarAccess.getWAITKINDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COMPONENTKIND
ruleCOMPONENTKIND
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getAlternatives()); }
		(rule__COMPONENTKIND__Alternatives)
		{ after(grammarAccess.getCOMPONENTKINDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__LongnameAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongNameAccess().getLongnameIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLongNameAccess().getLongnameIDTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLongNameAccess().getLongnameSTRINGTerminalRuleCall_1_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getLongNameAccess().getLongnameSTRINGTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getImportanceAssignment_4_1_0()); }
		(rule__Actor__ImportanceAssignment_4_1_0)
		{ after(grammarAccess.getActorAccess().getImportanceAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getActorAccess().getImportanceQuantitativeAssignment_4_1_1()); }
		(rule__Actor__ImportanceQuantitativeAssignment_4_1_1)
		{ after(grammarAccess.getActorAccess().getImportanceQuantitativeAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getImportanceAssignment_4_1_0()); }
		(rule__IntentionalElement__ImportanceAssignment_4_1_0)
		{ after(grammarAccess.getIntentionalElementAccess().getImportanceAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntentionalElementAccess().getImportanceQuantitativeAssignment_4_1_1()); }
		(rule__IntentionalElement__ImportanceQuantitativeAssignment_4_1_1)
		{ after(grammarAccess.getIntentionalElementAccess().getImportanceQuantitativeAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementLink__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementLinkAccess().getContributionParserRuleCall_0()); }
		ruleContribution
		{ after(grammarAccess.getElementLinkAccess().getContributionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementLinkAccess().getDecompositionParserRuleCall_1()); }
		ruleDecomposition
		{ after(grammarAccess.getElementLinkAccess().getDecompositionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementLinkAccess().getDependencyParserRuleCall_2()); }
		ruleDependency
		{ after(grammarAccess.getElementLinkAccess().getDependencyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getContributionAssignment_5_0()); }
		(rule__Contribution__ContributionAssignment_5_0)
		{ after(grammarAccess.getContributionAccess().getContributionAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getContributionAccess().getQuantitativeContributionAssignment_5_1()); }
		(rule__Contribution__QuantitativeContributionAssignment_5_1)
		{ after(grammarAccess.getContributionAccess().getQuantitativeContributionAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getGroup_2_0()); }
		(rule__Evaluation__Group_2_0__0)
		{ after(grammarAccess.getEvaluationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationAccess().getGroup_2_1()); }
		(rule__Evaluation__Group_2_1__0)
		{ after(grammarAccess.getEvaluationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Alternatives_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getQualitativeEvaluationAssignment_2_0_1_0()); }
		(rule__Evaluation__QualitativeEvaluationAssignment_2_0_1_0)
		{ after(grammarAccess.getEvaluationAccess().getQualitativeEvaluationAssignment_2_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationAccess().getEvaluationAssignment_2_0_1_1()); }
		(rule__Evaluation__EvaluationAssignment_2_0_1_1)
		{ after(grammarAccess.getEvaluationAccess().getEvaluationAssignment_2_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorEvaluation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorEvaluationAccess().getRealWorldLabelAssignment_1_0()); }
		(rule__IndicatorEvaluation__RealWorldLabelAssignment_1_0)
		{ after(grammarAccess.getIndicatorEvaluationAccess().getRealWorldLabelAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndicatorEvaluationAccess().getRealWorldValueAssignment_1_1()); }
		(rule__IndicatorEvaluation__RealWorldValueAssignment_1_1)
		{ after(grammarAccess.getIndicatorEvaluationAccess().getRealWorldValueAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorConversion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorConversionAccess().getLinearConversionParserRuleCall_0()); }
		ruleLinearConversion
		{ after(grammarAccess.getIndicatorConversionAccess().getLinearConversionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndicatorConversionAccess().getQualToQMappingsParserRuleCall_1()); }
		ruleQualToQMappings
		{ after(grammarAccess.getIndicatorConversionAccess().getQualToQMappingsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingAccess().getQualitativeEvaluationAssignment_4_0()); }
		(rule__QualToQMapping__QualitativeEvaluationAssignment_4_0)
		{ after(grammarAccess.getQualToQMappingAccess().getQualitativeEvaluationAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualToQMappingAccess().getEvaluationAssignment_4_1()); }
		(rule__QualToQMapping__EvaluationAssignment_4_1)
		{ after(grammarAccess.getQualToQMappingAccess().getEvaluationAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionChangeAccess().getNewContributionAssignment_2_0()); }
		(rule__ContributionChange__NewContributionAssignment_2_0)
		{ after(grammarAccess.getContributionChangeAccess().getNewContributionAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getContributionChangeAccess().getNewQuantitativeContributionAssignment_2_1()); }
		(rule__ContributionChange__NewQuantitativeContributionAssignment_2_1)
		{ after(grammarAccess.getContributionChangeAccess().getNewQuantitativeContributionAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantitativeValue__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantitativeValueAccess().getHyphenMinusKeyword_0_0()); }
		'-'
		{ after(grammarAccess.getQuantitativeValueAccess().getHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantitativeValueAccess().getPlusSignKeyword_0_1()); }
		'+'
		{ after(grammarAccess.getQuantitativeValueAccess().getPlusSignKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getGroup_0()); }
		(rule__StartPoint__Group_0__0)
		{ after(grammarAccess.getStartPointAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStartPointAccess().getGroup_1()); }
		(rule__StartPoint__Group_1__0)
		{ after(grammarAccess.getStartPointAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailureKindAccess().getAbortKeyword_0()); }
		'abort'
		{ after(grammarAccess.getFailureKindAccess().getAbortKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFailureKindAccess().getFailureKeyword_1()); }
		'failure'
		{ after(grammarAccess.getFailureKindAccess().getFailureKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getAndJoinParserRuleCall_0()); }
		ruleAndJoin
		{ after(grammarAccess.getPathBodyNodeAccess().getAndJoinParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getRespRefParserRuleCall_1()); }
		ruleRespRef
		{ after(grammarAccess.getPathBodyNodeAccess().getRespRefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getOrJoinParserRuleCall_2()); }
		ruleOrJoin
		{ after(grammarAccess.getPathBodyNodeAccess().getOrJoinParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getWaitingPlaceParserRuleCall_3()); }
		ruleWaitingPlace
		{ after(grammarAccess.getPathBodyNodeAccess().getWaitingPlaceParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getFailurePointParserRuleCall_4()); }
		ruleFailurePoint
		{ after(grammarAccess.getPathBodyNodeAccess().getFailurePointParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getTimerParserRuleCall_5()); }
		ruleTimer
		{ after(grammarAccess.getPathBodyNodeAccess().getTimerParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPathBodyNodeAccess().getConnectParserRuleCall_6()); }
		ruleConnect
		{ after(grammarAccess.getPathBodyNodeAccess().getConnectParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularEnd__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularEndAccess().getEndpointWithConnectParserRuleCall_0()); }
		ruleEndpointWithConnect
		{ after(grammarAccess.getRegularEndAccess().getEndpointWithConnectParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegularEndAccess().getAndForkParserRuleCall_1()); }
		ruleAndFork
		{ after(grammarAccess.getRegularEndAccess().getAndForkParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegularEndAccess().getOrForkParserRuleCall_2()); }
		ruleOrFork
		{ after(grammarAccess.getRegularEndAccess().getOrForkParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRegularEndAccess().getStubParserRuleCall_3()); }
		ruleStub
		{ after(grammarAccess.getRegularEndAccess().getStubParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndJoinAccess().getSynchKeyword_0_0()); }
		'synch'
		{ after(grammarAccess.getAndJoinAccess().getSynchKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndJoinAccess().getSyncKeyword_0_1()); }
		'sync'
		{ after(grammarAccess.getAndJoinAccess().getSyncKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAndJoinAccess().getVerticalLineKeyword_0_2()); }
		'|'
		{ after(grammarAccess.getAndJoinAccess().getVerticalLineKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getGroup_2_0()); }
		(rule__FailurePoint__Group_2_0__0)
		{ after(grammarAccess.getFailurePointAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFailurePointAccess().getGroup_2_1()); }
		(rule__FailurePoint__Group_2_1__0)
		{ after(grammarAccess.getFailurePointAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkAccess().getGroup_1_0()); }
		(rule__OrFork__Group_1_0__0)
		{ after(grammarAccess.getOrForkAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrForkAccess().getConditionAssignment_1_1()); }
		(rule__OrFork__ConditionAssignment_1_1)
		{ after(grammarAccess.getOrForkAccess().getConditionAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getGroup_3_0()); }
		(rule__Stub__Group_3_0__0)
		{ after(grammarAccess.getStubAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStubAccess().getStubRefAssignment_3_1()); }
		(rule__Stub__StubRefAssignment_3_1)
		{ after(grammarAccess.getStubAccess().getStubRefAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubTypeAccess().getSynchronizingKeyword_0()); }
		'synchronizing'
		{ after(grammarAccess.getStubTypeAccess().getSynchronizingKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStubTypeAccess().getBlockingKeyword_1()); }
		'blocking'
		{ after(grammarAccess.getStubTypeAccess().getBlockingKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundOption__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundOptionAccess().getBoundElementParserRuleCall_0()); }
		ruleBoundElement
		{ after(grammarAccess.getBoundOptionAccess().getBoundElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoundOptionAccess().getLongBoundElementParserRuleCall_1()); }
		ruleLongBoundElement
		{ after(grammarAccess.getBoundOptionAccess().getLongBoundElementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getInBindingParserRuleCall_0()); }
		ruleInBinding
		{ after(grammarAccess.getBindingAccess().getInBindingParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBindingAccess().getOutBindingParserRuleCall_1()); }
		ruleOutBinding
		{ after(grammarAccess.getBindingAccess().getOutBindingParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBindingAccess().getComponentBindingParserRuleCall_2()); }
		ruleComponentBinding
		{ after(grammarAccess.getBindingAccess().getComponentBindingParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getGroup_0()); }
		(rule__Initialization__Group_0__0)
		{ after(grammarAccess.getInitializationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitializationAccess().getGroup_1()); }
		(rule__Initialization__Group_1__0)
		{ after(grammarAccess.getInitializationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getBoolKeyword_0_0()); }
		'bool'
		{ after(grammarAccess.getVariableAccess().getBoolKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getIntKeyword_0_1()); }
		'int'
		{ after(grammarAccess.getVariableAccess().getIntKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getEnumerationTypeAssignment_0_2()); }
		(rule__Variable__EnumerationTypeAssignment_0_2)
		{ after(grammarAccess.getVariableAccess().getEnumerationTypeAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextContentAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTextContentAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getCommercialAtKeyword_1()); }
		'@'
		{ after(grammarAccess.getTextContentAccess().getCommercialAtKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getNumberSignKeyword_2()); }
		'#'
		{ after(grammarAccess.getTextContentAccess().getNumberSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getExclamationMarkKeyword_3()); }
		'!'
		{ after(grammarAccess.getTextContentAccess().getExclamationMarkKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getPercentSignKeyword_4()); }
		'%'
		{ after(grammarAccess.getTextContentAccess().getPercentSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getAmpersandKeyword_5()); }
		'&'
		{ after(grammarAccess.getTextContentAccess().getAmpersandKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getAsteriskKeyword_6()); }
		'*'
		{ after(grammarAccess.getTextContentAccess().getAsteriskKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getTextContentAccess().getINTTerminalRuleCall_7()); }
		RULE_INT
		{ after(grammarAccess.getTextContentAccess().getINTTerminalRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualitativeLabel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getDeniedEnumLiteralDeclaration_0()); }
		('denied')
		{ after(grammarAccess.getQualitativeLabelAccess().getDeniedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getWeaklyDeniedEnumLiteralDeclaration_1()); }
		('weaklyDenied')
		{ after(grammarAccess.getQualitativeLabelAccess().getWeaklyDeniedEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getWeaklySatisfiedEnumLiteralDeclaration_2()); }
		('weaklySatisfied')
		{ after(grammarAccess.getQualitativeLabelAccess().getWeaklySatisfiedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getSatisfiedEnumLiteralDeclaration_3()); }
		('satisfied')
		{ after(grammarAccess.getQualitativeLabelAccess().getSatisfiedEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getConflictEnumLiteralDeclaration_4()); }
		('conflict')
		{ after(grammarAccess.getQualitativeLabelAccess().getConflictEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getUnknownEnumLiteralDeclaration_5()); }
		('unknown')
		{ after(grammarAccess.getQualitativeLabelAccess().getUnknownEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getQualitativeLabelAccess().getNoneEnumLiteralDeclaration_6()); }
		('none')
		{ after(grammarAccess.getQualitativeLabelAccess().getNoneEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElementType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getSoftgoalEnumLiteralDeclaration_0()); }
		('softgoal')
		{ after(grammarAccess.getIntentionalElementTypeAccess().getSoftgoalEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getGoalEnumLiteralDeclaration_1()); }
		('goal')
		{ after(grammarAccess.getIntentionalElementTypeAccess().getGoalEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getTaskEnumLiteralDeclaration_2()); }
		('task')
		{ after(grammarAccess.getIntentionalElementTypeAccess().getTaskEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getResourceEnumLiteralDeclaration_3()); }
		('resource')
		{ after(grammarAccess.getIntentionalElementTypeAccess().getResourceEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getBeliefEnumLiteralDeclaration_4()); }
		('belief')
		{ after(grammarAccess.getIntentionalElementTypeAccess().getBeliefEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getIntentionalElementTypeAccess().getIndicatorEnumLiteralDeclaration_5()); }
		('indicator')
		{ after(grammarAccess.getIntentionalElementTypeAccess().getIndicatorEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionTypeAccess().getMakeEnumLiteralDeclaration_0()); }
		('make')
		{ after(grammarAccess.getContributionTypeAccess().getMakeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getContributionTypeAccess().getHelpEnumLiteralDeclaration_1()); }
		('help')
		{ after(grammarAccess.getContributionTypeAccess().getHelpEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getContributionTypeAccess().getSomePositiveEnumLiteralDeclaration_2()); }
		('somePositive')
		{ after(grammarAccess.getContributionTypeAccess().getSomePositiveEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getContributionTypeAccess().getUnknownEnumLiteralDeclaration_3()); }
		('unknown')
		{ after(grammarAccess.getContributionTypeAccess().getUnknownEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getContributionTypeAccess().getSomeNegativeEnumLiteralDeclaration_4()); }
		('someNegative')
		{ after(grammarAccess.getContributionTypeAccess().getSomeNegativeEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getContributionTypeAccess().getHurtEnumLiteralDeclaration_5()); }
		('hurt')
		{ after(grammarAccess.getContributionTypeAccess().getHurtEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getContributionTypeAccess().getBreakEnumLiteralDeclaration_6()); }
		('break')
		{ after(grammarAccess.getContributionTypeAccess().getBreakEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportanceType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportanceTypeAccess().getHighEnumLiteralDeclaration_0()); }
		('high')
		{ after(grammarAccess.getImportanceTypeAccess().getHighEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportanceTypeAccess().getMediumEnumLiteralDeclaration_1()); }
		('medium')
		{ after(grammarAccess.getImportanceTypeAccess().getMediumEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getImportanceTypeAccess().getLowEnumLiteralDeclaration_2()); }
		('low')
		{ after(grammarAccess.getImportanceTypeAccess().getLowEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getImportanceTypeAccess().getNoneEnumLiteralDeclaration_3()); }
		('none')
		{ after(grammarAccess.getImportanceTypeAccess().getNoneEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionTypeAccess().getAndEnumLiteralDeclaration_0()); }
		('and')
		{ after(grammarAccess.getDecompositionTypeAccess().getAndEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDecompositionTypeAccess().getOrEnumLiteralDeclaration_1()); }
		('or')
		{ after(grammarAccess.getDecompositionTypeAccess().getOrEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDecompositionTypeAccess().getXorEnumLiteralDeclaration_2()); }
		('xor')
		{ after(grammarAccess.getDecompositionTypeAccess().getXorEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WAITKIND__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWAITKINDAccess().getPersistentEnumLiteralDeclaration_0()); }
		('persistent')
		{ after(grammarAccess.getWAITKINDAccess().getPersistentEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWAITKINDAccess().getTransientEnumLiteralDeclaration_1()); }
		('transient')
		{ after(grammarAccess.getWAITKINDAccess().getTransientEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPONENTKIND__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getTeamEnumLiteralDeclaration_0()); }
		('team')
		{ after(grammarAccess.getCOMPONENTKINDAccess().getTeamEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getObjectEnumLiteralDeclaration_1()); }
		('object')
		{ after(grammarAccess.getCOMPONENTKINDAccess().getObjectEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getProcessEnumLiteralDeclaration_2()); }
		('process')
		{ after(grammarAccess.getCOMPONENTKINDAccess().getProcessEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getAgentEnumLiteralDeclaration_3()); }
		('agent')
		{ after(grammarAccess.getCOMPONENTKINDAccess().getAgentEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getActorEnumLiteralDeclaration_4()); }
		('actor')
		{ after(grammarAccess.getCOMPONENTKINDAccess().getActorEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPONENTKINDAccess().getParentEnumLiteralDeclaration_5()); }
		('parent')
		{ after(grammarAccess.getCOMPONENTKINDAccess().getParentEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__Group_0__0__Impl
	rule__URNspec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNspecAccess().getUrnModelKeyword_0_0()); }
	'urnModel'
	{ after(grammarAccess.getURNspecAccess().getUrnModelKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__Group_0__1__Impl
	rule__URNspec__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNspecAccess().getNameAssignment_0_1()); }
	(rule__URNspec__NameAssignment_0_1)
	{ after(grammarAccess.getURNspecAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNspecAccess().getInfoAssignment_0_2()); }
	(rule__URNspec__InfoAssignment_0_2)?
	{ after(grammarAccess.getURNspecAccess().getInfoAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteURNspec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__0__Impl
	rule__ConcreteURNspec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getConcreteURNspecAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__1__Impl
	rule__ConcreteURNspec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getDescriptionKeyword_1()); }
	'description'
	{ after(grammarAccess.getConcreteURNspecAccess().getDescriptionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__2__Impl
	rule__ConcreteURNspec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getDescriptionAssignment_2()); }
	(rule__ConcreteURNspec__DescriptionAssignment_2)
	{ after(grammarAccess.getConcreteURNspecAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__3__Impl
	rule__ConcreteURNspec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getAuthorKeyword_3()); }
	'author'
	{ after(grammarAccess.getConcreteURNspecAccess().getAuthorKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__4__Impl
	rule__ConcreteURNspec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getAuthorAssignment_4()); }
	(rule__ConcreteURNspec__AuthorAssignment_4)
	{ after(grammarAccess.getConcreteURNspecAccess().getAuthorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__5__Impl
	rule__ConcreteURNspec__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getCreatedKeyword_5()); }
	'created'
	{ after(grammarAccess.getConcreteURNspecAccess().getCreatedKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__6__Impl
	rule__ConcreteURNspec__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getCreatedAssignment_6()); }
	(rule__ConcreteURNspec__CreatedAssignment_6)
	{ after(grammarAccess.getConcreteURNspecAccess().getCreatedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__7__Impl
	rule__ConcreteURNspec__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getModifiedKeyword_7()); }
	'modified'
	{ after(grammarAccess.getConcreteURNspecAccess().getModifiedKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__8__Impl
	rule__ConcreteURNspec__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getModifiedAssignment_8()); }
	(rule__ConcreteURNspec__ModifiedAssignment_8)
	{ after(grammarAccess.getConcreteURNspecAccess().getModifiedAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__9__Impl
	rule__ConcreteURNspec__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getVersionKeyword_9()); }
	'version'
	{ after(grammarAccess.getConcreteURNspecAccess().getVersionKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__10__Impl
	rule__ConcreteURNspec__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getSpecVersionAssignment_10()); }
	(rule__ConcreteURNspec__SpecVersionAssignment_10)
	{ after(grammarAccess.getConcreteURNspecAccess().getSpecVersionAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__11__Impl
	rule__ConcreteURNspec__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getUrnVersionKeyword_11()); }
	'urnVersion'
	{ after(grammarAccess.getConcreteURNspecAccess().getUrnVersionKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__12__Impl
	rule__ConcreteURNspec__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getUrnVersionAssignment_12()); }
	(rule__ConcreteURNspec__UrnVersionAssignment_12)
	{ after(grammarAccess.getConcreteURNspecAccess().getUrnVersionAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteURNspec__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteURNspecAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getConcreteURNspecAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__0__Impl
	rule__Concern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getConcernKeyword_0()); }
	'concern'
	{ after(grammarAccess.getConcernAccess().getConcernKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__1__Impl
	rule__Concern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getNameAssignment_1()); }
	(rule__Concern__NameAssignment_1)
	{ after(grammarAccess.getConcernAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__2__Impl
	rule__Concern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getLongNameAssignment_2()); }
	(rule__Concern__LongNameAssignment_2)
	{ after(grammarAccess.getConcernAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__3__Impl
	rule__Concern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getConcernAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__4__Impl
	rule__Concern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getConditionAssignment_4()); }
	(rule__Concern__ConditionAssignment_4)?
	{ after(grammarAccess.getConcernAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__5__Impl
	rule__Concern__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getElementAssignment_5()); }
	(rule__Concern__ElementAssignment_5)
	{ after(grammarAccess.getConcernAccess().getElementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getGroup_6()); }
	(rule__Concern__Group_6__0)*
	{ after(grammarAccess.getConcernAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concern__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group_6__0__Impl
	rule__Concern__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getConcernAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concern__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcernAccess().getElementsAssignment_6_1()); }
	(rule__Concern__ElementsAssignment_6_1)
	{ after(grammarAccess.getConcernAccess().getElementsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LongName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongName__Group__0__Impl
	rule__LongName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongNameAccess().getLongNameAction_0()); }
	()
	{ after(grammarAccess.getLongNameAccess().getLongNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongNameAccess().getGroup_1()); }
	(rule__LongName__Group_1__0)?
	{ after(grammarAccess.getLongNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LongName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongName__Group_1__0__Impl
	rule__LongName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongNameAccess().getNumberSignKeyword_1_0()); }
	'#'
	{ after(grammarAccess.getLongNameAccess().getNumberSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongNameAccess().getLongnameAssignment_1_1()); }
	(rule__LongName__LongnameAssignment_1_1)
	{ after(grammarAccess.getLongNameAccess().getLongnameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpressionAssignment_1()); }
	(rule__Condition__ExpressionAssignment_1)
	{ after(grammarAccess.getConditionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getConditionAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_3()); }
	(rule__Condition__Group_3__0)?
	{ after(grammarAccess.getConditionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_3__0__Impl
	rule__Condition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_3__1__Impl
	rule__Condition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getInfoAssignment_3_1()); }
	(rule__Condition__InfoAssignment_3_1)?
	{ after(grammarAccess.getConditionAccess().getInfoAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteCondition__Group__0__Impl
	rule__ConcreteCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteConditionAccess().getLabelAssignment_0()); }
	(rule__ConcreteCondition__LabelAssignment_0)
	{ after(grammarAccess.getConcreteConditionAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteConditionAccess().getDescriptionAssignment_1()); }
	(rule__ConcreteCondition__DescriptionAssignment_1)
	{ after(grammarAccess.getConcreteConditionAccess().getDescriptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__URNlink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group__0__Impl
	rule__URNlink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getLinkKeyword_0()); }
	'link'
	{ after(grammarAccess.getURNlinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group__1__Impl
	rule__URNlink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getGroup_1()); }
	(rule__URNlink__Group_1__0)?
	{ after(grammarAccess.getURNlinkAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group__2__Impl
	rule__URNlink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getGroup_2()); }
	(rule__URNlink__Group_2__0)?
	{ after(grammarAccess.getURNlinkAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group__3__Impl
	rule__URNlink__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getFromElemAssignment_3()); }
	(rule__URNlink__FromElemAssignment_3)
	{ after(grammarAccess.getURNlinkAccess().getFromElemAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group__4__Impl
	rule__URNlink__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_4()); }
	'-->'
	{ after(grammarAccess.getURNlinkAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getToElemAssignment_5()); }
	(rule__URNlink__ToElemAssignment_5)
	{ after(grammarAccess.getURNlinkAccess().getToElemAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__URNlink__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group_1__0__Impl
	rule__URNlink__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getNameAssignment_1_0()); }
	(rule__URNlink__NameAssignment_1_0)
	{ after(grammarAccess.getURNlinkAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group_1__1__Impl
	rule__URNlink__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getLongNameAssignment_1_1()); }
	(rule__URNlink__LongNameAssignment_1_1)
	{ after(grammarAccess.getURNlinkAccess().getLongNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getURNlinkAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__URNlink__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group_2__0__Impl
	rule__URNlink__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getTypeKeyword_2_0()); }
	'type'
	{ after(grammarAccess.getURNlinkAccess().getTypeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNlink__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURNlinkAccess().getTypeAssignment_2_1()); }
	(rule__URNlink__TypeAssignment_2_1)
	{ after(grammarAccess.getURNlinkAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Metadata__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group__0__Impl
	rule__Metadata__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getMetadataKeyword_0()); }
	'metadata'
	{ after(grammarAccess.getMetadataAccess().getMetadataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group__1__Impl
	rule__Metadata__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getGroup_1()); }
	(rule__Metadata__Group_1__0)?
	{ after(grammarAccess.getMetadataAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group__2__Impl
	rule__Metadata__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getNameAssignment_2()); }
	(rule__Metadata__NameAssignment_2)
	{ after(grammarAccess.getMetadataAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group__3__Impl
	rule__Metadata__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getMetadataAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getValueAssignment_4()); }
	(rule__Metadata__ValueAssignment_4)
	{ after(grammarAccess.getMetadataAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Metadata__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group_1__0__Impl
	rule__Metadata__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getElemAssignment_1_0()); }
	(rule__Metadata__ElemAssignment_1_0)
	{ after(grammarAccess.getMetadataAccess().getElemAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metadata__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetadataAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getMetadataAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }
	'actor'
	{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
	(rule__Actor__NameAssignment_1)
	{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getLongNameAssignment_2()); }
	(rule__Actor__LongNameAssignment_2)
	{ after(grammarAccess.getActorAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__3__Impl
	rule__Actor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__4__Impl
	rule__Actor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getGroup_4()); }
	(rule__Actor__Group_4__0)?
	{ after(grammarAccess.getActorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__5__Impl
	rule__Actor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getElemsAssignment_5()); }
	(rule__Actor__ElemsAssignment_5)*
	{ after(grammarAccess.getActorAccess().getElemsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_4__0__Impl
	rule__Actor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getImportanceKeyword_4_0()); }
	'importance'
	{ after(grammarAccess.getActorAccess().getImportanceKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAlternatives_4_1()); }
	(rule__Actor__Alternatives_4_1)
	{ after(grammarAccess.getActorAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntentionalElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__0__Impl
	rule__IntentionalElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getTypeAssignment_0()); }
	(rule__IntentionalElement__TypeAssignment_0)
	{ after(grammarAccess.getIntentionalElementAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__1__Impl
	rule__IntentionalElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getNameAssignment_1()); }
	(rule__IntentionalElement__NameAssignment_1)
	{ after(grammarAccess.getIntentionalElementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__2__Impl
	rule__IntentionalElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getLongNameAssignment_2()); }
	(rule__IntentionalElement__LongNameAssignment_2)
	{ after(grammarAccess.getIntentionalElementAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__3__Impl
	rule__IntentionalElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getIntentionalElementAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__4__Impl
	rule__IntentionalElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getGroup_4()); }
	(rule__IntentionalElement__Group_4__0)?
	{ after(grammarAccess.getIntentionalElementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__5__Impl
	rule__IntentionalElement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getGroup_5()); }
	(rule__IntentionalElement__Group_5__0)?
	{ after(grammarAccess.getIntentionalElementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__6__Impl
	rule__IntentionalElement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getLinksSrcAssignment_6()); }
	(rule__IntentionalElement__LinksSrcAssignment_6)*
	{ after(grammarAccess.getIntentionalElementAccess().getLinksSrcAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIntentionalElementAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntentionalElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group_4__0__Impl
	rule__IntentionalElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getImportanceKeyword_4_0()); }
	'importance'
	{ after(grammarAccess.getIntentionalElementAccess().getImportanceKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getAlternatives_4_1()); }
	(rule__IntentionalElement__Alternatives_4_1)
	{ after(grammarAccess.getIntentionalElementAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntentionalElement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group_5__0__Impl
	rule__IntentionalElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getUnitKeyword_5_0()); }
	'unit'
	{ after(grammarAccess.getIntentionalElementAccess().getUnitKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntentionalElement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntentionalElementAccess().getUnitAssignment_5_1()); }
	(rule__IntentionalElement__UnitAssignment_5_1)
	{ after(grammarAccess.getIntentionalElementAccess().getUnitAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contribution__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group__0__Impl
	rule__Contribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getGroup_0()); }
	(rule__Contribution__Group_0__0)?
	{ after(grammarAccess.getContributionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group__1__Impl
	rule__Contribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getContributesToKeyword_1()); }
	'contributesTo'
	{ after(grammarAccess.getContributionAccess().getContributesToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group__2__Impl
	rule__Contribution__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getDestAssignment_2()); }
	(rule__Contribution__DestAssignment_2)
	{ after(grammarAccess.getContributionAccess().getDestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group__3__Impl
	rule__Contribution__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getCorrelationAssignment_3()); }
	(rule__Contribution__CorrelationAssignment_3)?
	{ after(grammarAccess.getContributionAccess().getCorrelationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group__4__Impl
	rule__Contribution__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getWithKeyword_4()); }
	'with'
	{ after(grammarAccess.getContributionAccess().getWithKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getAlternatives_5()); }
	(rule__Contribution__Alternatives_5)
	{ after(grammarAccess.getContributionAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contribution__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group_0__0__Impl
	rule__Contribution__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getNameAssignment_0_0()); }
	(rule__Contribution__NameAssignment_0_0)
	{ after(grammarAccess.getContributionAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contribution__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionAccess().getLongNameAssignment_0_1()); }
	(rule__Contribution__LongNameAssignment_0_1)
	{ after(grammarAccess.getContributionAccess().getLongNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__0__Impl
	rule__Decomposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getGroup_0()); }
	(rule__Decomposition__Group_0__0)?
	{ after(grammarAccess.getDecompositionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__1__Impl
	rule__Decomposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getDecompositionTypeAssignment_1()); }
	(rule__Decomposition__DecompositionTypeAssignment_1)
	{ after(grammarAccess.getDecompositionAccess().getDecompositionTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__2__Impl
	rule__Decomposition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getDecomposesKeyword_2()); }
	'decomposes'
	{ after(grammarAccess.getDecompositionAccess().getDecomposesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getDestAssignment_3()); }
	(rule__Decomposition__DestAssignment_3)
	{ after(grammarAccess.getDecompositionAccess().getDestAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group_0__0__Impl
	rule__Decomposition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getNameAssignment_0_0()); }
	(rule__Decomposition__NameAssignment_0_0)
	{ after(grammarAccess.getDecompositionAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decomposition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionAccess().getLongNameAssignment_0_1()); }
	(rule__Decomposition__LongNameAssignment_0_1)
	{ after(grammarAccess.getDecompositionAccess().getLongNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getGroup_0()); }
	(rule__Dependency__Group_0__0)?
	{ after(grammarAccess.getDependencyAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
	rule__Dependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDependsOnKeyword_1()); }
	'dependsOn'
	{ after(grammarAccess.getDependencyAccess().getDependsOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDestAssignment_2()); }
	(rule__Dependency__DestAssignment_2)
	{ after(grammarAccess.getDependencyAccess().getDestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_0__0__Impl
	rule__Dependency__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getNameAssignment_0_0()); }
	(rule__Dependency__NameAssignment_0_0)
	{ after(grammarAccess.getDependencyAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getLongNameAssignment_0_1()); }
	(rule__Dependency__LongNameAssignment_0_1)
	{ after(grammarAccess.getDependencyAccess().getLongNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StrategiesGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group__0__Impl
	rule__StrategiesGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getStrategiesGroupKeyword_0()); }
	'strategiesGroup'
	{ after(grammarAccess.getStrategiesGroupAccess().getStrategiesGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group__1__Impl
	rule__StrategiesGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getNameAssignment_1()); }
	(rule__StrategiesGroup__NameAssignment_1)
	{ after(grammarAccess.getStrategiesGroupAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group__2__Impl
	rule__StrategiesGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getLongNameAssignment_2()); }
	(rule__StrategiesGroup__LongNameAssignment_2)
	{ after(grammarAccess.getStrategiesGroupAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group__3__Impl
	rule__StrategiesGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getStrategiesGroupAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group__4__Impl
	rule__StrategiesGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getEvalStrategyAssignment_4()); }
	(rule__StrategiesGroup__EvalStrategyAssignment_4)
	{ after(grammarAccess.getStrategiesGroupAccess().getEvalStrategyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getGroup_5()); }
	(rule__StrategiesGroup__Group_5__0)*
	{ after(grammarAccess.getStrategiesGroupAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StrategiesGroup__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group_5__0__Impl
	rule__StrategiesGroup__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getStrategiesGroupAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrategiesGroup__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategiesGroupAccess().getEvalStrategiesAssignment_5_1()); }
	(rule__StrategiesGroup__EvalStrategiesAssignment_5_1)
	{ after(grammarAccess.getStrategiesGroupAccess().getEvalStrategiesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvaluationStrategy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__0__Impl
	rule__EvaluationStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getStrategyKeyword_0()); }
	'strategy'
	{ after(grammarAccess.getEvaluationStrategyAccess().getStrategyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__1__Impl
	rule__EvaluationStrategy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getNameAssignment_1()); }
	(rule__EvaluationStrategy__NameAssignment_1)
	{ after(grammarAccess.getEvaluationStrategyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__2__Impl
	rule__EvaluationStrategy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getLongNameAssignment_2()); }
	(rule__EvaluationStrategy__LongNameAssignment_2)
	{ after(grammarAccess.getEvaluationStrategyAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__3__Impl
	rule__EvaluationStrategy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEvaluationStrategyAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__4__Impl
	rule__EvaluationStrategy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getInfoAssignment_4()); }
	(rule__EvaluationStrategy__InfoAssignment_4)?
	{ after(grammarAccess.getEvaluationStrategyAccess().getInfoAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__5__Impl
	rule__EvaluationStrategy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getEvaluationsAssignment_5()); }
	(rule__EvaluationStrategy__EvaluationsAssignment_5)*
	{ after(grammarAccess.getEvaluationStrategyAccess().getEvaluationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__6__Impl
	rule__EvaluationStrategy__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getGroup_6()); }
	(rule__EvaluationStrategy__Group_6__0)?
	{ after(grammarAccess.getEvaluationStrategyAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getEvaluationStrategyAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvaluationStrategy__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group_6__0__Impl
	rule__EvaluationStrategy__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getIncludesKeyword_6_0()); }
	'includes'
	{ after(grammarAccess.getEvaluationStrategyAccess().getIncludesKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group_6__1__Impl
	rule__EvaluationStrategy__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyAssignment_6_1()); }
	(rule__EvaluationStrategy__IncludedStrategyAssignment_6_1)
	{ after(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getGroup_6_2()); }
	(rule__EvaluationStrategy__Group_6_2__0)*
	{ after(grammarAccess.getEvaluationStrategyAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvaluationStrategy__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group_6_2__0__Impl
	rule__EvaluationStrategy__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getCommaKeyword_6_2_0()); }
	','
	{ after(grammarAccess.getEvaluationStrategyAccess().getCommaKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationStrategy__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesAssignment_6_2_1()); }
	(rule__EvaluationStrategy__IncludedStrategiesAssignment_6_2_1)
	{ after(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteStrategy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteStrategy__Group__0__Impl
	rule__ConcreteStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteStrategy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteStrategyAccess().getAuthorKeyword_0()); }
	'author'
	{ after(grammarAccess.getConcreteStrategyAccess().getAuthorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteStrategy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteStrategy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteStrategy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteStrategyAccess().getAuthorAssignment_1()); }
	(rule__ConcreteStrategy__AuthorAssignment_1)
	{ after(grammarAccess.getConcreteStrategyAccess().getAuthorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group__0__Impl
	rule__Evaluation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getIntElementAssignment_0()); }
	(rule__Evaluation__IntElementAssignment_0)
	{ after(grammarAccess.getEvaluationAccess().getIntElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group__1__Impl
	rule__Evaluation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getExceedsAssignment_1()); }
	(rule__Evaluation__ExceedsAssignment_1)?
	{ after(grammarAccess.getEvaluationAccess().getExceedsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getAlternatives_2()); }
	(rule__Evaluation__Alternatives_2)
	{ after(grammarAccess.getEvaluationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group_2_0__0__Impl
	rule__Evaluation__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getEvaluationKeyword_2_0_0()); }
	'evaluation'
	{ after(grammarAccess.getEvaluationAccess().getEvaluationKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getAlternatives_2_0_1()); }
	(rule__Evaluation__Alternatives_2_0_1)
	{ after(grammarAccess.getEvaluationAccess().getAlternatives_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Evaluation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group_2_1__0__Impl
	rule__Evaluation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getIndicatorEvalAssignment_2_1_0()); }
	(rule__Evaluation__IndicatorEvalAssignment_2_1_0)
	{ after(grammarAccess.getEvaluationAccess().getIndicatorEvalAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group_2_1__1__Impl
	rule__Evaluation__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getConvertedWithKeyword_2_1_1()); }
	'convertedWith'
	{ after(grammarAccess.getEvaluationAccess().getConvertedWithKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Evaluation__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationAccess().getConversionAssignment_2_1_2()); }
	(rule__Evaluation__ConversionAssignment_2_1_2)
	{ after(grammarAccess.getEvaluationAccess().getConversionAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndicatorEvaluation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndicatorEvaluation__Group__0__Impl
	rule__IndicatorEvaluation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorEvaluation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicatorEvaluationAccess().getRealKeyword_0()); }
	'real'
	{ after(grammarAccess.getIndicatorEvaluationAccess().getRealKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorEvaluation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndicatorEvaluation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorEvaluation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicatorEvaluationAccess().getAlternatives_1()); }
	(rule__IndicatorEvaluation__Alternatives_1)
	{ after(grammarAccess.getIndicatorEvaluationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinearConversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__0__Impl
	rule__LinearConversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getLinearConversionKeyword_0()); }
	'linearConversion'
	{ after(grammarAccess.getLinearConversionAccess().getLinearConversionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__1__Impl
	rule__LinearConversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getNameAssignment_1()); }
	(rule__LinearConversion__NameAssignment_1)
	{ after(grammarAccess.getLinearConversionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__2__Impl
	rule__LinearConversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getLongNameAssignment_2()); }
	(rule__LinearConversion__LongNameAssignment_2)
	{ after(grammarAccess.getLinearConversionAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__3__Impl
	rule__LinearConversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getLinearConversionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__4__Impl
	rule__LinearConversion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getUnitKeyword_4()); }
	'unit'
	{ after(grammarAccess.getLinearConversionAccess().getUnitKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__5__Impl
	rule__LinearConversion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getUnitAssignment_5()); }
	(rule__LinearConversion__UnitAssignment_5)
	{ after(grammarAccess.getLinearConversionAccess().getUnitAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__6__Impl
	rule__LinearConversion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getTargetKeyword_6()); }
	'target'
	{ after(grammarAccess.getLinearConversionAccess().getTargetKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__7__Impl
	rule__LinearConversion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getTargetValueAssignment_7()); }
	(rule__LinearConversion__TargetValueAssignment_7)
	{ after(grammarAccess.getLinearConversionAccess().getTargetValueAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__8__Impl
	rule__LinearConversion__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getThresholdKeyword_8()); }
	'threshold'
	{ after(grammarAccess.getLinearConversionAccess().getThresholdKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__9__Impl
	rule__LinearConversion__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getThresholdValueAssignment_9()); }
	(rule__LinearConversion__ThresholdValueAssignment_9)
	{ after(grammarAccess.getLinearConversionAccess().getThresholdValueAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__10__Impl
	rule__LinearConversion__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getWorstKeyword_10()); }
	'worst'
	{ after(grammarAccess.getLinearConversionAccess().getWorstKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__11__Impl
	rule__LinearConversion__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getWorstValueAssignment_11()); }
	(rule__LinearConversion__WorstValueAssignment_11)
	{ after(grammarAccess.getLinearConversionAccess().getWorstValueAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinearConversion__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinearConversionAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getLinearConversionAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualToQMappings__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__0__Impl
	rule__QualToQMappings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getMappingConversionKeyword_0()); }
	'mappingConversion'
	{ after(grammarAccess.getQualToQMappingsAccess().getMappingConversionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__1__Impl
	rule__QualToQMappings__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getNameAssignment_1()); }
	(rule__QualToQMappings__NameAssignment_1)
	{ after(grammarAccess.getQualToQMappingsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__2__Impl
	rule__QualToQMappings__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getLongNameAssignment_2()); }
	(rule__QualToQMappings__LongNameAssignment_2)
	{ after(grammarAccess.getQualToQMappingsAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__3__Impl
	rule__QualToQMappings__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getQualToQMappingsAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__4__Impl
	rule__QualToQMappings__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getUnitKeyword_4()); }
	'unit'
	{ after(grammarAccess.getQualToQMappingsAccess().getUnitKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__5__Impl
	rule__QualToQMappings__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getUnitAssignment_5()); }
	(rule__QualToQMappings__UnitAssignment_5)
	{ after(grammarAccess.getQualToQMappingsAccess().getUnitAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__6__Impl
	rule__QualToQMappings__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getMappingsAssignment_6()); }
		(rule__QualToQMappings__MappingsAssignment_6)
		{ after(grammarAccess.getQualToQMappingsAccess().getMappingsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getMappingsAssignment_6()); }
		(rule__QualToQMappings__MappingsAssignment_6)*
		{ after(grammarAccess.getQualToQMappingsAccess().getMappingsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMappings__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingsAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getQualToQMappingsAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualToQMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMapping__Group__0__Impl
	rule__QualToQMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingAccess().getExceedsAssignment_0()); }
	(rule__QualToQMapping__ExceedsAssignment_0)?
	{ after(grammarAccess.getQualToQMappingAccess().getExceedsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMapping__Group__1__Impl
	rule__QualToQMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingAccess().getRealKeyword_1()); }
	'real'
	{ after(grammarAccess.getQualToQMappingAccess().getRealKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMapping__Group__2__Impl
	rule__QualToQMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingAccess().getRealWorldLabelAssignment_2()); }
	(rule__QualToQMapping__RealWorldLabelAssignment_2)
	{ after(grammarAccess.getQualToQMappingAccess().getRealWorldLabelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMapping__Group__3__Impl
	rule__QualToQMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3()); }
	'-->'
	{ after(grammarAccess.getQualToQMappingAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualToQMapping__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualToQMappingAccess().getAlternatives_4()); }
	(rule__QualToQMapping__Alternatives_4)
	{ after(grammarAccess.getQualToQMappingAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContributionContextGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group__0__Impl
	rule__ContributionContextGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getContributionContextGroupKeyword_0()); }
	'contributionContextGroup'
	{ after(grammarAccess.getContributionContextGroupAccess().getContributionContextGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group__1__Impl
	rule__ContributionContextGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getNameAssignment_1()); }
	(rule__ContributionContextGroup__NameAssignment_1)
	{ after(grammarAccess.getContributionContextGroupAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group__2__Impl
	rule__ContributionContextGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getLongNameAssignment_2()); }
	(rule__ContributionContextGroup__LongNameAssignment_2)
	{ after(grammarAccess.getContributionContextGroupAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group__3__Impl
	rule__ContributionContextGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getContributionContextGroupAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group__4__Impl
	rule__ContributionContextGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getContribAssignment_4()); }
	(rule__ContributionContextGroup__ContribAssignment_4)
	{ after(grammarAccess.getContributionContextGroupAccess().getContribAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getGroup_5()); }
	(rule__ContributionContextGroup__Group_5__0)*
	{ after(grammarAccess.getContributionContextGroupAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContributionContextGroup__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group_5__0__Impl
	rule__ContributionContextGroup__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getContributionContextGroupAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContextGroup__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextGroupAccess().getContribsAssignment_5_1()); }
	(rule__ContributionContextGroup__ContribsAssignment_5_1)
	{ after(grammarAccess.getContributionContextGroupAccess().getContribsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContributionContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__0__Impl
	rule__ContributionContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getContributionContextKeyword_0()); }
	'contributionContext'
	{ after(grammarAccess.getContributionContextAccess().getContributionContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__1__Impl
	rule__ContributionContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getNameAssignment_1()); }
	(rule__ContributionContext__NameAssignment_1)
	{ after(grammarAccess.getContributionContextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__2__Impl
	rule__ContributionContext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getLongNameAssignment_2()); }
	(rule__ContributionContext__LongNameAssignment_2)
	{ after(grammarAccess.getContributionContextAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__3__Impl
	rule__ContributionContext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getContributionContextAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__4__Impl
	rule__ContributionContext__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getChangesAssignment_4()); }
	(rule__ContributionContext__ChangesAssignment_4)*
	{ after(grammarAccess.getContributionContextAccess().getChangesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__5__Impl
	rule__ContributionContext__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getGroup_5()); }
	(rule__ContributionContext__Group_5__0)?
	{ after(grammarAccess.getContributionContextAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getContributionContextAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContributionContext__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group_5__0__Impl
	rule__ContributionContext__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getIncludesKeyword_5_0()); }
	'includes'
	{ after(grammarAccess.getContributionContextAccess().getIncludesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group_5__1__Impl
	rule__ContributionContext__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getIncludedContextAssignment_5_1()); }
	(rule__ContributionContext__IncludedContextAssignment_5_1)
	{ after(grammarAccess.getContributionContextAccess().getIncludedContextAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getGroup_5_2()); }
	(rule__ContributionContext__Group_5_2__0)*
	{ after(grammarAccess.getContributionContextAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContributionContext__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group_5_2__0__Impl
	rule__ContributionContext__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getCommaKeyword_5_2_0()); }
	','
	{ after(grammarAccess.getContributionContextAccess().getCommaKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionContext__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionContextAccess().getIncludedContextsAssignment_5_2_1()); }
	(rule__ContributionContext__IncludedContextsAssignment_5_2_1)
	{ after(grammarAccess.getContributionContextAccess().getIncludedContextsAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContributionChange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionChange__Group__0__Impl
	rule__ContributionChange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionChangeAccess().getContributionAssignment_0()); }
	(rule__ContributionChange__ContributionAssignment_0)
	{ after(grammarAccess.getContributionChangeAccess().getContributionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionChange__Group__1__Impl
	rule__ContributionChange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionChangeAccess().getWithKeyword_1()); }
	'with'
	{ after(grammarAccess.getContributionChangeAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContributionChange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContributionChangeAccess().getAlternatives_2()); }
	(rule__ContributionChange__Alternatives_2)
	{ after(grammarAccess.getContributionChangeAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantitativeValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantitativeValue__Group__0__Impl
	rule__QuantitativeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantitativeValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantitativeValueAccess().getAlternatives_0()); }
	(rule__QuantitativeValue__Alternatives_0)?
	{ after(grammarAccess.getQuantitativeValueAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantitativeValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantitativeValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantitativeValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantitativeValueAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getQuantitativeValueAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UCMmap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__0__Impl
	rule__UCMmap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getSingletonAssignment_0()); }
	(rule__UCMmap__SingletonAssignment_0)?
	{ after(grammarAccess.getUCMmapAccess().getSingletonAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__1__Impl
	rule__UCMmap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getMapKeyword_1()); }
	'map'
	{ after(grammarAccess.getUCMmapAccess().getMapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__2__Impl
	rule__UCMmap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getNameAssignment_2()); }
	(rule__UCMmap__NameAssignment_2)
	{ after(grammarAccess.getUCMmapAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__3__Impl
	rule__UCMmap__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getLongNameAssignment_3()); }
	(rule__UCMmap__LongNameAssignment_3)
	{ after(grammarAccess.getUCMmapAccess().getLongNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__4__Impl
	rule__UCMmap__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getUCMmapAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__5__Impl
	rule__UCMmap__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getStubsAssignment_5()); }
	(rule__UCMmap__StubsAssignment_5)*
	{ after(grammarAccess.getUCMmapAccess().getStubsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__6__Impl
	rule__UCMmap__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getPathsAssignment_6()); }
	(rule__UCMmap__PathsAssignment_6)*
	{ after(grammarAccess.getUCMmapAccess().getPathsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__7__Impl
	rule__UCMmap__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getComponentsAssignment_7()); }
	(rule__UCMmap__ComponentsAssignment_7)*
	{ after(grammarAccess.getUCMmapAccess().getComponentsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UCMmap__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUCMmapAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getUCMmapAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getStartPointAssignment_0()); }
	(rule__Path__StartPointAssignment_0)
	{ after(grammarAccess.getPathAccess().getStartPointAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPathBodyAssignment_1()); }
	(rule__Path__PathBodyAssignment_1)
	{ after(grammarAccess.getPathAccess().getPathBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_0__0__Impl
	rule__StartPoint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getStartKeyword_0_0()); }
	'start'
	{ after(grammarAccess.getStartPointAccess().getStartKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_0__1__Impl
	rule__StartPoint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getGroup_0_1()); }
	(rule__StartPoint__Group_0_1__0)?
	{ after(grammarAccess.getStartPointAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getPreconditionAssignment_0_2()); }
	(rule__StartPoint__PreconditionAssignment_0_2)?
	{ after(grammarAccess.getStartPointAccess().getPreconditionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_0_1__0__Impl
	rule__StartPoint__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getNameAssignment_0_1_0()); }
	(rule__StartPoint__NameAssignment_0_1_0)
	{ after(grammarAccess.getStartPointAccess().getNameAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getLongNameAssignment_0_1_1()); }
	(rule__StartPoint__LongNameAssignment_0_1_1)
	{ after(grammarAccess.getStartPointAccess().getLongNameAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1__0__Impl
	rule__StartPoint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getFailKindAssignment_1_0()); }
	(rule__StartPoint__FailKindAssignment_1_0)
	{ after(grammarAccess.getStartPointAccess().getFailKindAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1__1__Impl
	rule__StartPoint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getNameAssignment_1_1()); }
	(rule__StartPoint__NameAssignment_1_1)
	{ after(grammarAccess.getStartPointAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1__2__Impl
	rule__StartPoint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getLongNameAssignment_1_2()); }
	(rule__StartPoint__LongNameAssignment_1_2)
	{ after(grammarAccess.getStartPointAccess().getLongNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getGroup_1_3()); }
	(rule__StartPoint__Group_1_3__0)?
	{ after(grammarAccess.getStartPointAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1_3__0__Impl
	rule__StartPoint__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getCatchesKeyword_1_3_0()); }
	'catches'
	{ after(grammarAccess.getStartPointAccess().getCatchesKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1_3__1__Impl
	rule__StartPoint__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getLeftSquareBracketLeftSquareBracketKeyword_1_3_1()); }
	'[['
	{ after(grammarAccess.getStartPointAccess().getLeftSquareBracketLeftSquareBracketKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1_3__2__Impl
	rule__StartPoint__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getCatchesAssignment_1_3_2()); }
	(rule__StartPoint__CatchesAssignment_1_3_2)
	{ after(grammarAccess.getStartPointAccess().getCatchesAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartPoint__Group_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartPointAccess().getRightSquareBracketRightSquareBracketKeyword_1_3_3()); }
	']]'
	{ after(grammarAccess.getStartPointAccess().getRightSquareBracketRightSquareBracketKeyword_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathWithRegularEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithRegularEnd__Group__0__Impl
	rule__PathWithRegularEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithRegularEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithRegularEndAccess().getPathWithReferencedEndParserRuleCall_0()); }
	rulePathWithReferencedEnd
	{ after(grammarAccess.getPathWithRegularEndAccess().getPathWithReferencedEndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithRegularEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithRegularEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithRegularEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithRegularEndAccess().getPathEndAssignment_1()); }
	(rule__PathWithRegularEnd__PathEndAssignment_1)?
	{ after(grammarAccess.getPathWithRegularEndAccess().getPathEndAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathWithReferencedEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedEnd__Group__0__Impl
	rule__PathWithReferencedEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedEndAccess().getPathWithReferencedStubParserRuleCall_0()); }
	rulePathWithReferencedStub
	{ after(grammarAccess.getPathWithReferencedEndAccess().getPathWithReferencedStubParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedEndAccess().getGroup_1()); }
	(rule__PathWithReferencedEnd__Group_1__0)?
	{ after(grammarAccess.getPathWithReferencedEndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathWithReferencedEnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedEnd__Group_1__0__Impl
	rule__PathWithReferencedEnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedEndAccess().getReferencedEndAssignment_1_0()); }
	(rule__PathWithReferencedEnd__ReferencedEndAssignment_1_0)?
	{ after(grammarAccess.getPathWithReferencedEndAccess().getReferencedEndAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedEnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedEndAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getPathWithReferencedEndAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathWithReferencedStub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedStub__Group__0__Impl
	rule__PathWithReferencedStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedStubAccess().getPathBodyNodesParserRuleCall_0()); }
	rulePathBodyNodes
	{ after(grammarAccess.getPathWithReferencedStubAccess().getPathBodyNodesParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedStubAccess().getGroup_1()); }
	(rule__PathWithReferencedStub__Group_1__0)?
	{ after(grammarAccess.getPathWithReferencedStubAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathWithReferencedStub__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedStub__Group_1__0__Impl
	rule__PathWithReferencedStub__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedStubAccess().getInKeyword_1_0()); }
	'in'
	{ after(grammarAccess.getPathWithReferencedStubAccess().getInKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedStub__Group_1__1__Impl
	rule__PathWithReferencedStub__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubAssignment_1_1()); }
	(rule__PathWithReferencedStub__ReferencedStubAssignment_1_1)
	{ after(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedStub__Group_1__2__Impl
	rule__PathWithReferencedStub__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedStubAccess().getIndexAssignment_1_2()); }
	(rule__PathWithReferencedStub__IndexAssignment_1_2)
	{ after(grammarAccess.getPathWithReferencedStubAccess().getIndexAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathWithReferencedStub__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathWithReferencedStubAccess().getSemicolonKeyword_1_3()); }
	';'
	{ after(grammarAccess.getPathWithReferencedStubAccess().getSemicolonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathBodyNodes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathBodyNodes__Group__0__Impl
	rule__PathBodyNodes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathBodyNodesAccess().getPathBodyNodesAction_0()); }
	()
	{ after(grammarAccess.getPathBodyNodesAccess().getPathBodyNodesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathBodyNodes__Group__1__Impl
	rule__PathBodyNodes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathBodyNodesAccess().getArrowParserRuleCall_1()); }
	ruleArrow
	{ after(grammarAccess.getPathBodyNodesAccess().getArrowParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathBodyNodes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathBodyNodesAccess().getGroup_2()); }
	(rule__PathBodyNodes__Group_2__0)*
	{ after(grammarAccess.getPathBodyNodesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathBodyNodes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathBodyNodes__Group_2__0__Impl
	rule__PathBodyNodes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathBodyNodesAccess().getPathNodesAssignment_2_0()); }
	(rule__PathBodyNodes__PathNodesAssignment_2_0)
	{ after(grammarAccess.getPathBodyNodesAccess().getPathNodesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathBodyNodes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathBodyNodesAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
	'->'
	{ after(grammarAccess.getPathBodyNodesAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndpointWithConnect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndpointWithConnect__Group__0__Impl
	rule__EndpointWithConnect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndpointWithConnectAccess().getRegularEndAssignment_0()); }
	(rule__EndpointWithConnect__RegularEndAssignment_0)
	{ after(grammarAccess.getEndpointWithConnectAccess().getRegularEndAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndpointWithConnect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndpointWithConnectAccess().getGroup_1()); }
	(rule__EndpointWithConnect__Group_1__0)?
	{ after(grammarAccess.getEndpointWithConnectAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndpointWithConnect__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndpointWithConnect__Group_1__0__Impl
	rule__EndpointWithConnect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndpointWithConnectAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
	'->'
	{ after(grammarAccess.getEndpointWithConnectAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndpointWithConnect__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndpointWithConnectAccess().getConnectAssignment_1_1()); }
	(rule__EndpointWithConnect__ConnectAssignment_1_1)
	{ after(grammarAccess.getEndpointWithConnectAccess().getConnectAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RespRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RespRef__Group__0__Impl
	rule__RespRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRespRefAccess().getXKeyword_0()); }
	'X'
	{ after(grammarAccess.getRespRefAccess().getXKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RespRef__Group__1__Impl
	rule__RespRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRespRefAccess().getNameAssignment_1()); }
	(rule__RespRef__NameAssignment_1)
	{ after(grammarAccess.getRespRefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RespRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRespRefAccess().getLongNameAssignment_2()); }
	(rule__RespRef__LongNameAssignment_2)
	{ after(grammarAccess.getRespRefAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrJoin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrJoin__Group__0__Impl
	rule__OrJoin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrJoinAccess().getOrJoinAction_0()); }
	()
	{ after(grammarAccess.getOrJoinAccess().getOrJoinAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrJoin__Group__1__Impl
	rule__OrJoin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrJoinAccess().getJoinKeyword_1()); }
	'join'
	{ after(grammarAccess.getOrJoinAccess().getJoinKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrJoin__Group__2__Impl
	rule__OrJoin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrJoinAccess().getNameAssignment_2()); }
	(rule__OrJoin__NameAssignment_2)
	{ after(grammarAccess.getOrJoinAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrJoin__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrJoinAccess().getLongNameAssignment_3()); }
	(rule__OrJoin__LongNameAssignment_3)
	{ after(grammarAccess.getOrJoinAccess().getLongNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndJoin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndJoin__Group__0__Impl
	rule__AndJoin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndJoinAccess().getAlternatives_0()); }
	(rule__AndJoin__Alternatives_0)
	{ after(grammarAccess.getAndJoinAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndJoin__Group__1__Impl
	rule__AndJoin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndJoinAccess().getNameAssignment_1()); }
	(rule__AndJoin__NameAssignment_1)
	{ after(grammarAccess.getAndJoinAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndJoin__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndJoinAccess().getLongNameAssignment_2()); }
	(rule__AndJoin__LongNameAssignment_2)
	{ after(grammarAccess.getAndJoinAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WaitingPlace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitingPlace__Group__0__Impl
	rule__WaitingPlace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitingPlaceAccess().getKindAssignment_0()); }
	(rule__WaitingPlace__KindAssignment_0)?
	{ after(grammarAccess.getWaitingPlaceAccess().getKindAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitingPlace__Group__1__Impl
	rule__WaitingPlace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitingPlaceAccess().getWaitKeyword_1()); }
	'wait'
	{ after(grammarAccess.getWaitingPlaceAccess().getWaitKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitingPlace__Group__2__Impl
	rule__WaitingPlace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitingPlaceAccess().getGroup_2()); }
	(rule__WaitingPlace__Group_2__0)?
	{ after(grammarAccess.getWaitingPlaceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitingPlace__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitingPlaceAccess().getConditionAssignment_3()); }
	(rule__WaitingPlace__ConditionAssignment_3)?
	{ after(grammarAccess.getWaitingPlaceAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WaitingPlace__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitingPlace__Group_2__0__Impl
	rule__WaitingPlace__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitingPlaceAccess().getNameAssignment_2_0()); }
	(rule__WaitingPlace__NameAssignment_2_0)
	{ after(grammarAccess.getWaitingPlaceAccess().getNameAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitingPlace__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitingPlaceAccess().getLongNameAssignment_2_1()); }
	(rule__WaitingPlace__LongNameAssignment_2_1)
	{ after(grammarAccess.getWaitingPlaceAccess().getLongNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__0__Impl
	rule__Timer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimerAction_0()); }
	()
	{ after(grammarAccess.getTimerAccess().getTimerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__1__Impl
	rule__Timer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getKindAssignment_1()); }
	(rule__Timer__KindAssignment_1)?
	{ after(grammarAccess.getTimerAccess().getKindAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__2__Impl
	rule__Timer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimerKeyword_2()); }
	'timer'
	{ after(grammarAccess.getTimerAccess().getTimerKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__3__Impl
	rule__Timer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getGroup_3()); }
	(rule__Timer__Group_3__0)?
	{ after(grammarAccess.getTimerAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__4__Impl
	rule__Timer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getGroup_4()); }
	(rule__Timer__Group_4__0)?
	{ after(grammarAccess.getTimerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getConditionAssignment_5()); }
	(rule__Timer__ConditionAssignment_5)?
	{ after(grammarAccess.getTimerAccess().getConditionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_3__0__Impl
	rule__Timer__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getNameAssignment_3_0()); }
	(rule__Timer__NameAssignment_3_0)
	{ after(grammarAccess.getTimerAccess().getNameAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getLongNameAssignment_3_1()); }
	(rule__Timer__LongNameAssignment_3_1)
	{ after(grammarAccess.getTimerAccess().getLongNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_4__0__Impl
	rule__Timer__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getTimerAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_4__1__Impl
	rule__Timer__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimeoutKeyword_4_1()); }
	('timeout')?
	{ after(grammarAccess.getTimerAccess().getTimeoutKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_4__2__Impl
	rule__Timer__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimeoutConditionAssignment_4_2()); }
	(rule__Timer__TimeoutConditionAssignment_4_2)?
	{ after(grammarAccess.getTimerAccess().getTimeoutConditionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_4__3__Impl
	rule__Timer__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimeoutPathAssignment_4_3()); }
	(rule__Timer__TimeoutPathAssignment_4_3)?
	{ after(grammarAccess.getTimerAccess().getTimeoutPathAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getTimerAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connect__Group__0__Impl
	rule__Connect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectAccess().getTriggerKeyword_0()); }
	'trigger'
	{ after(grammarAccess.getConnectAccess().getTriggerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connect__Group__1__Impl
	rule__Connect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectAccess().getConnectsToAssignment_1()); }
	(rule__Connect__ConnectsToAssignment_1)
	{ after(grammarAccess.getConnectAccess().getConnectsToAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getConnectAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailurePoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group__0__Impl
	rule__FailurePoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getFailKeyword_0()); }
	'fail'
	{ after(grammarAccess.getFailurePointAccess().getFailKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group__1__Impl
	rule__FailurePoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getGroup_1()); }
	(rule__FailurePoint__Group_1__0)?
	{ after(grammarAccess.getFailurePointAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getAlternatives_2()); }
	(rule__FailurePoint__Alternatives_2)?
	{ after(grammarAccess.getFailurePointAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailurePoint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group_1__0__Impl
	rule__FailurePoint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getNameAssignment_1_0()); }
	(rule__FailurePoint__NameAssignment_1_0)
	{ after(grammarAccess.getFailurePointAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getLongNameAssignment_1_1()); }
	(rule__FailurePoint__LongNameAssignment_1_1)
	{ after(grammarAccess.getFailurePointAccess().getLongNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailurePoint__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group_2_0__0__Impl
	rule__FailurePoint__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getConditionAssignment_2_0_0()); }
	(rule__FailurePoint__ConditionAssignment_2_0_0)
	{ after(grammarAccess.getFailurePointAccess().getConditionAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getFailLabelAssignment_2_0_1()); }
	(rule__FailurePoint__FailLabelAssignment_2_0_1)
	{ after(grammarAccess.getFailurePointAccess().getFailLabelAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailurePoint__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group_2_1__0__Impl
	rule__FailurePoint__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getFailLabelAssignment_2_1_0()); }
	(rule__FailurePoint__FailLabelAssignment_2_1_0)
	{ after(grammarAccess.getFailurePointAccess().getFailLabelAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailurePoint__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailurePointAccess().getConditionAssignment_2_1_1()); }
	(rule__FailurePoint__ConditionAssignment_2_1_1)
	{ after(grammarAccess.getFailurePointAccess().getConditionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndPoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndPoint__Group__0__Impl
	rule__EndPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndPointAccess().getEndKeyword_0()); }
	'end'
	{ after(grammarAccess.getEndPointAccess().getEndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndPoint__Group__1__Impl
	rule__EndPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndPointAccess().getGroup_1()); }
	(rule__EndPoint__Group_1__0)?
	{ after(grammarAccess.getEndPointAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndPoint__Group__2__Impl
	rule__EndPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndPointAccess().getConditionAssignment_2()); }
	(rule__EndPoint__ConditionAssignment_2)?
	{ after(grammarAccess.getEndPointAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndPoint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndPointAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getEndPointAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndPoint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndPoint__Group_1__0__Impl
	rule__EndPoint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndPointAccess().getNameAssignment_1_0()); }
	(rule__EndPoint__NameAssignment_1_0)
	{ after(grammarAccess.getEndPointAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndPoint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndPointAccess().getLongNameAssignment_1_1()); }
	(rule__EndPoint__LongNameAssignment_1_1)
	{ after(grammarAccess.getEndPointAccess().getLongNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrFork__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group__0__Impl
	rule__OrFork__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getOrKeyword_0()); }
	'or'
	{ after(grammarAccess.getOrForkAccess().getOrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group__1__Impl
	rule__OrFork__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getAlternatives_1()); }
	(rule__OrFork__Alternatives_1)
	{ after(grammarAccess.getOrForkAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getConnectingOrBodyAssignment_2()); }
	(rule__OrFork__ConnectingOrBodyAssignment_2)?
	{ after(grammarAccess.getOrForkAccess().getConnectingOrBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrFork__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group_1_0__0__Impl
	rule__OrFork__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getGroup_1_0_0()); }
	(rule__OrFork__Group_1_0_0__0)?
	{ after(grammarAccess.getOrForkAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group_1_0__1__Impl
	rule__OrFork__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getLeftCurlyBracketKeyword_1_0_1()); }
	'{'
	{ after(grammarAccess.getOrForkAccess().getLeftCurlyBracketKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group_1_0__2__Impl
	rule__OrFork__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getBodyAssignment_1_0_2()); }
	(rule__OrFork__BodyAssignment_1_0_2)
	{ after(grammarAccess.getOrForkAccess().getBodyAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getRightCurlyBracketKeyword_1_0_3()); }
	'}'
	{ after(grammarAccess.getOrForkAccess().getRightCurlyBracketKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrFork__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group_1_0_0__0__Impl
	rule__OrFork__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getNameAssignment_1_0_0_0()); }
	(rule__OrFork__NameAssignment_1_0_0_0)
	{ after(grammarAccess.getOrForkAccess().getNameAssignment_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrFork__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrForkAccess().getLongNameAssignment_1_0_0_1()); }
	(rule__OrFork__LongNameAssignment_1_0_0_1)
	{ after(grammarAccess.getOrForkAccess().getLongNameAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseOrForkBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseOrForkBody__Group__0__Impl
	rule__ElseOrForkBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseOrForkBodyAccess().getOrForkBodyParserRuleCall_0()); }
	ruleOrForkBody
	{ after(grammarAccess.getElseOrForkBodyAccess().getOrForkBodyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseOrForkBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseOrForkBodyAccess().getGroup_1()); }
	(rule__ElseOrForkBody__Group_1__0)?
	{ after(grammarAccess.getElseOrForkBodyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseOrForkBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseOrForkBody__Group_1__0__Impl
	rule__ElseOrForkBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseOrForkBodyAccess().getElseKeyword_1_0()); }
	'[else]'
	{ after(grammarAccess.getElseOrForkBodyAccess().getElseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseOrForkBody__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseOrForkBodyAccess().getElseBodyAssignment_1_1()); }
	(rule__ElseOrForkBody__ElseBodyAssignment_1_1)
	{ after(grammarAccess.getElseOrForkBodyAccess().getElseBodyAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularOrFork__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularOrFork__Group__0__Impl
	rule__RegularOrFork__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularOrFork__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularOrForkAccess().getConditionAssignment_0()); }
	(rule__RegularOrFork__ConditionAssignment_0)
	{ after(grammarAccess.getRegularOrForkAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularOrFork__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularOrFork__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularOrFork__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularOrForkAccess().getPathBodyAssignment_1()); }
	(rule__RegularOrFork__PathBodyAssignment_1)
	{ after(grammarAccess.getRegularOrForkAccess().getPathBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndFork__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group__0__Impl
	rule__AndFork__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getAndKeyword_0()); }
	'and'
	{ after(grammarAccess.getAndForkAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group__1__Impl
	rule__AndFork__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getGroup_1()); }
	(rule__AndFork__Group_1__0)?
	{ after(grammarAccess.getAndForkAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group__2__Impl
	rule__AndFork__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAndForkAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group__3__Impl
	rule__AndFork__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getGroup_3()); }
	(rule__AndFork__Group_3__0)*
	{ after(grammarAccess.getAndForkAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group__4__Impl
	rule__AndFork__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAndForkAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getConnectingAndBodyAssignment_5()); }
	(rule__AndFork__ConnectingAndBodyAssignment_5)?
	{ after(grammarAccess.getAndForkAccess().getConnectingAndBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndFork__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group_1__0__Impl
	rule__AndFork__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getNameAssignment_1_0()); }
	(rule__AndFork__NameAssignment_1_0)
	{ after(grammarAccess.getAndForkAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getLongNameAssignment_1_1()); }
	(rule__AndFork__LongNameAssignment_1_1)
	{ after(grammarAccess.getAndForkAccess().getLongNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndFork__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group_3__0__Impl
	rule__AndFork__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getAsteriskKeyword_3_0()); }
	'*'
	{ after(grammarAccess.getAndForkAccess().getAsteriskKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndFork__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndForkAccess().getPathbodyAssignment_3_1()); }
	(rule__AndFork__PathbodyAssignment_3_1)
	{ after(grammarAccess.getAndForkAccess().getPathbodyAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group__0__Impl
	rule__Stub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getStubTypeAssignment_0()); }
	(rule__Stub__StubTypeAssignment_0)?
	{ after(grammarAccess.getStubAccess().getStubTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group__1__Impl
	rule__Stub__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getStubKeyword_1()); }
	'stub'
	{ after(grammarAccess.getStubAccess().getStubKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group__2__Impl
	rule__Stub__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getGroup_2()); }
	(rule__Stub__Group_2__0)?
	{ after(grammarAccess.getStubAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group__3__Impl
	rule__Stub__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getAlternatives_3()); }
	(rule__Stub__Alternatives_3)
	{ after(grammarAccess.getStubAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group__4__Impl
	rule__Stub__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getGroup_4()); }
	(rule__Stub__Group_4__0)?
	{ after(grammarAccess.getStubAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getConnectingStubBodyAssignment_5()); }
	(rule__Stub__ConnectingStubBodyAssignment_5)?
	{ after(grammarAccess.getStubAccess().getConnectingStubBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stub__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_2__0__Impl
	rule__Stub__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getInKeyword_2_0()); }
	'in'
	{ after(grammarAccess.getStubAccess().getInKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getIndexAssignment_2_1()); }
	(rule__Stub__IndexAssignment_2_1)
	{ after(grammarAccess.getStubAccess().getIndexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stub__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_3_0__0__Impl
	rule__Stub__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getGroup_3_0_0()); }
	(rule__Stub__Group_3_0_0__0)?
	{ after(grammarAccess.getStubAccess().getGroup_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getParamsAssignment_3_0_1()); }
	(rule__Stub__ParamsAssignment_3_0_1)
	{ after(grammarAccess.getStubAccess().getParamsAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stub__Group_3_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_3_0_0__0__Impl
	rule__Stub__Group_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_3_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getNameAssignment_3_0_0_0()); }
	(rule__Stub__NameAssignment_3_0_0_0)
	{ after(grammarAccess.getStubAccess().getNameAssignment_3_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_3_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_3_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getLongNameAssignment_3_0_0_1()); }
	(rule__Stub__LongNameAssignment_3_0_0_1)
	{ after(grammarAccess.getStubAccess().getLongNameAssignment_3_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stub__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_4__0__Impl
	rule__Stub__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getStubAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_4__1__Impl
	rule__Stub__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getOutPathsAssignment_4_1()); }
	(rule__Stub__OutPathsAssignment_4_1)*
	{ after(grammarAccess.getStubAccess().getOutPathsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stub__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getStubAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StubParameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubParameters__Group__0__Impl
	rule__StubParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubParametersAccess().getStubParametersAction_0()); }
	()
	{ after(grammarAccess.getStubParametersAccess().getStubParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubParameters__Group__1__Impl
	rule__StubParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStubParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubParameters__Group__2__Impl
	rule__StubParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubParametersAccess().getPluginAssignment_2()); }
	(rule__StubParameters__PluginAssignment_2)*
	{ after(grammarAccess.getStubParametersAccess().getPluginAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubParameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubParametersAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getStubParametersAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StubDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubDeclaration__Group__0__Impl
	rule__StubDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubDeclarationAccess().getNameAssignment_0()); }
	(rule__StubDeclaration__NameAssignment_0)
	{ after(grammarAccess.getStubDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubDeclaration__Group__1__Impl
	rule__StubDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubDeclarationAccess().getLongNameAssignment_1()); }
	(rule__StubDeclaration__LongNameAssignment_1)
	{ after(grammarAccess.getStubDeclarationAccess().getLongNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubDeclaration__Group__2__Impl
	rule__StubDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getStubDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubDeclarationAccess().getParamsAssignment_3()); }
	(rule__StubDeclaration__ParamsAssignment_3)
	{ after(grammarAccess.getStubDeclarationAccess().getParamsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StubOutPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group__0__Impl
	rule__StubOutPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getGroup_0()); }
	(rule__StubOutPath__Group_0__0)
	{ after(grammarAccess.getStubOutPathAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group__1__Impl
	rule__StubOutPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getGroup_1()); }
	(rule__StubOutPath__Group_1__0)?
	{ after(grammarAccess.getStubOutPathAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getPathAssignment_2()); }
	(rule__StubOutPath__PathAssignment_2)
	{ after(grammarAccess.getStubOutPathAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StubOutPath__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group_0__0__Impl
	rule__StubOutPath__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getOutKeyword_0_0()); }
	'out'
	{ after(grammarAccess.getStubOutPathAccess().getOutKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getIndexAssignment_0_1()); }
	(rule__StubOutPath__IndexAssignment_0_1)
	{ after(grammarAccess.getStubOutPathAccess().getIndexAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StubOutPath__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group_1__0__Impl
	rule__StubOutPath__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getThresholdKeyword_1_0()); }
	'threshold'
	{ after(grammarAccess.getStubOutPathAccess().getThresholdKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group_1__1__Impl
	rule__StubOutPath__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getLeftSquareBracketKeyword_1_1()); }
	'['
	{ after(grammarAccess.getStubOutPathAccess().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group_1__2__Impl
	rule__StubOutPath__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getThresholdAssignment_1_2()); }
	(rule__StubOutPath__ThresholdAssignment_1_2)
	{ after(grammarAccess.getStubOutPathAccess().getThresholdAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StubOutPath__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStubOutPathAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getStubOutPathAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PluginBinding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group__0__Impl
	rule__PluginBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getConditionAssignment_0()); }
	(rule__PluginBinding__ConditionAssignment_0)?
	{ after(grammarAccess.getPluginBindingAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group__1__Impl
	rule__PluginBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getGroup_1()); }
	(rule__PluginBinding__Group_1__0)?
	{ after(grammarAccess.getPluginBindingAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group__2__Impl
	rule__PluginBinding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getMapAssignment_2()); }
	(rule__PluginBinding__MapAssignment_2)
	{ after(grammarAccess.getPluginBindingAccess().getMapAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getGroup_3()); }
	(rule__PluginBinding__Group_3__0)?
	{ after(grammarAccess.getPluginBindingAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PluginBinding__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_1__0__Impl
	rule__PluginBinding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getReplicationKeyword_1_0()); }
	'replication'
	{ after(grammarAccess.getPluginBindingAccess().getReplicationKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getReplicationAssignment_1_1()); }
	(rule__PluginBinding__ReplicationAssignment_1_1)
	{ after(grammarAccess.getPluginBindingAccess().getReplicationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PluginBinding__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_3__0__Impl
	rule__PluginBinding__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getColonKeyword_3_0()); }
	':'
	{ after(grammarAccess.getPluginBindingAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_3__1__Impl
	rule__PluginBinding__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getBindingAssignment_3_1()); }
	(rule__PluginBinding__BindingAssignment_3_1)
	{ after(grammarAccess.getPluginBindingAccess().getBindingAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getGroup_3_2()); }
	(rule__PluginBinding__Group_3_2__0)*
	{ after(grammarAccess.getPluginBindingAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PluginBinding__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_3_2__0__Impl
	rule__PluginBinding__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getPluginBindingAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluginBinding__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluginBindingAccess().getBindingsAssignment_3_2_1()); }
	(rule__PluginBinding__BindingsAssignment_3_2_1)
	{ after(grammarAccess.getPluginBindingAccess().getBindingsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group__0__Impl
	rule__ComponentRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getProtectedKeyword_0()); }
	('protected')?
	{ after(grammarAccess.getComponentRefAccess().getProtectedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group__1__Impl
	rule__ComponentRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getKindAssignment_1()); }
	(rule__ComponentRef__KindAssignment_1)?
	{ after(grammarAccess.getComponentRefAccess().getKindAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group__2__Impl
	rule__ComponentRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getNameAssignment_2()); }
	(rule__ComponentRef__NameAssignment_2)
	{ after(grammarAccess.getComponentRefAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group__3__Impl
	rule__ComponentRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getLongNameAssignment_3()); }
	(rule__ComponentRef__LongNameAssignment_3)
	{ after(grammarAccess.getComponentRefAccess().getLongNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getGroup_4()); }
	(rule__ComponentRef__Group_4__0)?
	{ after(grammarAccess.getComponentRefAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentRef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group_4__0__Impl
	rule__ComponentRef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getColonKeyword_4_0()); }
	':'
	{ after(grammarAccess.getComponentRefAccess().getColonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group_4__1__Impl
	rule__ComponentRef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getElementAssignment_4_1()); }
	(rule__ComponentRef__ElementAssignment_4_1)
	{ after(grammarAccess.getComponentRefAccess().getElementAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getGroup_4_2()); }
	(rule__ComponentRef__Group_4_2__0)*
	{ after(grammarAccess.getComponentRefAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentRef__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group_4_2__0__Impl
	rule__ComponentRef__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getComponentRefAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentRef__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentRefAccess().getElementsAssignment_4_2_1()); }
	(rule__ComponentRef__ElementsAssignment_4_2_1)
	{ after(grammarAccess.getComponentRefAccess().getElementsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LongBoundElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongBoundElement__Group__0__Impl
	rule__LongBoundElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongBoundElementAccess().getFromAssignment_0()); }
	(rule__LongBoundElement__FromAssignment_0)
	{ after(grammarAccess.getLongBoundElementAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongBoundElement__Group__1__Impl
	rule__LongBoundElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongBoundElementAccess().getFullStopFullStopKeyword_1()); }
	'..'
	{ after(grammarAccess.getLongBoundElementAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LongBoundElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLongBoundElementAccess().getToAssignment_2()); }
	(rule__LongBoundElement__ToAssignment_2)
	{ after(grammarAccess.getLongBoundElementAccess().getToAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InBinding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InBinding__Group__0__Impl
	rule__InBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInBindingAccess().getMapStartAssignment_0()); }
	(rule__InBinding__MapStartAssignment_0)
	{ after(grammarAccess.getInBindingAccess().getMapStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InBinding__Group__1__Impl
	rule__InBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInBindingAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInBindingAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InBinding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInBindingAccess().getGroup_2()); }
	(rule__InBinding__Group_2__0)
	{ after(grammarAccess.getInBindingAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InBinding__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InBinding__Group_2__0__Impl
	rule__InBinding__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInBindingAccess().getInKeyword_2_0()); }
	'in'
	{ after(grammarAccess.getInBindingAccess().getInKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InBinding__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInBindingAccess().getIndexAssignment_2_1()); }
	(rule__InBinding__IndexAssignment_2_1)
	{ after(grammarAccess.getInBindingAccess().getIndexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutBinding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutBinding__Group__0__Impl
	rule__OutBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutBindingAccess().getMapEndAssignment_0()); }
	(rule__OutBinding__MapEndAssignment_0)
	{ after(grammarAccess.getOutBindingAccess().getMapEndAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutBinding__Group__1__Impl
	rule__OutBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutBindingAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getOutBindingAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutBinding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutBindingAccess().getGroup_2()); }
	(rule__OutBinding__Group_2__0)
	{ after(grammarAccess.getOutBindingAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutBinding__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutBinding__Group_2__0__Impl
	rule__OutBinding__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutBindingAccess().getOutKeyword_2_0()); }
	'out'
	{ after(grammarAccess.getOutBindingAccess().getOutKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutBinding__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutBindingAccess().getIndexAssignment_2_1()); }
	(rule__OutBinding__IndexAssignment_2_1)
	{ after(grammarAccess.getOutBindingAccess().getIndexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentBinding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBinding__Group__0__Impl
	rule__ComponentBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBindingAccess().getComponentInAssignment_0()); }
	(rule__ComponentBinding__ComponentInAssignment_0)
	{ after(grammarAccess.getComponentBindingAccess().getComponentInAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBinding__Group__1__Impl
	rule__ComponentBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBindingAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getComponentBindingAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBinding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBindingAccess().getComponentOutAssignment_2()); }
	(rule__ComponentBinding__ComponentOutAssignment_2)
	{ after(grammarAccess.getComponentBindingAccess().getComponentOutAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailureLabel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailureLabel__Group__0__Impl
	rule__FailureLabel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureLabel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureLabelAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); }
	'[['
	{ after(grammarAccess.getFailureLabelAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureLabel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailureLabel__Group__1__Impl
	rule__FailureLabel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureLabel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureLabelAccess().getFailureAssignment_1()); }
	(rule__FailureLabel__FailureAssignment_1)
	{ after(grammarAccess.getFailureLabelAccess().getFailureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureLabel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailureLabel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureLabel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailureLabelAccess().getRightSquareBracketRightSquareBracketKeyword_2()); }
	']]'
	{ after(grammarAccess.getFailureLabelAccess().getRightSquareBracketRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group__0__Impl
	rule__ScenarioGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getScenarioGroupKeyword_0()); }
	'scenarioGroup'
	{ after(grammarAccess.getScenarioGroupAccess().getScenarioGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group__1__Impl
	rule__ScenarioGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getNameAssignment_1()); }
	(rule__ScenarioGroup__NameAssignment_1)
	{ after(grammarAccess.getScenarioGroupAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group__2__Impl
	rule__ScenarioGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getLongNameAssignment_2()); }
	(rule__ScenarioGroup__LongNameAssignment_2)
	{ after(grammarAccess.getScenarioGroupAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group__3__Impl
	rule__ScenarioGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getScenarioGroupAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group__4__Impl
	rule__ScenarioGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getScenarioAssignment_4()); }
	(rule__ScenarioGroup__ScenarioAssignment_4)
	{ after(grammarAccess.getScenarioGroupAccess().getScenarioAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getGroup_5()); }
	(rule__ScenarioGroup__Group_5__0)*
	{ after(grammarAccess.getScenarioGroupAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioGroup__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group_5__0__Impl
	rule__ScenarioGroup__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getScenarioGroupAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioGroup__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioGroupAccess().getScenariosAssignment_5_1()); }
	(rule__ScenarioGroup__ScenariosAssignment_5_1)
	{ after(grammarAccess.getScenarioGroupAccess().getScenariosAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__0__Impl
	rule__ScenarioDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getScenarioKeyword_0()); }
	'scenario'
	{ after(grammarAccess.getScenarioDefAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__1__Impl
	rule__ScenarioDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getNameAssignment_1()); }
	(rule__ScenarioDef__NameAssignment_1)
	{ after(grammarAccess.getScenarioDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__2__Impl
	rule__ScenarioDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getLongNameAssignment_2()); }
	(rule__ScenarioDef__LongNameAssignment_2)
	{ after(grammarAccess.getScenarioDefAccess().getLongNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__3__Impl
	rule__ScenarioDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getScenarioDefAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__4__Impl
	rule__ScenarioDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_4()); }
	(rule__ScenarioDef__Group_4__0)*
	{ after(grammarAccess.getScenarioDefAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__5__Impl
	rule__ScenarioDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_5()); }
	(rule__ScenarioDef__Group_5__0)*
	{ after(grammarAccess.getScenarioDefAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__6__Impl
	rule__ScenarioDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_6()); }
	(rule__ScenarioDef__Group_6__0)*
	{ after(grammarAccess.getScenarioDefAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__7__Impl
	rule__ScenarioDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_7()); }
	(rule__ScenarioDef__Group_7__0)?
	{ after(grammarAccess.getScenarioDefAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__8__Impl
	rule__ScenarioDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_8()); }
	(rule__ScenarioDef__Group_8__0)?
	{ after(grammarAccess.getScenarioDefAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__9__Impl
	rule__ScenarioDef__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_9()); }
	(rule__ScenarioDef__Group_9__0)?
	{ after(grammarAccess.getScenarioDefAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getScenarioDefAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_4__0__Impl
	rule__ScenarioDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getPreKeyword_4_0()); }
	'pre'
	{ after(grammarAccess.getScenarioDefAccess().getPreKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getPreconditionsAssignment_4_1()); }
	(rule__ScenarioDef__PreconditionsAssignment_4_1)
	{ after(grammarAccess.getScenarioDefAccess().getPreconditionsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_5__0__Impl
	rule__ScenarioDef__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getPostKeyword_5_0()); }
	'post'
	{ after(grammarAccess.getScenarioDefAccess().getPostKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getPostconditionsAssignment_5_1()); }
	(rule__ScenarioDef__PostconditionsAssignment_5_1)
	{ after(grammarAccess.getScenarioDefAccess().getPostconditionsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_6__0__Impl
	rule__ScenarioDef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getInitializeKeyword_6_0()); }
	'initialize'
	{ after(grammarAccess.getScenarioDefAccess().getInitializeKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getInitializationsAssignment_6_1()); }
	(rule__ScenarioDef__InitializationsAssignment_6_1)
	{ after(grammarAccess.getScenarioDefAccess().getInitializationsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_7__0__Impl
	rule__ScenarioDef__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getStartKeyword_7_0()); }
	'start'
	{ after(grammarAccess.getScenarioDefAccess().getStartKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_7__1__Impl
	rule__ScenarioDef__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getStartPointAssignment_7_1()); }
	(rule__ScenarioDef__StartPointAssignment_7_1)
	{ after(grammarAccess.getScenarioDefAccess().getStartPointAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_7_2()); }
	(rule__ScenarioDef__Group_7_2__0)*
	{ after(grammarAccess.getScenarioDefAccess().getGroup_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_7_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_7_2__0__Impl
	rule__ScenarioDef__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getCommaKeyword_7_2_0()); }
	','
	{ after(grammarAccess.getScenarioDefAccess().getCommaKeyword_7_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_7_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getStartPointsAssignment_7_2_1()); }
	(rule__ScenarioDef__StartPointsAssignment_7_2_1)
	{ after(grammarAccess.getScenarioDefAccess().getStartPointsAssignment_7_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_8__0__Impl
	rule__ScenarioDef__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getEndKeyword_8_0()); }
	'end'
	{ after(grammarAccess.getScenarioDefAccess().getEndKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_8__1__Impl
	rule__ScenarioDef__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getEndPointAssignment_8_1()); }
	(rule__ScenarioDef__EndPointAssignment_8_1)
	{ after(grammarAccess.getScenarioDefAccess().getEndPointAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_8_2()); }
	(rule__ScenarioDef__Group_8_2__0)*
	{ after(grammarAccess.getScenarioDefAccess().getGroup_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_8_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_8_2__0__Impl
	rule__ScenarioDef__Group_8_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getCommaKeyword_8_2_0()); }
	','
	{ after(grammarAccess.getScenarioDefAccess().getCommaKeyword_8_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_8_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_8_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getEndPointsAssignment_8_2_1()); }
	(rule__ScenarioDef__EndPointsAssignment_8_2_1)
	{ after(grammarAccess.getScenarioDefAccess().getEndPointsAssignment_8_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_9__0__Impl
	rule__ScenarioDef__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getIncludesKeyword_9_0()); }
	'includes'
	{ after(grammarAccess.getScenarioDefAccess().getIncludesKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_9__1__Impl
	rule__ScenarioDef__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getIncludedScenarioAssignment_9_1()); }
	(rule__ScenarioDef__IncludedScenarioAssignment_9_1)
	{ after(grammarAccess.getScenarioDefAccess().getIncludedScenarioAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getGroup_9_2()); }
	(rule__ScenarioDef__Group_9_2__0)*
	{ after(grammarAccess.getScenarioDefAccess().getGroup_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDef__Group_9_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_9_2__0__Impl
	rule__ScenarioDef__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getCommaKeyword_9_2_0()); }
	','
	{ after(grammarAccess.getScenarioDefAccess().getCommaKeyword_9_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDef__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__Group_9_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDefAccess().getIncludedScenariosAssignment_9_2_1()); }
	(rule__ScenarioDef__IncludedScenariosAssignment_9_2_1)
	{ after(grammarAccess.getScenarioDefAccess().getIncludedScenariosAssignment_9_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initialization__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group_0__0__Impl
	rule__Initialization__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getVariableAssignment_0_0()); }
	(rule__Initialization__VariableAssignment_0_0)
	{ after(grammarAccess.getInitializationAccess().getVariableAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group_0__1__Impl
	rule__Initialization__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getInitializationAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getValueAssignment_0_2()); }
	(rule__Initialization__ValueAssignment_0_2)
	{ after(grammarAccess.getInitializationAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initialization__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group_1__0__Impl
	rule__Initialization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getVariableAssignment_1_0()); }
	(rule__Initialization__VariableAssignment_1_0)
	{ after(grammarAccess.getInitializationAccess().getVariableAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group_1__1__Impl
	rule__Initialization__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getInitializationAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getValueAssignment_1_2()); }
	(rule__Initialization__ValueAssignment_1_2)
	{ after(grammarAccess.getInitializationAccess().getValueAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_0()); }
	(rule__Variable__Alternatives_0)
	{ after(grammarAccess.getVariableAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__0__Impl
	rule__EnumerationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumerationTypeAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__1__Impl
	rule__EnumerationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getNameAssignment_1()); }
	(rule__EnumerationType__NameAssignment_1)
	{ after(grammarAccess.getEnumerationTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__2__Impl
	rule__EnumerationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getEnumerationTypeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__3__Impl
	rule__EnumerationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getValueAssignment_3()); }
	(rule__EnumerationType__ValueAssignment_3)
	{ after(grammarAccess.getEnumerationTypeAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getGroup_4()); }
	(rule__EnumerationType__Group_4__0)*
	{ after(grammarAccess.getEnumerationTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group_4__0__Impl
	rule__EnumerationType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getEnumerationTypeAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getValuesAssignment_4_1()); }
	(rule__EnumerationType__ValuesAssignment_4_1)
	{ after(grammarAccess.getEnumerationTypeAccess().getValuesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceToScenarioDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToScenarioDef__Group__0__Impl
	rule__ReferenceToScenarioDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToScenarioDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToScenarioDefAccess().getNameAssignment_0()); }
	(rule__ReferenceToScenarioDef__NameAssignment_0)
	{ after(grammarAccess.getReferenceToScenarioDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToScenarioDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToScenarioDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToScenarioDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToScenarioDefAccess().getLongNameAssignment_1()); }
	(rule__ReferenceToScenarioDef__LongNameAssignment_1)
	{ after(grammarAccess.getReferenceToScenarioDefAccess().getLongNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__URNspec__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getURNspecAccess().getUnorderedGroup());
	}
:
	rule__URNspec__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getURNspecAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getURNspecAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getURNspecAccess().getGroup_0()); }
					(rule__URNspec__Group_0__0)
					{ after(grammarAccess.getURNspecAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getActorsAssignment_1()); }
						(rule__URNspec__ActorsAssignment_1)
						{ after(grammarAccess.getURNspecAccess().getActorsAssignment_1()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getActorsAssignment_1()); }
						((rule__URNspec__ActorsAssignment_1)=>rule__URNspec__ActorsAssignment_1)*
						{ after(grammarAccess.getURNspecAccess().getActorsAssignment_1()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getURNspecAccess().getShowAsMeansEndAssignment_2()); }
					(rule__URNspec__ShowAsMeansEndAssignment_2)
					{ after(grammarAccess.getURNspecAccess().getShowAsMeansEndAssignment_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getStratGroupsAssignment_3()); }
						(rule__URNspec__StratGroupsAssignment_3)
						{ after(grammarAccess.getURNspecAccess().getStratGroupsAssignment_3()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getStratGroupsAssignment_3()); }
						((rule__URNspec__StratGroupsAssignment_3)=>rule__URNspec__StratGroupsAssignment_3)*
						{ after(grammarAccess.getURNspecAccess().getStratGroupsAssignment_3()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getStrategiesAssignment_4()); }
						(rule__URNspec__StrategiesAssignment_4)
						{ after(grammarAccess.getURNspecAccess().getStrategiesAssignment_4()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getStrategiesAssignment_4()); }
						((rule__URNspec__StrategiesAssignment_4)=>rule__URNspec__StrategiesAssignment_4)*
						{ after(grammarAccess.getURNspecAccess().getStrategiesAssignment_4()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 5);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getIndConversionsAssignment_5()); }
						(rule__URNspec__IndConversionsAssignment_5)
						{ after(grammarAccess.getURNspecAccess().getIndConversionsAssignment_5()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getIndConversionsAssignment_5()); }
						((rule__URNspec__IndConversionsAssignment_5)=>rule__URNspec__IndConversionsAssignment_5)*
						{ after(grammarAccess.getURNspecAccess().getIndConversionsAssignment_5()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 6);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getContribContextGroupsAssignment_6()); }
						(rule__URNspec__ContribContextGroupsAssignment_6)
						{ after(grammarAccess.getURNspecAccess().getContribContextGroupsAssignment_6()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getContribContextGroupsAssignment_6()); }
						((rule__URNspec__ContribContextGroupsAssignment_6)=>rule__URNspec__ContribContextGroupsAssignment_6)*
						{ after(grammarAccess.getURNspecAccess().getContribContextGroupsAssignment_6()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 7);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getContribContextsAssignment_7()); }
						(rule__URNspec__ContribContextsAssignment_7)
						{ after(grammarAccess.getURNspecAccess().getContribContextsAssignment_7()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getContribContextsAssignment_7()); }
						((rule__URNspec__ContribContextsAssignment_7)=>rule__URNspec__ContribContextsAssignment_7)*
						{ after(grammarAccess.getURNspecAccess().getContribContextsAssignment_7()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 8);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getUcmMapsAssignment_8()); }
						(rule__URNspec__UcmMapsAssignment_8)
						{ after(grammarAccess.getURNspecAccess().getUcmMapsAssignment_8()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getUcmMapsAssignment_8()); }
						((rule__URNspec__UcmMapsAssignment_8)=>rule__URNspec__UcmMapsAssignment_8)*
						{ after(grammarAccess.getURNspecAccess().getUcmMapsAssignment_8()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 9);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getScenGroupsAssignment_9()); }
						(rule__URNspec__ScenGroupsAssignment_9)
						{ after(grammarAccess.getURNspecAccess().getScenGroupsAssignment_9()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getScenGroupsAssignment_9()); }
						((rule__URNspec__ScenGroupsAssignment_9)=>rule__URNspec__ScenGroupsAssignment_9)*
						{ after(grammarAccess.getURNspecAccess().getScenGroupsAssignment_9()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 10);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getScenDefsAssignment_10()); }
						(rule__URNspec__ScenDefsAssignment_10)
						{ after(grammarAccess.getURNspecAccess().getScenDefsAssignment_10()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getScenDefsAssignment_10()); }
						((rule__URNspec__ScenDefsAssignment_10)=>rule__URNspec__ScenDefsAssignment_10)*
						{ after(grammarAccess.getURNspecAccess().getScenDefsAssignment_10()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 11);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getVariablesAssignment_11()); }
						(rule__URNspec__VariablesAssignment_11)
						{ after(grammarAccess.getURNspecAccess().getVariablesAssignment_11()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getVariablesAssignment_11()); }
						((rule__URNspec__VariablesAssignment_11)=>rule__URNspec__VariablesAssignment_11)*
						{ after(grammarAccess.getURNspecAccess().getVariablesAssignment_11()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 12)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 12);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getEnumTypesAssignment_12()); }
						(rule__URNspec__EnumTypesAssignment_12)
						{ after(grammarAccess.getURNspecAccess().getEnumTypesAssignment_12()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getEnumTypesAssignment_12()); }
						((rule__URNspec__EnumTypesAssignment_12)=>rule__URNspec__EnumTypesAssignment_12)*
						{ after(grammarAccess.getURNspecAccess().getEnumTypesAssignment_12()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 13)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 13);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getConcernsAssignment_13()); }
						(rule__URNspec__ConcernsAssignment_13)
						{ after(grammarAccess.getURNspecAccess().getConcernsAssignment_13()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getConcernsAssignment_13()); }
						((rule__URNspec__ConcernsAssignment_13)=>rule__URNspec__ConcernsAssignment_13)*
						{ after(grammarAccess.getURNspecAccess().getConcernsAssignment_13()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 14)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 14);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getUrnlinksAssignment_14()); }
						(rule__URNspec__UrnlinksAssignment_14)
						{ after(grammarAccess.getURNspecAccess().getUrnlinksAssignment_14()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getUrnlinksAssignment_14()); }
						((rule__URNspec__UrnlinksAssignment_14)=>rule__URNspec__UrnlinksAssignment_14)*
						{ after(grammarAccess.getURNspecAccess().getUrnlinksAssignment_14()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getURNspecAccess().getUnorderedGroup(), 15)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getURNspecAccess().getUnorderedGroup(), 15);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getURNspecAccess().getMetadataAssignment_15()); }
						(rule__URNspec__MetadataAssignment_15)
						{ after(grammarAccess.getURNspecAccess().getMetadataAssignment_15()); }
					)
					(
						{ before(grammarAccess.getURNspecAccess().getMetadataAssignment_15()); }
						((rule__URNspec__MetadataAssignment_15)=>rule__URNspec__MetadataAssignment_15)*
						{ after(grammarAccess.getURNspecAccess().getMetadataAssignment_15()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getURNspecAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__6?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__7?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__8?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__9?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__10?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__11?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__12?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__13?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__14?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
	rule__URNspec__UnorderedGroup__15?
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UnorderedGroup__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URNspec__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__URNspec__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getURNspecAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__InfoAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getInfoConcreteURNspecParserRuleCall_0_2_0()); }
		ruleConcreteURNspec
		{ after(grammarAccess.getURNspecAccess().getInfoConcreteURNspecParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ActorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getActorsActorParserRuleCall_1_0()); }
		ruleActor
		{ after(grammarAccess.getURNspecAccess().getActorsActorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ShowAsMeansEndAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getShowAsMeansEndShowAsMeansEndKeyword_2_0()); }
		(
			{ before(grammarAccess.getURNspecAccess().getShowAsMeansEndShowAsMeansEndKeyword_2_0()); }
			'showAsMeansEnd'
			{ after(grammarAccess.getURNspecAccess().getShowAsMeansEndShowAsMeansEndKeyword_2_0()); }
		)
		{ after(grammarAccess.getURNspecAccess().getShowAsMeansEndShowAsMeansEndKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__StratGroupsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getStratGroupsStrategiesGroupParserRuleCall_3_0()); }
		ruleStrategiesGroup
		{ after(grammarAccess.getURNspecAccess().getStratGroupsStrategiesGroupParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__StrategiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getStrategiesEvaluationStrategyParserRuleCall_4_0()); }
		ruleEvaluationStrategy
		{ after(grammarAccess.getURNspecAccess().getStrategiesEvaluationStrategyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__IndConversionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getIndConversionsIndicatorConversionParserRuleCall_5_0()); }
		ruleIndicatorConversion
		{ after(grammarAccess.getURNspecAccess().getIndConversionsIndicatorConversionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ContribContextGroupsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getContribContextGroupsContributionContextGroupParserRuleCall_6_0()); }
		ruleContributionContextGroup
		{ after(grammarAccess.getURNspecAccess().getContribContextGroupsContributionContextGroupParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ContribContextsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getContribContextsContributionContextParserRuleCall_7_0()); }
		ruleContributionContext
		{ after(grammarAccess.getURNspecAccess().getContribContextsContributionContextParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UcmMapsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getUcmMapsUCMmapParserRuleCall_8_0()); }
		ruleUCMmap
		{ after(grammarAccess.getURNspecAccess().getUcmMapsUCMmapParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ScenGroupsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getScenGroupsScenarioGroupParserRuleCall_9_0()); }
		ruleScenarioGroup
		{ after(grammarAccess.getURNspecAccess().getScenGroupsScenarioGroupParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ScenDefsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getScenDefsScenarioDefParserRuleCall_10_0()); }
		ruleScenarioDef
		{ after(grammarAccess.getURNspecAccess().getScenDefsScenarioDefParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__VariablesAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getVariablesVariableParserRuleCall_11_0()); }
		ruleVariable
		{ after(grammarAccess.getURNspecAccess().getVariablesVariableParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__EnumTypesAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getEnumTypesEnumerationTypeParserRuleCall_12_0()); }
		ruleEnumerationType
		{ after(grammarAccess.getURNspecAccess().getEnumTypesEnumerationTypeParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__ConcernsAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getConcernsConcernParserRuleCall_13_0()); }
		ruleConcern
		{ after(grammarAccess.getURNspecAccess().getConcernsConcernParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__UrnlinksAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getUrnlinksURNlinkParserRuleCall_14_0()); }
		ruleURNlink
		{ after(grammarAccess.getURNspecAccess().getUrnlinksURNlinkParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNspec__MetadataAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNspecAccess().getMetadataMetadataParserRuleCall_15_0()); }
		ruleMetadata
		{ after(grammarAccess.getURNspecAccess().getMetadataMetadataParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteURNspecAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__AuthorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getAuthorSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteURNspecAccess().getAuthorSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__CreatedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getCreatedSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteURNspecAccess().getCreatedSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__ModifiedAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getModifiedSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteURNspecAccess().getModifiedSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__SpecVersionAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getSpecVersionSTRINGTerminalRuleCall_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteURNspecAccess().getSpecVersionSTRINGTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteURNspec__UrnVersionAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteURNspecAccess().getUrnVersionSTRINGTerminalRuleCall_12_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteURNspecAccess().getUrnVersionSTRINGTerminalRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getConcernAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getConcernAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getConditionConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getConcernAccess().getConditionConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__ElementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getElementURNmodelElementCrossReference_5_0()); }
		(
			{ before(grammarAccess.getConcernAccess().getElementURNmodelElementQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConcernAccess().getElementURNmodelElementQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getConcernAccess().getElementURNmodelElementCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concern__ElementsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcernAccess().getElementsURNmodelElementCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getConcernAccess().getElementsURNmodelElementQualifiedNameParserRuleCall_6_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConcernAccess().getElementsURNmodelElementQualifiedNameParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getConcernAccess().getElementsURNmodelElementCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongName__LongnameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongNameAccess().getLongnameAlternatives_1_1_0()); }
		(rule__LongName__LongnameAlternatives_1_1_0)
		{ after(grammarAccess.getLongNameAccess().getLongnameAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getConditionAccess().getExpressionTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__InfoAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getInfoConcreteConditionParserRuleCall_3_1_0()); }
		ruleConcreteCondition
		{ after(grammarAccess.getConditionAccess().getInfoConcreteConditionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteCondition__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteConditionAccess().getLabelSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteConditionAccess().getLabelSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteCondition__DescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteConditionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteConditionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNlinkAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getURNlinkAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__LongNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNlinkAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
		ruleLongName
		{ after(grammarAccess.getURNlinkAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNlinkAccess().getTypeTextParserRuleCall_2_1_0()); }
		ruleText
		{ after(grammarAccess.getURNlinkAccess().getTypeTextParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__FromElemAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNlinkAccess().getFromElemURNmodelElementCrossReference_3_0()); }
		(
			{ before(grammarAccess.getURNlinkAccess().getFromElemURNmodelElementQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getURNlinkAccess().getFromElemURNmodelElementQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getURNlinkAccess().getFromElemURNmodelElementCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URNlink__ToElemAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURNlinkAccess().getToElemURNmodelElementCrossReference_5_0()); }
		(
			{ before(grammarAccess.getURNlinkAccess().getToElemURNmodelElementQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getURNlinkAccess().getToElemURNmodelElementQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getURNlinkAccess().getToElemURNmodelElementCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__ElemAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataAccess().getElemURNmodelElementCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getMetadataAccess().getElemURNmodelElementQualifiedNameParserRuleCall_1_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMetadataAccess().getElemURNmodelElementQualifiedNameParserRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getMetadataAccess().getElemURNmodelElementCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetadataAccess().getValueTextParserRuleCall_4_0()); }
		ruleText
		{ after(grammarAccess.getMetadataAccess().getValueTextParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getActorAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getActorAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__ImportanceAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0()); }
		ruleImportanceType
		{ after(grammarAccess.getActorAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__ImportanceQuantitativeAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0()); }
		ruleQuantitativeValue
		{ after(grammarAccess.getActorAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__ElemsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getElemsIntentionalElementParserRuleCall_5_0()); }
		ruleIntentionalElement
		{ after(grammarAccess.getActorAccess().getElemsIntentionalElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getTypeIntentionalElementTypeEnumRuleCall_0_0()); }
		ruleIntentionalElementType
		{ after(grammarAccess.getIntentionalElementAccess().getTypeIntentionalElementTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getIntentionalElementAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getIntentionalElementAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__ImportanceAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0()); }
		ruleImportanceType
		{ after(grammarAccess.getIntentionalElementAccess().getImportanceImportanceTypeEnumRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__ImportanceQuantitativeAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0()); }
		ruleQuantitativeValue
		{ after(grammarAccess.getIntentionalElementAccess().getImportanceQuantitativeQuantitativeValueParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__UnitAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getUnitSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getIntentionalElementAccess().getUnitSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntentionalElement__LinksSrcAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntentionalElementAccess().getLinksSrcElementLinkParserRuleCall_6_0()); }
		ruleElementLink
		{ after(grammarAccess.getIntentionalElementAccess().getLinksSrcElementLinkParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getNameQualifiedNameParserRuleCall_0_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getContributionAccess().getNameQualifiedNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__LongNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getLongNameLongNameParserRuleCall_0_1_0()); }
		ruleLongName
		{ after(grammarAccess.getContributionAccess().getLongNameLongNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__DestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getDestIntentionalElementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getContributionAccess().getDestIntentionalElementQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getContributionAccess().getDestIntentionalElementQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getContributionAccess().getDestIntentionalElementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__CorrelationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getCorrelationCorrelatedKeyword_3_0()); }
		(
			{ before(grammarAccess.getContributionAccess().getCorrelationCorrelatedKeyword_3_0()); }
			'correlated'
			{ after(grammarAccess.getContributionAccess().getCorrelationCorrelatedKeyword_3_0()); }
		)
		{ after(grammarAccess.getContributionAccess().getCorrelationCorrelatedKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__ContributionAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getContributionContributionTypeEnumRuleCall_5_0_0()); }
		ruleContributionType
		{ after(grammarAccess.getContributionAccess().getContributionContributionTypeEnumRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__QuantitativeContributionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionAccess().getQuantitativeContributionQuantitativeValueParserRuleCall_5_1_0()); }
		ruleQuantitativeValue
		{ after(grammarAccess.getContributionAccess().getQuantitativeContributionQuantitativeValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getNameQualifiedNameParserRuleCall_0_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDecompositionAccess().getNameQualifiedNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__LongNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getLongNameLongNameParserRuleCall_0_1_0()); }
		ruleLongName
		{ after(grammarAccess.getDecompositionAccess().getLongNameLongNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__DecompositionTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getDecompositionTypeDecompositionTypeEnumRuleCall_1_0()); }
		ruleDecompositionType
		{ after(grammarAccess.getDecompositionAccess().getDecompositionTypeDecompositionTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposition__DestAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionAccess().getDestIntentionalElementCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDecompositionAccess().getDestIntentionalElementQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDecompositionAccess().getDestIntentionalElementQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDecompositionAccess().getDestIntentionalElementCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getNameQualifiedNameParserRuleCall_0_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDependencyAccess().getNameQualifiedNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__LongNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getLongNameLongNameParserRuleCall_0_1_0()); }
		ruleLongName
		{ after(grammarAccess.getDependencyAccess().getLongNameLongNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getDestIntentionalElementCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getDestIntentionalElementQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDependencyAccess().getDestIntentionalElementQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getDestIntentionalElementCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtificialRule__LongNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtificialRuleAccess().getLongNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getArtificialRuleAccess().getLongNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategiesGroupAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStrategiesGroupAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategiesGroupAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getStrategiesGroupAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__EvalStrategyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategiesGroupAccess().getEvalStrategyEvaluationStrategyCrossReference_4_0()); }
		(
			{ before(grammarAccess.getStrategiesGroupAccess().getEvalStrategyEvaluationStrategyIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStrategiesGroupAccess().getEvalStrategyEvaluationStrategyIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getStrategiesGroupAccess().getEvalStrategyEvaluationStrategyCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrategiesGroup__EvalStrategiesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategiesGroupAccess().getEvalStrategiesEvaluationStrategyCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getStrategiesGroupAccess().getEvalStrategiesEvaluationStrategyIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStrategiesGroupAccess().getEvalStrategiesEvaluationStrategyIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getStrategiesGroupAccess().getEvalStrategiesEvaluationStrategyCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getEvaluationStrategyAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getEvaluationStrategyAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__InfoAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getInfoConcreteStrategyParserRuleCall_4_0()); }
		ruleConcreteStrategy
		{ after(grammarAccess.getEvaluationStrategyAccess().getInfoConcreteStrategyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__EvaluationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getEvaluationsEvaluationParserRuleCall_5_0()); }
		ruleEvaluation
		{ after(grammarAccess.getEvaluationStrategyAccess().getEvaluationsEvaluationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__IncludedStrategyAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyEvaluationStrategyCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyEvaluationStrategyIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyEvaluationStrategyIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategyEvaluationStrategyCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationStrategy__IncludedStrategiesAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesEvaluationStrategyCrossReference_6_2_1_0()); }
		(
			{ before(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesEvaluationStrategyIDTerminalRuleCall_6_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesEvaluationStrategyIDTerminalRuleCall_6_2_1_0_1()); }
		)
		{ after(grammarAccess.getEvaluationStrategyAccess().getIncludedStrategiesEvaluationStrategyCrossReference_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteStrategy__AuthorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteStrategyAccess().getAuthorSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConcreteStrategyAccess().getAuthorSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__IntElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getIntElementIntentionalElementCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEvaluationAccess().getIntElementIntentionalElementQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getEvaluationAccess().getIntElementIntentionalElementQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEvaluationAccess().getIntElementIntentionalElementCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__ExceedsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getExceedsExceedingKeyword_1_0()); }
		(
			{ before(grammarAccess.getEvaluationAccess().getExceedsExceedingKeyword_1_0()); }
			'exceeding'
			{ after(grammarAccess.getEvaluationAccess().getExceedsExceedingKeyword_1_0()); }
		)
		{ after(grammarAccess.getEvaluationAccess().getExceedsExceedingKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__QualitativeEvaluationAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_2_0_1_0_0()); }
		ruleQualitativeLabel
		{ after(grammarAccess.getEvaluationAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__EvaluationAssignment_2_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getEvaluationQuantitativeValueParserRuleCall_2_0_1_1_0()); }
		ruleQuantitativeValue
		{ after(grammarAccess.getEvaluationAccess().getEvaluationQuantitativeValueParserRuleCall_2_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__IndicatorEvalAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getIndicatorEvalIndicatorEvaluationParserRuleCall_2_1_0_0()); }
		ruleIndicatorEvaluation
		{ after(grammarAccess.getEvaluationAccess().getIndicatorEvalIndicatorEvaluationParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__ConversionAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getConversionIndicatorConversionCrossReference_2_1_2_0()); }
		(
			{ before(grammarAccess.getEvaluationAccess().getConversionIndicatorConversionIDTerminalRuleCall_2_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEvaluationAccess().getConversionIndicatorConversionIDTerminalRuleCall_2_1_2_0_1()); }
		)
		{ after(grammarAccess.getEvaluationAccess().getConversionIndicatorConversionCrossReference_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorEvaluation__RealWorldLabelAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorEvaluationAccess().getRealWorldLabelSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getIndicatorEvaluationAccess().getRealWorldLabelSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndicatorEvaluation__RealWorldValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorEvaluationAccess().getRealWorldValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIndicatorEvaluationAccess().getRealWorldValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearConversionAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLinearConversionAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearConversionAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getLinearConversionAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__UnitAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearConversionAccess().getUnitSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinearConversionAccess().getUnitSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__TargetValueAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearConversionAccess().getTargetValueINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getLinearConversionAccess().getTargetValueINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__ThresholdValueAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearConversionAccess().getThresholdValueINTTerminalRuleCall_9_0()); }
		RULE_INT
		{ after(grammarAccess.getLinearConversionAccess().getThresholdValueINTTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearConversion__WorstValueAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinearConversionAccess().getWorstValueINTTerminalRuleCall_11_0()); }
		RULE_INT
		{ after(grammarAccess.getLinearConversionAccess().getWorstValueINTTerminalRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getQualToQMappingsAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getQualToQMappingsAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__UnitAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getUnitSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getQualToQMappingsAccess().getUnitSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMappings__MappingsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingsAccess().getMappingsQualToQMappingParserRuleCall_6_0()); }
		ruleQualToQMapping
		{ after(grammarAccess.getQualToQMappingsAccess().getMappingsQualToQMappingParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__ExceedsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingAccess().getExceedsExceedingKeyword_0_0()); }
		(
			{ before(grammarAccess.getQualToQMappingAccess().getExceedsExceedingKeyword_0_0()); }
			'exceeding'
			{ after(grammarAccess.getQualToQMappingAccess().getExceedsExceedingKeyword_0_0()); }
		)
		{ after(grammarAccess.getQualToQMappingAccess().getExceedsExceedingKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__RealWorldLabelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingAccess().getRealWorldLabelSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getQualToQMappingAccess().getRealWorldLabelSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__QualitativeEvaluationAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_4_0_0()); }
		ruleQualitativeLabel
		{ after(grammarAccess.getQualToQMappingAccess().getQualitativeEvaluationQualitativeLabelEnumRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualToQMapping__EvaluationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualToQMappingAccess().getEvaluationQuantitativeValueParserRuleCall_4_1_0()); }
		ruleQuantitativeValue
		{ after(grammarAccess.getQualToQMappingAccess().getEvaluationQuantitativeValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextGroupAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getContributionContextGroupAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextGroupAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getContributionContextGroupAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__ContribAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextGroupAccess().getContribContributionContextCrossReference_4_0()); }
		(
			{ before(grammarAccess.getContributionContextGroupAccess().getContribContributionContextIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getContributionContextGroupAccess().getContribContributionContextIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getContributionContextGroupAccess().getContribContributionContextCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContextGroup__ContribsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextGroupAccess().getContribsContributionContextCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getContributionContextGroupAccess().getContribsContributionContextIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getContributionContextGroupAccess().getContribsContributionContextIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getContributionContextGroupAccess().getContribsContributionContextCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getContributionContextAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getContributionContextAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__ChangesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextAccess().getChangesContributionChangeParserRuleCall_4_0()); }
		ruleContributionChange
		{ after(grammarAccess.getContributionContextAccess().getChangesContributionChangeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__IncludedContextAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextAccess().getIncludedContextContributionContextCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getContributionContextAccess().getIncludedContextContributionContextIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getContributionContextAccess().getIncludedContextContributionContextIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getContributionContextAccess().getIncludedContextContributionContextCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionContext__IncludedContextsAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionContextAccess().getIncludedContextsContributionContextCrossReference_5_2_1_0()); }
		(
			{ before(grammarAccess.getContributionContextAccess().getIncludedContextsContributionContextIDTerminalRuleCall_5_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getContributionContextAccess().getIncludedContextsContributionContextIDTerminalRuleCall_5_2_1_0_1()); }
		)
		{ after(grammarAccess.getContributionContextAccess().getIncludedContextsContributionContextCrossReference_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__ContributionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionChangeAccess().getContributionContributionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getContributionChangeAccess().getContributionContributionQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getContributionChangeAccess().getContributionContributionQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getContributionChangeAccess().getContributionContributionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__NewContributionAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionChangeAccess().getNewContributionContributionTypeEnumRuleCall_2_0_0()); }
		ruleContributionType
		{ after(grammarAccess.getContributionChangeAccess().getNewContributionContributionTypeEnumRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContributionChange__NewQuantitativeContributionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContributionChangeAccess().getNewQuantitativeContributionQuantitativeValueParserRuleCall_2_1_0()); }
		ruleQuantitativeValue
		{ after(grammarAccess.getContributionChangeAccess().getNewQuantitativeContributionQuantitativeValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__SingletonAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUCMmapAccess().getSingletonSingletonKeyword_0_0()); }
		(
			{ before(grammarAccess.getUCMmapAccess().getSingletonSingletonKeyword_0_0()); }
			'singleton'
			{ after(grammarAccess.getUCMmapAccess().getSingletonSingletonKeyword_0_0()); }
		)
		{ after(grammarAccess.getUCMmapAccess().getSingletonSingletonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUCMmapAccess().getNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getUCMmapAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__LongNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUCMmapAccess().getLongNameLongNameParserRuleCall_3_0()); }
		ruleLongName
		{ after(grammarAccess.getUCMmapAccess().getLongNameLongNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__StubsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUCMmapAccess().getStubsStubDeclarationParserRuleCall_5_0()); }
		ruleStubDeclaration
		{ after(grammarAccess.getUCMmapAccess().getStubsStubDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__PathsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUCMmapAccess().getPathsPathParserRuleCall_6_0()); }
		rulePath
		{ after(grammarAccess.getUCMmapAccess().getPathsPathParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UCMmap__ComponentsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUCMmapAccess().getComponentsComponentRefParserRuleCall_7_0()); }
		ruleComponentRef
		{ after(grammarAccess.getUCMmapAccess().getComponentsComponentRefParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__StartPointAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getStartPointStartPointParserRuleCall_0_0()); }
		ruleStartPoint
		{ after(grammarAccess.getPathAccess().getStartPointStartPointParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__PathBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getPathBodyPathBodyParserRuleCall_1_0()); }
		rulePathBody
		{ after(grammarAccess.getPathAccess().getPathBodyPathBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__NameAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_0_1_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__LongNameAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_0_1_1_0()); }
		ruleLongName
		{ after(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__PreconditionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getPreconditionConditionParserRuleCall_0_2_0()); }
		ruleCondition
		{ after(grammarAccess.getStartPointAccess().getPreconditionConditionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__FailKindAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getFailKindFailureKindParserRuleCall_1_0_0()); }
		ruleFailureKind
		{ after(grammarAccess.getStartPointAccess().getFailKindFailureKindParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStartPointAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__LongNameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_1_2_0()); }
		ruleLongName
		{ after(grammarAccess.getStartPointAccess().getLongNameLongNameParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__CatchesAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartPointAccess().getCatchesSTRINGTerminalRuleCall_1_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getStartPointAccess().getCatchesSTRINGTerminalRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithRegularEnd__PathEndAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathWithRegularEndAccess().getPathEndRegularEndParserRuleCall_1_0()); }
		ruleRegularEnd
		{ after(grammarAccess.getPathWithRegularEndAccess().getPathEndRegularEndParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedEnd__ReferencedEndAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathWithReferencedEndAccess().getReferencedEndReferencedEndCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getPathWithReferencedEndAccess().getReferencedEndReferencedEndIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPathWithReferencedEndAccess().getReferencedEndReferencedEndIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getPathWithReferencedEndAccess().getReferencedEndReferencedEndCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__ReferencedStubAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubStubCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubStubQualifiedNameParserRuleCall_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubStubQualifiedNameParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getPathWithReferencedStubAccess().getReferencedStubStubCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathWithReferencedStub__IndexAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathWithReferencedStubAccess().getIndexPositiveIntegerParserRuleCall_1_2_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getPathWithReferencedStubAccess().getIndexPositiveIntegerParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathBodyNodes__PathNodesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathBodyNodesAccess().getPathNodesPathBodyNodeParserRuleCall_2_0_0()); }
		rulePathBodyNode
		{ after(grammarAccess.getPathBodyNodesAccess().getPathNodesPathBodyNodeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__RegularEndAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndpointWithConnectAccess().getRegularEndEndPointParserRuleCall_0_0()); }
		ruleEndPoint
		{ after(grammarAccess.getEndpointWithConnectAccess().getRegularEndEndPointParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndpointWithConnect__ConnectAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndpointWithConnectAccess().getConnectConnectParserRuleCall_1_1_0()); }
		ruleConnect
		{ after(grammarAccess.getEndpointWithConnectAccess().getConnectConnectParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRespRefAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getRespRefAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RespRef__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRespRefAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getRespRefAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrJoinAccess().getNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getOrJoinAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrJoin__LongNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrJoinAccess().getLongNameLongNameParserRuleCall_3_0()); }
		ruleLongName
		{ after(grammarAccess.getOrJoinAccess().getLongNameLongNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndJoinAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAndJoinAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndJoin__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndJoinAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getAndJoinAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__KindAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaitingPlaceAccess().getKindWAITKINDEnumRuleCall_0_0()); }
		ruleWAITKIND
		{ after(grammarAccess.getWaitingPlaceAccess().getKindWAITKINDEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaitingPlaceAccess().getNameQualifiedNameParserRuleCall_2_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getWaitingPlaceAccess().getNameQualifiedNameParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__LongNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaitingPlaceAccess().getLongNameLongNameParserRuleCall_2_1_0()); }
		ruleLongName
		{ after(grammarAccess.getWaitingPlaceAccess().getLongNameLongNameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitingPlace__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaitingPlaceAccess().getConditionConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getWaitingPlaceAccess().getConditionConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__KindAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getKindWAITKINDEnumRuleCall_1_0()); }
		ruleWAITKIND
		{ after(grammarAccess.getTimerAccess().getKindWAITKINDEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__NameAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getNameQualifiedNameParserRuleCall_3_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTimerAccess().getNameQualifiedNameParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__LongNameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getLongNameLongNameParserRuleCall_3_1_0()); }
		ruleLongName
		{ after(grammarAccess.getTimerAccess().getLongNameLongNameParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__TimeoutConditionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getTimeoutConditionConditionParserRuleCall_4_2_0()); }
		ruleCondition
		{ after(grammarAccess.getTimerAccess().getTimeoutConditionConditionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__TimeoutPathAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getTimeoutPathPathBodyParserRuleCall_4_3_0()); }
		rulePathBody
		{ after(grammarAccess.getTimerAccess().getTimeoutPathPathBodyParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__ConditionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getConditionConditionParserRuleCall_5_0()); }
		ruleCondition
		{ after(grammarAccess.getTimerAccess().getConditionConditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect__ConnectsToAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectAccess().getConnectsToConnectElementCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConnectAccess().getConnectsToConnectElementQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConnectAccess().getConnectsToConnectElementQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConnectAccess().getConnectsToConnectElementCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getFailurePointAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__LongNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
		ruleLongName
		{ after(grammarAccess.getFailurePointAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__ConditionAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_2_0_0_0()); }
		ruleCondition
		{ after(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__FailLabelAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_2_0_1_0()); }
		ruleFailureLabel
		{ after(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__FailLabelAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_2_1_0_0()); }
		ruleFailureLabel
		{ after(grammarAccess.getFailurePointAccess().getFailLabelFailureLabelParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailurePoint__ConditionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_2_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getFailurePointAccess().getConditionConditionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndPointAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getEndPointAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__LongNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndPointAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
		ruleLongName
		{ after(grammarAccess.getEndPointAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndPoint__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndPointAccess().getConditionConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getEndPointAccess().getConditionConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__NameAssignment_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkAccess().getNameQualifiedNameParserRuleCall_1_0_0_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getOrForkAccess().getNameQualifiedNameParserRuleCall_1_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__LongNameAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkAccess().getLongNameLongNameParserRuleCall_1_0_0_1_0()); }
		ruleLongName
		{ after(grammarAccess.getOrForkAccess().getLongNameLongNameParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__BodyAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkAccess().getBodyOrBodyParserRuleCall_1_0_2_0()); }
		ruleOrBody
		{ after(grammarAccess.getOrForkAccess().getBodyOrBodyParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__ConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkAccess().getConditionConditionParserRuleCall_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getOrForkAccess().getConditionConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrFork__ConnectingOrBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkAccess().getConnectingOrBodyPathBodyParserRuleCall_2_0()); }
		rulePathBody
		{ after(grammarAccess.getOrForkAccess().getConnectingOrBodyPathBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseOrForkBody__ElseBodyAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseOrForkBodyAccess().getElseBodyPathBodyParserRuleCall_1_1_0()); }
		rulePathBody
		{ after(grammarAccess.getElseOrForkBodyAccess().getElseBodyPathBodyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrForkBody__RegularBodyAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrForkBodyAccess().getRegularBodyRegularOrForkParserRuleCall_0()); }
		ruleRegularOrFork
		{ after(grammarAccess.getOrForkBodyAccess().getRegularBodyRegularOrForkParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularOrFork__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularOrForkAccess().getConditionConditionParserRuleCall_0_0()); }
		ruleCondition
		{ after(grammarAccess.getRegularOrForkAccess().getConditionConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularOrFork__PathBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularOrForkAccess().getPathBodyPathBodyParserRuleCall_1_0()); }
		rulePathBody
		{ after(grammarAccess.getRegularOrForkAccess().getPathBodyPathBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndForkAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAndForkAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__LongNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndForkAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
		ruleLongName
		{ after(grammarAccess.getAndForkAccess().getLongNameLongNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__PathbodyAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndForkAccess().getPathbodyPathBodyParserRuleCall_3_1_0()); }
		rulePathBody
		{ after(grammarAccess.getAndForkAccess().getPathbodyPathBodyParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndFork__ConnectingAndBodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndForkAccess().getConnectingAndBodyPathBodyParserRuleCall_5_0()); }
		rulePathBody
		{ after(grammarAccess.getAndForkAccess().getConnectingAndBodyPathBodyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__StubTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getStubTypeStubTypeParserRuleCall_0_0()); }
		ruleStubType
		{ after(grammarAccess.getStubAccess().getStubTypeStubTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__IndexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getIndexPositiveIntegerParserRuleCall_2_1_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getStubAccess().getIndexPositiveIntegerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__NameAssignment_3_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getNameQualifiedNameParserRuleCall_3_0_0_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStubAccess().getNameQualifiedNameParserRuleCall_3_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__LongNameAssignment_3_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getLongNameLongNameParserRuleCall_3_0_0_1_0()); }
		ruleLongName
		{ after(grammarAccess.getStubAccess().getLongNameLongNameParserRuleCall_3_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__ParamsAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getParamsStubParametersParserRuleCall_3_0_1_0()); }
		ruleStubParameters
		{ after(grammarAccess.getStubAccess().getParamsStubParametersParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__StubRefAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getStubRefStubDeclarationCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getStubAccess().getStubRefStubDeclarationQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getStubAccess().getStubRefStubDeclarationQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getStubAccess().getStubRefStubDeclarationCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__OutPathsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getOutPathsStubOutPathParserRuleCall_4_1_0()); }
		ruleStubOutPath
		{ after(grammarAccess.getStubAccess().getOutPathsStubOutPathParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stub__ConnectingStubBodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubAccess().getConnectingStubBodyPathBodyParserRuleCall_5_0()); }
		rulePathBody
		{ after(grammarAccess.getStubAccess().getConnectingStubBodyPathBodyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubParameters__PluginAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubParametersAccess().getPluginPluginBindingParserRuleCall_2_0()); }
		rulePluginBinding
		{ after(grammarAccess.getStubParametersAccess().getPluginPluginBindingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubDeclarationAccess().getNameQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getStubDeclarationAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__LongNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubDeclarationAccess().getLongNameLongNameParserRuleCall_1_0()); }
		ruleLongName
		{ after(grammarAccess.getStubDeclarationAccess().getLongNameLongNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubDeclaration__ParamsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubDeclarationAccess().getParamsStubParametersParserRuleCall_3_0()); }
		ruleStubParameters
		{ after(grammarAccess.getStubDeclarationAccess().getParamsStubParametersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__IndexAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubOutPathAccess().getIndexPositiveIntegerParserRuleCall_0_1_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getStubOutPathAccess().getIndexPositiveIntegerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__ThresholdAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubOutPathAccess().getThresholdPositiveIntegerParserRuleCall_1_2_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getStubOutPathAccess().getThresholdPositiveIntegerParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StubOutPath__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStubOutPathAccess().getPathPathBodyParserRuleCall_2_0()); }
		rulePathBody
		{ after(grammarAccess.getStubOutPathAccess().getPathPathBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluginBindingAccess().getConditionConditionParserRuleCall_0_0()); }
		ruleCondition
		{ after(grammarAccess.getPluginBindingAccess().getConditionConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__ReplicationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluginBindingAccess().getReplicationPositiveIntegerParserRuleCall_1_1_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getPluginBindingAccess().getReplicationPositiveIntegerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__MapAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluginBindingAccess().getMapUCMmapCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPluginBindingAccess().getMapUCMmapIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPluginBindingAccess().getMapUCMmapIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPluginBindingAccess().getMapUCMmapCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__BindingAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluginBindingAccess().getBindingBindingParserRuleCall_3_1_0()); }
		ruleBinding
		{ after(grammarAccess.getPluginBindingAccess().getBindingBindingParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluginBinding__BindingsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluginBindingAccess().getBindingsBindingParserRuleCall_3_2_1_0()); }
		ruleBinding
		{ after(grammarAccess.getPluginBindingAccess().getBindingsBindingParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__KindAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentRefAccess().getKindCOMPONENTKINDEnumRuleCall_1_0()); }
		ruleCOMPONENTKIND
		{ after(grammarAccess.getComponentRefAccess().getKindCOMPONENTKINDEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentRefAccess().getNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getComponentRefAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__LongNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentRefAccess().getLongNameLongNameParserRuleCall_3_0()); }
		ruleLongName
		{ after(grammarAccess.getComponentRefAccess().getLongNameLongNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__ElementAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentRefAccess().getElementBoundOptionParserRuleCall_4_1_0()); }
		ruleBoundOption
		{ after(grammarAccess.getComponentRefAccess().getElementBoundOptionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentRef__ElementsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentRefAccess().getElementsBoundOptionParserRuleCall_4_2_1_0()); }
		ruleBoundOption
		{ after(grammarAccess.getComponentRefAccess().getElementsBoundOptionParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundElement__ElemAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundElementAccess().getElemReferencedBoundElementCrossReference_0()); }
		(
			{ before(grammarAccess.getBoundElementAccess().getElemReferencedBoundElementQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getBoundElementAccess().getElemReferencedBoundElementQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getBoundElementAccess().getElemReferencedBoundElementCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongBoundElementAccess().getFromQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLongBoundElementAccess().getFromQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LongBoundElement__ToAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLongBoundElementAccess().getToQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLongBoundElementAccess().getToQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__MapStartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInBindingAccess().getMapStartStartPointCrossReference_0_0()); }
		(
			{ before(grammarAccess.getInBindingAccess().getMapStartStartPointQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getInBindingAccess().getMapStartStartPointQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getInBindingAccess().getMapStartStartPointCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InBinding__IndexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getInBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__MapEndAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutBindingAccess().getMapEndEndPointCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOutBindingAccess().getMapEndEndPointQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOutBindingAccess().getMapEndEndPointQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOutBindingAccess().getMapEndEndPointCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutBinding__IndexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0()); }
		rulePositiveInteger
		{ after(grammarAccess.getOutBindingAccess().getIndexPositiveIntegerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__ComponentInAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBindingAccess().getComponentInComponentRefCrossReference_0_0()); }
		(
			{ before(grammarAccess.getComponentBindingAccess().getComponentInComponentRefQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getComponentBindingAccess().getComponentInComponentRefQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getComponentBindingAccess().getComponentInComponentRefCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBinding__ComponentOutAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBindingAccess().getComponentOutComponentRefCrossReference_2_0()); }
		(
			{ before(grammarAccess.getComponentBindingAccess().getComponentOutComponentRefQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getComponentBindingAccess().getComponentOutComponentRefQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getComponentBindingAccess().getComponentOutComponentRefCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailureLabel__FailureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailureLabelAccess().getFailureSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFailureLabelAccess().getFailureSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioGroupAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getScenarioGroupAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioGroupAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getScenarioGroupAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__ScenarioAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioGroupAccess().getScenarioReferenceToScenarioDefParserRuleCall_4_0()); }
		ruleReferenceToScenarioDef
		{ after(grammarAccess.getScenarioGroupAccess().getScenarioReferenceToScenarioDefParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioGroup__ScenariosAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioGroupAccess().getScenariosReferenceToScenarioDefParserRuleCall_5_1_0()); }
		ruleReferenceToScenarioDef
		{ after(grammarAccess.getScenarioGroupAccess().getScenariosReferenceToScenarioDefParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getScenarioDefAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__LongNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getLongNameLongNameParserRuleCall_2_0()); }
		ruleLongName
		{ after(grammarAccess.getScenarioDefAccess().getLongNameLongNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__PreconditionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getPreconditionsConditionParserRuleCall_4_1_0()); }
		ruleCondition
		{ after(grammarAccess.getScenarioDefAccess().getPreconditionsConditionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__PostconditionsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getPostconditionsConditionParserRuleCall_5_1_0()); }
		ruleCondition
		{ after(grammarAccess.getScenarioDefAccess().getPostconditionsConditionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__InitializationsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getInitializationsInitializationParserRuleCall_6_1_0()); }
		ruleInitialization
		{ after(grammarAccess.getScenarioDefAccess().getInitializationsInitializationParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__StartPointAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getStartPointQualifiedReferenceToStartPointParserRuleCall_7_1_0()); }
		ruleQualifiedReferenceToStartPoint
		{ after(grammarAccess.getScenarioDefAccess().getStartPointQualifiedReferenceToStartPointParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__StartPointsAssignment_7_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getStartPointsQualifiedReferenceToStartPointParserRuleCall_7_2_1_0()); }
		ruleQualifiedReferenceToStartPoint
		{ after(grammarAccess.getScenarioDefAccess().getStartPointsQualifiedReferenceToStartPointParserRuleCall_7_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__EndPointAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getEndPointQualifiedReferenceToEndPointParserRuleCall_8_1_0()); }
		ruleQualifiedReferenceToEndPoint
		{ after(grammarAccess.getScenarioDefAccess().getEndPointQualifiedReferenceToEndPointParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__EndPointsAssignment_8_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getEndPointsQualifiedReferenceToEndPointParserRuleCall_8_2_1_0()); }
		ruleQualifiedReferenceToEndPoint
		{ after(grammarAccess.getScenarioDefAccess().getEndPointsQualifiedReferenceToEndPointParserRuleCall_8_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__IncludedScenarioAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getIncludedScenarioReferenceToScenarioDefParserRuleCall_9_1_0()); }
		ruleReferenceToScenarioDef
		{ after(grammarAccess.getScenarioDefAccess().getIncludedScenarioReferenceToScenarioDefParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDef__IncludedScenariosAssignment_9_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDefAccess().getIncludedScenariosReferenceToScenarioDefParserRuleCall_9_2_1_0()); }
		ruleReferenceToScenarioDef
		{ after(grammarAccess.getScenarioDefAccess().getIncludedScenariosReferenceToScenarioDefParserRuleCall_9_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__VariableAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getVariableReferenceToVariableParserRuleCall_0_0_0()); }
		ruleReferenceToVariable
		{ after(grammarAccess.getInitializationAccess().getVariableReferenceToVariableParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getValueExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInitializationAccess().getValueExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__VariableAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getVariableReferenceToEnumVariableParserRuleCall_1_0_0()); }
		ruleReferenceToEnumVariable
		{ after(grammarAccess.getInitializationAccess().getVariableReferenceToEnumVariableParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__ValueAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getValueEnumLiteralParserRuleCall_1_2_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getInitializationAccess().getValueEnumLiteralParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__EnumerationTypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getEnumerationTypeReferenceToEnumerationTypeParserRuleCall_0_2_0()); }
		ruleReferenceToEnumerationType
		{ after(grammarAccess.getVariableAccess().getEnumerationTypeReferenceToEnumerationTypeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getVariableAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getValueEnumLiteralParserRuleCall_3_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getEnumerationTypeAccess().getValueEnumLiteralParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__ValuesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getValuesEnumLiteralParserRuleCall_4_1_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getEnumerationTypeAccess().getValuesEnumLiteralParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToScenarioDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceToScenarioDefAccess().getNameQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getReferenceToScenarioDefAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToScenarioDef__LongNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceToScenarioDefAccess().getLongNameLongNameParserRuleCall_1_0()); }
		ruleLongName
		{ after(grammarAccess.getReferenceToScenarioDefAccess().getLongNameLongNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ContentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getContentTextContentParserRuleCall_0()); }
		ruleTextContent
		{ after(grammarAccess.getTextAccess().getContentTextContentParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
